{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"09ca8771150b3c1b1ff4fa346b07891204536f23","modified":1503752296221},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1504451374220},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1504451374221},{"_id":"themes/next/.gitignore","hash":"b935cc0e5b099ebd343ca1766e02f65138c13dd0","modified":1504451374228},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1504451374230},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1504451374229},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1504451374229},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1504451374221},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1504451374231},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1504451374232},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1504451374233},{"_id":"themes/next/README.cn.md","hash":"59e323ce21535d561507c9ecc984b7c4dcb61514","modified":1504451374234},{"_id":"themes/next/README.md","hash":"52bad95ac4c88371d3ae9d9ea6e0e14b8c723edf","modified":1504451374235},{"_id":"themes/next/bower.json","hash":"63c38f50fb54b25bf5101f566189f9e5b3a6ef0e","modified":1504451374237},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1504451374238},{"_id":"themes/next/package.json","hash":"85a77bafb3d1e958b82e52528b7a95fcd59efda9","modified":1504451374643},{"_id":"source/_posts/centos7-开放端口.md","hash":"2995b4b591669235a141a8a8771835bfc46af603","modified":1509876925250},{"_id":"source/_posts/centos7-安装mysql-转.md","hash":"befce77f7fdf96409e9150606f0ab9aa36c52e69","modified":1509808504097},{"_id":"source/_posts/hexo-next-搜索-algolia.md","hash":"ea08c85a11da492c6aa82b014471f1cfe8db69fa","modified":1509376080240},{"_id":"source/_posts/vscode快捷键记录.md","hash":"046fb7481abc333b96123b258f0e8d7e8e3b4cb8","modified":1505060896129},{"_id":"source/_posts/idea快捷键记录.md","hash":"67c89c94a0a6eeefd44a8a554bffff803dd7d911","modified":1505060609507},{"_id":"source/_posts/linux笔记-修改语言.md","hash":"2c18722eab727f2b2b4b46e5d7cbab4e6707e48c","modified":1509896871172},{"_id":"source/_posts/vagrant 创建virtualBox虚拟机.md","hash":"dcc87f6d6817d2ebcbc81b5238c6fe456270984f","modified":1509808001385},{"_id":"source/_posts/大数据01-linux安装及基本命令.md","hash":"5d7459904672d4f98562e8608600e6fc18f95ea6","modified":1509984800500},{"_id":"source/_posts/大数据02-01 linux命令继续学习.md","hash":"883225000333e59daeec416edef954b52d1efab7","modified":1509984795524},{"_id":"source/_posts/大数据02-03 shell编程语法讲解.md","hash":"555c850b526ae3025b4db25a743e138863e36309","modified":1509984829837},{"_id":"source/about/index.md","hash":"be502ae1fbbe7406172833be2608307b68eaad71","modified":1503813653601},{"_id":"source/tags/index.md","hash":"6d7ba436ea280a408be9a473466fec577f18daf4","modified":1503813643807},{"_id":"source/categories/index.md","hash":"460fef8ab3e31296379bc064f1aa96b875706f76","modified":1503813637640},{"_id":"source/_posts/大数据02-02-linux命令继续学习-yum.md","hash":"d976975545a300ba11e245a3ab7a224b5e9dad82","modified":1509984820065},{"_id":"source/_posts/大数据02-04-shell编程-sed命令.md","hash":"4d6c4c8ced0e24606d52ccb3878f542f3e6bb94f","modified":1509984832587},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1504451374190},{"_id":"themes/next/.git/config","hash":"8e94cc015a498d35202e9fd57e44b3c51e1e5634","modified":1504451374203},{"_id":"themes/next/.git/index","hash":"fe7d92befe4c31416ecb4f75de22591d9693992a","modified":1510239678717},{"_id":"source/_posts/终于有了自己的博客.md","hash":"83de08effabe88e706696050098cf307f6385fa2","modified":1504452172890},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1504451349458},{"_id":"source/_posts/大数据02-05-shell编程-awk命令.md","hash":"0889d1d652906e175b8f475c98105f47cb24e723","modified":1509984836015},{"_id":"source/_posts/记录下hexo常用命令自己方便看.md","hash":"4c5821e952c71956ee363920b4bd356cc711f0c1","modified":1504452632771},{"_id":"themes/next/.git/packed-refs","hash":"fc779a1260038315f09297a3d9b5c480725933b4","modified":1504451374178},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1504451374225},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"3f4a2a15c2e61d6db1116c3e03d1456df96baa10","modified":1504451374225},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"25e37338aeb69b07bfba81b5f8659cde92238ba9","modified":1504451374226},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1504451374227},{"_id":"themes/next/languages/de.yml","hash":"ee6262473faa1fa55e3dc7b0bb6542f4f6a275c8","modified":1504451374239},{"_id":"themes/next/languages/default.yml","hash":"2443657cf60284ecf01c60a5e20acd406f321d88","modified":1504451374240},{"_id":"themes/next/languages/en.yml","hash":"2443657cf60284ecf01c60a5e20acd406f321d88","modified":1504451374241},{"_id":"themes/next/languages/id.yml","hash":"58c9886ccd224cee3db6f9b9e1a86dcd4ff47995","modified":1504451374242},{"_id":"themes/next/languages/fr-FR.yml","hash":"c6f3a38a6c27d0815ef72d66020805408aa24019","modified":1504451374242},{"_id":"themes/next/languages/pt-BR.yml","hash":"5e160fa8c8bd1f16b50db161d5bc8ae2ebd6a0c5","modified":1504451374245},{"_id":"themes/next/languages/ja.yml","hash":"6ba8858255b4cae5e00f5fabd1cfaea3c98a34c2","modified":1504451374243},{"_id":"themes/next/languages/ko.yml","hash":"fbfad308103fb95c635609419bfa3420cb69d646","modified":1504451374245},{"_id":"themes/next/languages/pt.yml","hash":"1141a4896986de6e2383c5694c0359eaa22fb9b4","modified":1504451374246},{"_id":"themes/next/languages/zh-Hans.yml","hash":"0b9ce7d62e7d55235a2770817a40e84577ce38c1","modified":1504451374248},{"_id":"themes/next/languages/ru.yml","hash":"43a8fb18dbfeaeed71268d75eb4c542061766419","modified":1504451374247},{"_id":"themes/next/languages/zh-hk.yml","hash":"13b2808d632c27748a38a752457d4538c37b8ebb","modified":1504451374248},{"_id":"themes/next/languages/zh-tw.yml","hash":"a91f6c8fa19044afac162a1c73e03836e9460bc5","modified":1504451374249},{"_id":"themes/next/_config.yml","hash":"5ed3403ef34d4d6b986dd54aabdef0626683dcaf","modified":1510479253635},{"_id":"themes/next/layout/_layout.swig","hash":"fb55ab56e2d478cadc0c3906adfbc4a13620408e","modified":1504451374253},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1504451374638},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1504451374642},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1504451374640},{"_id":"themes/next/layout/page.swig","hash":"dbff0302b4bfabb51556a197bf65190eb30361f0","modified":1504451374641},{"_id":"themes/next/scripts/merge-configs.js","hash":"3ce1be32bb77ee19da25e8dae7dc04e2afc46ca1","modified":1504451374645},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1504451374640},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1504451374646},{"_id":"themes/next/layout/post.swig","hash":"182a99b1f6db0350106c6bb480fede0bbdb7e40f","modified":1504451374641},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1504451374643},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1504451374891},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1504451374892},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1504451374893},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1504451374749},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1504451349820},{"_id":"themes/next/.git/logs/HEAD","hash":"1e1d812e2b7ff7bedb43e931cc7361ce241959d4","modified":1504451374194},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1504451349730},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1504451349809},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1504451349811},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1504451349816},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1504451349812},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1504451349815},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1504451349808},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1504451374251},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1504451349817},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1504451349813},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1504451349818},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1504451374252},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"0f59a51b5cea3e8a7c078db486626cddc2978622","modified":1504451374255},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1504451374254},{"_id":"themes/next/layout/_macro/post.swig","hash":"9896b34a7edc112c03b393a1602a616710a66ae1","modified":1504451374256},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1504451374259},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"4a7306f92e16c468c6ebbd75382fd24e0d5f0760","modified":1504451374258},{"_id":"themes/next/layout/_macro/reward.swig","hash":"5b1e91c2f6f88fbecd426cd0727e7b7854c6cc1d","modified":1504451374257},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1504451374573},{"_id":"themes/next/layout/_partials/comments.swig","hash":"fc0ff72b3a8ab25029a070acee066d9eaa0b0493","modified":1504451374261},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1504451374576},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1504451374579},{"_id":"themes/next/layout/_partials/head.swig","hash":"71040aa738c57c24f8b703875d58ab7a262fe075","modified":1504451374564},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1504451374572},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1504451374628},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1504451374628},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1504451374629},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1504451374631},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1504451374598},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1504451374597},{"_id":"themes/next/layout/_partials/footer.swig","hash":"dc2a0699152da26de23cf68314d919c7f1b91b77","modified":1504451374561},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1504451374629},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1504451374631},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"53c894e6f3573c662dc4e4f7b5a6f1a32f1a8c94","modified":1504451374607},{"_id":"themes/next/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1504451374647},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1504451374647},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1504451374648},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1504451374648},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1504451374649},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1504451374650},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1504451374651},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1504451374650},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1504451374652},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1504451374748},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1504451374749},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1504451374751},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1504451374750},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1504451374751},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1504451374752},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1504451374753},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1504451374756},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1504451374756},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1504451374755},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1504451374754},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1504451374754},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1504451374758},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1504451374757},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1504451374758},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1504451374604},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1504451374604},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1504451374725},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1504451374725},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1504451374727},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1504451374745},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1504451374747},{"_id":"themes/next/.git/refs/heads/master","hash":"15d5d369c341a52fd376076530e476a6bcce3498","modified":1504451374193},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1504451374566},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1504451374582},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1504451374583},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1504451374585},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1504451374588},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1504451374590},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1504451374608},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1504451374610},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"8ed117eeeac17d562a54ec6be556988be0ec67ba","modified":1504451374594},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1504451374592},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1504451374612},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1504451374613},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1504451374609},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1504451374613},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1504451374614},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1504451374617},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1504451374611},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1504451374618},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1504451374615},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1504451374618},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1504451374620},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1504451374622},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"92ea45b877b1fec2010c7b409f121c986ee5075b","modified":1504451374623},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1504451374624},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1504451374626},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"602104d7ac47f7888d97e810419e58593a79e8ba","modified":1504451374625},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1504451374621},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1504451374622},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1504451374635},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1504451374636},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1504451374601},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1504451374603},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1504451374605},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1504451374637},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1504451374636},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1504451374569},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1504451374726},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1504451374724},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1504451374726},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1504451374723},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1504451374744},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"38a9f43973704afe7e8ca50f35a25940ea96e3cf","modified":1504451374744},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"89f88b9c9a191dd980f799fc36b83b63290d3ac9","modified":1504451374746},{"_id":"themes/next/source/css/_variables/base.styl","hash":"a627633d3bb70b8501572b18037def478beb7017","modified":1504451374747},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1504451374759},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1504451374760},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1504451374761},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1504451374761},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1504451374762},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1504451374766},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1504451374763},{"_id":"themes/next/source/js/src/motion.js","hash":"6d34f2a6ea6d73f7715d00f8b175854cd02baa36","modified":1504451374764},{"_id":"themes/next/source/js/src/post-details.js","hash":"50fa390554f0fb467d8eb84ac8eff2cffb13fe67","modified":1504451374764},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1504451374766},{"_id":"themes/next/source/js/src/utils.js","hash":"f90c7611dc665b5e321cb81c0bd689445bab438a","modified":1504451374767},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1504451374778},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"82fee688910efc644d3d1c3305c6ae28ba3f38f9","modified":1504451374784},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1504451374785},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1504451374786},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1504451374811},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1504451374811},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1504451374783},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1504451374810},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1504451374812},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1504451374836},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1504451374813},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1504451374836},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1504451374805},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1504451374838},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1504451374807},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1504451374837},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1504451374838},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1504451374839},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1504451374833},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1504451374806},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1504451374807},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1504451374841},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1504451374842},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1504451374840},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1504451374841},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1504451374843},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1504451374845},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1504451374843},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1504451374844},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1504451374846},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1504451374846},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1504451374844},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1504451374847},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1504451374848},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1504451374847},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1504451374862},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1504451374863},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1504451374872},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1504451374884},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1504451374889},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1504451374888},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1504451374890},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1504451374863},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1504451374835},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1504451374188},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"1e1d812e2b7ff7bedb43e931cc7361ce241959d4","modified":1504451374196},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1504451374634},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1504451374634},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"b0e2a0e27a32f72cb283fe4b33d010d485113379","modified":1504451374655},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1504451374656},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1504451374656},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1504451374655},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1504451374657},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1504451374687},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1504451374719},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1504451374721},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1504451374719},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1504451374668},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"9a45ed506274f655b11995c408cc566b16dada79","modified":1504451374720},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1504451374721},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1504451374729},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1504451374730},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1504451374722},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1504451374731},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"c9b6e70e67a0b2c41a03181302379afdc26da5b6","modified":1504451374718},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1504451374732},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1504451374736},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1504451374737},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1504451374729},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1504451374738},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1504451374737},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1504451374738},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1504451374740},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"ce272226a1570f5f7c70243b751a5b0fe1671a88","modified":1504451374731},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"a509016ac0227a1903d7f0ca3a825cf9ac7fde33","modified":1504451374728},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1504451374732},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1504451374742},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1504451374743},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"c4358416f0a116d7f4037542fa3b385947e80908","modified":1504451374765},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1504451374741},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"d4cf54b33e1bb8746a77ce2446d581d01be5329d","modified":1504451374741},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"36026bc6e8d3a631f109d766fdd21857697650a0","modified":1504451374742},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1504451374787},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1504451374773},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1504451374776},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1504451374775},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1504451374787},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1504451374795},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1504451374789},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1504451374796},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1504451374788},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1504451374803},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1504451374802},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1504451374804},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1504451374814},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1504451374815},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1504451374815},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1504451374809},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1504451374809},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1504451374871},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1504451374871},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1504451374774},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1504451374831},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1504451374832},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"1e1d812e2b7ff7bedb43e931cc7361ce241959d4","modified":1504451374187},{"_id":"themes/next/.git/objects/pack/pack-5f62b2da9f79aae962d798e924663b7dfcf03626.idx","hash":"46aedabc50e19e43949159dbd123d66c7a77dd8c","modified":1504451374082},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1504451374887},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1504451374658},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1504451374661},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1510239677710},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1504451374660},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1504451374662},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1504451374661},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1504451374663},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"4783f85872bc7e218c1522a5c1c68cd27a5922db","modified":1504451374669},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"b3b783511bbd94af7e941abf8ff411885db7395b","modified":1504451374663},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1504451374664},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1504451374671},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1504451374672},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1504451374670},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1504451374673},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"58f9e6aba94733244a87d2ba5966c5a009486509","modified":1504451374672},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1504451374676},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1504451374676},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1504451374673},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"f363a544aa800a2a5ed97c40887fe9743f67b03b","modified":1504451374675},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1504451374675},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1504451374678},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"2cb09973d29a8e34e2a3425ac6e0938296970d8e","modified":1504451374679},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1504451374678},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"5f3510419161ec22ca88cce6a181ddad61de9e86","modified":1504451374680},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1504451374682},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1504451374681},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1504451374682},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1504451374683},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1504451374682},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"ce884e7051764d01a74050ce6b2da52952ca1881","modified":1504451374679},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1504451374686},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"28a8737c090fbffd188d73a00b42e90b9ee57df2","modified":1504451374684},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1504451374692},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1504451374708},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1504451374707},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1504451374685},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"8e00d9a0bdf35ffc0a7fa387fa294b953c2d28fc","modified":1504451374686},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1504451374688},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1504451374711},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1504451374689},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1504451374710},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1504451374712},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1504451374713},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1504451374714},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"962b654f8f7cbd18a298126a403d236ed4540516","modified":1504451374709},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1504451374716},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"37e406ec42b7a53c72395bdbaa434270019e7179","modified":1504451374717},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1504451374709},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1504451374665},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1504451374666},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1504451374666},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1504451374667},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1504451374712},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1504451374734},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1504451374716},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1504451374739},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1504451374734},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1504451374714},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1504451374668},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1504451374770},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1504451374770},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1504451374771},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1504451374772},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1504451374797},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1504451374798},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1504451374799},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1504451374822},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1504451374800},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1504451374800},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1504451374819},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1504451374801},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1504451374830},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1504451374782},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1504451374869},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1504451374827},{"_id":"themes/next/.git/objects/pack/pack-5f62b2da9f79aae962d798e924663b7dfcf03626.pack","hash":"d312772aeaa62a6bf757dc7ccf76813ef30e8e1f","modified":1504451374091},{"_id":"public/atom.xml","hash":"da58556c3a4ab6461a68e7727db3595183fd781c","modified":1510497083276},{"_id":"public/content.json","hash":"f1693b4009ef3c59dad4c3b555bb0f4bf5c53746","modified":1510497086605},{"_id":"public/sitemap.xml","hash":"7184c4ed703869d14780c8c6d17d327b6b32712a","modified":1510497083277},{"_id":"public/about/index.html","hash":"222bededc114301f943f88fa89ae2788c66ebed6","modified":1510497619610},{"_id":"public/categories/index.html","hash":"5348e56c3b54096808e4833a9f442ac781a17dd4","modified":1510497619621},{"_id":"public/tags/index.html","hash":"55c63fbb76fec406eaa8a208e6977ce5fbec7f08","modified":1510497086760},{"_id":"public/2017/11/04/centos7-开放端口/index.html","hash":"6c83aac9b6d83c38796f5a3ba309cdfc2ba9ce9d","modified":1510497086773},{"_id":"public/2017/09/11/vscode快捷键记录/index.html","hash":"f3565081ae8b98be6a9a00517cdd5bb9f226d957","modified":1510497086760},{"_id":"public/2017/09/03/idea快捷键记录/index.html","hash":"edc9f430b62979076decb58628c63403a905a203","modified":1510497086760},{"_id":"public/2017/09/03/记录下hexo常用命令自己方便看/index.html","hash":"e9fce3955b2a6605f314fdaf19e16abe009e3f98","modified":1510497086760},{"_id":"public/2017/08/27/终于有了自己的博客/index.html","hash":"de36bd1bfa5972c587c31ee77c124c14d9cb633d","modified":1510497086761},{"_id":"public/archives/page/2/index.html","hash":"86f97f4c8726c85608a3513a28b1e8921c3784d4","modified":1510497086761},{"_id":"public/archives/2017/page/2/index.html","hash":"705a515138d3a5f455d8405b77688a40937f3c29","modified":1510497086761},{"_id":"public/archives/2017/08/index.html","hash":"6ceaccf04bc474360553741f188f8eebf14109fa","modified":1510497086761},{"_id":"public/archives/2017/09/index.html","hash":"dc7a82f57b667451b4e2fc332f2cbee66d6e3e6a","modified":1510497086761},{"_id":"public/archives/2017/10/index.html","hash":"41c7e6a5bd749bfc47f893740890f67b9981df40","modified":1510497086761},{"_id":"public/archives/2017/11/index.html","hash":"30ffefa274b7a4c2bebfdfcfba291d7f8be2d41f","modified":1510497086761},{"_id":"public/categories/学习/index.html","hash":"c09502f000397cc5f9fb43e005aeab9dc9c43107","modified":1510497086761},{"_id":"public/categories/工具/index.html","hash":"9665b376fc14d3dc9007a907afd2c2d3ba3dce82","modified":1510497086761},{"_id":"public/categories/大数据学习笔记/index.html","hash":"f38426bd16e787320124ea567ce7166690960db1","modified":1510497086761},{"_id":"public/categories/essay/index.html","hash":"08574a956c548e1ec317a8824ab812a3dc12e83e","modified":1510497086761},{"_id":"public/tags/大数据/index.html","hash":"741a06202fd238d5d2fc29a2ebdb19b9c4c81bb8","modified":1510497086761},{"_id":"public/tags/linux/index.html","hash":"9b837fa3fcf17d9dbdb16b39fbf67df688a0cce4","modified":1510497086761},{"_id":"public/tags/centos7/index.html","hash":"404e4e5b3f2edea0c2a1c610a261d9d092cdaf40","modified":1510497086761},{"_id":"public/tags/mysql/index.html","hash":"c02956caca72651daf3dbb835ead12e45f44a66f","modified":1510497086762},{"_id":"public/tags/vscode/index.html","hash":"dd783073318c1ccb2495eed0b6d35276a33fa089","modified":1510497086762},{"_id":"public/tags/快捷键/index.html","hash":"ea355cb20ac0b8e0f9c767789fce3911ff282c61","modified":1510497086762},{"_id":"public/tags/hexo/index.html","hash":"97f4cc68a8ae6dea870a10423a87b578d36f52ac","modified":1510497086762},{"_id":"public/tags/idea/index.html","hash":"3528cbf593921d181b6a2ec27d5c85fa446708ee","modified":1510497086762},{"_id":"public/tags/linux命令/index.html","hash":"209a00c00acbb3aebffff8a998476ea1ac382bbf","modified":1510497086762},{"_id":"public/tags/vagrant/index.html","hash":"35b055af969599df0ca7084184dc94a560b366f3","modified":1510497086762},{"_id":"public/2017/11/06/大数据02-05-shell编程-awk命令/index.html","hash":"fae35f1891905cf680dfe4f0bd3efbf5793ae2fe","modified":1510497086762},{"_id":"public/2017/11/06/大数据02-04-shell编程-sed命令/index.html","hash":"f08fb369134c26c72d5a60f3dcf1cc769fe4f034","modified":1510497086763},{"_id":"public/2017/11/06/大数据02-03 shell编程语法讲解/index.html","hash":"9bdddd678c0a37438dc76b033cb9f27c9e2c0291","modified":1510497086762},{"_id":"public/2017/11/05/linux笔记-修改语言/index.html","hash":"b5ab1e247802eb0a998e33701789ad47085ffd93","modified":1510497086762},{"_id":"public/2017/11/04/vagrant 创建virtualBox虚拟机/index.html","hash":"a20d88c18caae42c8b1e1ed0f34c9484bce8e9fa","modified":1510497086762},{"_id":"public/2017/11/04/centos7-安装mysql-转/index.html","hash":"ba135f50c2edc103c51e2a809e65840391d131c5","modified":1510497086762},{"_id":"public/2017/11/01/大数据02-02-linux命令继续学习-yum/index.html","hash":"364f1998bc036c82a790f0768ceb7769198edeb7","modified":1510497086762},{"_id":"public/2017/10/30/hexo-next-搜索-algolia/index.html","hash":"4e4a79eb795ed42a28f5479af2d29b5a54ac95eb","modified":1510497086773},{"_id":"public/2017/10/30/大数据01-linux安装及基本命令/index.html","hash":"b0d4a10c1d7a7514868e1462800949526b3b15da","modified":1510497086763},{"_id":"public/2017/10/29/大数据02-01 linux命令继续学习/index.html","hash":"5db80e11df441c16861a7eaf97752789a18ccb36","modified":1510497086763},{"_id":"public/archives/index.html","hash":"9268d554eaa62008b436c408798ac3c70dc3cd0f","modified":1510497086763},{"_id":"public/archives/2017/index.html","hash":"5e733dc6e07383584da7546ed947eaf9c6b765dd","modified":1510497086763},{"_id":"public/index.html","hash":"62fc28dd8b33888e43cec184d83b06e557efd8dd","modified":1510497086763},{"_id":"public/page/2/index.html","hash":"cb3acf0e27926379ffa72318071ad4e5b8748529","modified":1510497086763},{"_id":"public/CNAME","hash":"09ca8771150b3c1b1ff4fa346b07891204536f23","modified":1510496248194},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1510496248194},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1510496248194},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1510496248194},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1510496248194},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1510496248194},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1510496248195},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1510496248195},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1510496248195},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1510496248195},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1510496248195},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1510496248195},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1510496248195},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1510496248195},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1510496248195},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1510496248195},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1510496248195},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1510496248195},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1510496248195},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1510496248195},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1510496248195},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1510496248195},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1510496248196},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1510496248196},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1510496248196},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1510496248196},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1510496248196},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1510496248196},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1510496248196},{"_id":"public/assets/algolia/algoliasearchLite.min.js","hash":"2290f8391558fcdf90bcc3d31796a278972024d3","modified":1510496248196},{"_id":"public/assets/algolia/algoliasearch.min.js","hash":"46ec23955d31954e4e94793ffb5119c1b91dc6e7","modified":1510496248196},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1510496249227},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1510496249234},{"_id":"public/assets/algolia/algoliasearchLite.js","hash":"6b7e65178f13563788627999e75c86038bc88091","modified":1510496249240},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1510496249253},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1510496249254},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1510496249255},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1510496249255},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1510496249255},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1510496249255},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1510496249255},{"_id":"public/js/src/post-details.js","hash":"0693695a9512641daff63d99da772625a058ab18","modified":1510496249255},{"_id":"public/js/src/motion.js","hash":"da146caf488078a634d961debf2a71ce4106018c","modified":1510496249255},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1510496249255},{"_id":"public/js/src/utils.js","hash":"2917c39c75b14b6dab7e1c46ab4d87b4df9fcd5d","modified":1510496249255},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1510496249255},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1510496249255},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1510496249255},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1510496249255},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1510496249256},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1510496249256},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1510496249256},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1510496249256},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1510496249256},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1510496249256},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1510496249256},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1510496249256},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1510496249256},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1510496249256},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1510496249256},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1510496249256},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1510496249256},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1510496249256},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1510496249256},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1510496249256},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1510496249256},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1510496249257},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1510496249257},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1510496249257},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1510496249257},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1510496249257},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1510496249257},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1510496249257},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1510496249257},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1510496249257},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1510496249257},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1510496249258},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1510496249258},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1510496249258},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1510496249258},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1510496249258},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1510496249258},{"_id":"public/css/main.css","hash":"a2f376023a65efcb7fbe29421b9c08fc34d5f969","modified":1510496249258},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1510496249258},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1510496249258},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1510496249258},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1510496249258},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1510496249258},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1510496249258},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1510496249258},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1510496249258},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1510496249259},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1510496249259},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1510496249259},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1510496249259},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1510496249259},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1510496249259},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1510496249259},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1510496249259},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1510496249259},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1510496249259},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1510496249260},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1510496249260},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1510496249260},{"_id":"public/assets/algolia/algoliasearch.js","hash":"95c1797aa497fb7f5de6ed4c89019744215203f7","modified":1510496249260},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1510496249333}],"Category":[{"name":"学习","_id":"cj9wugoz80004h4v7c7aflco4"},{"name":"工具","_id":"cj9wugozo000fh4v7uw6i6t6m"},{"name":"大数据学习笔记","_id":"cj9wugp08000zh4v77d8qo84v"},{"name":"随笔","_id":"cj9wugp0h001ah4v7l7kz1mkm"}],"Data":[],"Page":[{"title":"关于我","date":"2017-08-27T04:19:16.000Z","_content":"About Me","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2017-08-27 12:19:16\n---\nAbout Me","updated":"2017-08-27T06:00:53.601Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj9wugoz30001h4v7qlywj9v2","content":"<p>About Me</p>\n","site":{"data":{}},"excerpt":"","more":"<p>About Me</p>\n"},{"title":"分类","date":"2017-08-27T04:15:19.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2017-08-27 12:15:19\ntype: \"categories\"\ncomments: false\n---\n","updated":"2017-08-27T06:00:37.640Z","path":"categories/index.html","layout":"page","_id":"cj9wugoz60003h4v7ngutw632","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2017-08-27T04:13:19.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2017-08-27 12:13:19\ntype: \"tags\"\ncomments: false\n---\n","updated":"2017-08-27T06:00:43.807Z","path":"tags/index.html","layout":"page","_id":"cj9wugozd0007h4v7w5yg50ib","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"centos7 开放端口","toc":true,"date":"2017-11-04T14:15:10.000Z","scaffolds":null,"_content":"CentOS升级到7之后，发现无法使用iptables控制Linuxs的端口，google之后发现Centos 7使用firewalld代替了原来的iptables。下面记录如何使用firewalld开放Linux端口：\n\n开启端口\n\n```\nfirewall-cmd --zone=public --add-port=80/tcp --permanent\n\n```\n命令含义：\n\n```\n--zone #作用域\n\n--add-port=80/tcp  #添加端口，格式为：端口/通讯协议\n\n--permanent  #永久生效，没有此参数重启后失效\n\n```\n重启防火墙\n\n```\nfirewall-cmd --reload\n```\n\n查看开启了那些端口\n> /sbin/iptables -L -n","source":"_posts/centos7-开放端口.md","raw":"---\ntitle: centos7 开放端口\ncategories: 学习\ntags: [大数据,linux,centos7]\ntoc: true\ndate: 2017-11-04 22:15:10\nscaffolds:\n---\nCentOS升级到7之后，发现无法使用iptables控制Linuxs的端口，google之后发现Centos 7使用firewalld代替了原来的iptables。下面记录如何使用firewalld开放Linux端口：\n\n开启端口\n\n```\nfirewall-cmd --zone=public --add-port=80/tcp --permanent\n\n```\n命令含义：\n\n```\n--zone #作用域\n\n--add-port=80/tcp  #添加端口，格式为：端口/通讯协议\n\n--permanent  #永久生效，没有此参数重启后失效\n\n```\n重启防火墙\n\n```\nfirewall-cmd --reload\n```\n\n查看开启了那些端口\n> /sbin/iptables -L -n","slug":"centos7-开放端口","published":1,"updated":"2017-11-05T10:15:25.250Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9wugoyu0000h4v7rtmxwbf5","content":"<p>CentOS升级到7之后，发现无法使用iptables控制Linuxs的端口，google之后发现Centos 7使用firewalld代替了原来的iptables。下面记录如何使用firewalld开放Linux端口：</p>\n<p>开启端口</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">firewall-cmd --zone=public --add-port=80/tcp --permanent</div></pre></td></tr></table></figure>\n<p>命令含义：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">--zone #作用域</div><div class=\"line\"></div><div class=\"line\">--add-port=80/tcp  #添加端口，格式为：端口/通讯协议</div><div class=\"line\"></div><div class=\"line\">--permanent  #永久生效，没有此参数重启后失效</div></pre></td></tr></table></figure>\n<p>重启防火墙</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">firewall-cmd --reload</div></pre></td></tr></table></figure>\n<p>查看开启了那些端口</p>\n<blockquote>\n<p>/sbin/iptables -L -n</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>CentOS升级到7之后，发现无法使用iptables控制Linuxs的端口，google之后发现Centos 7使用firewalld代替了原来的iptables。下面记录如何使用firewalld开放Linux端口：</p>\n<p>开启端口</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">firewall-cmd --zone=public --add-port=80/tcp --permanent</div></pre></td></tr></table></figure>\n<p>命令含义：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">--zone #作用域</div><div class=\"line\"></div><div class=\"line\">--add-port=80/tcp  #添加端口，格式为：端口/通讯协议</div><div class=\"line\"></div><div class=\"line\">--permanent  #永久生效，没有此参数重启后失效</div></pre></td></tr></table></figure>\n<p>重启防火墙</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">firewall-cmd --reload</div></pre></td></tr></table></figure>\n<p>查看开启了那些端口</p>\n<blockquote>\n<p>/sbin/iptables -L -n</p>\n</blockquote>\n"},{"title":"centos7 安装mysql-转","toc":true,"date":"2017-11-04T14:30:14.000Z","scaffolds":null,"_content":"[linux下安装Mysql](http://www.cnblogs.com/xxoome/p/5864912.html)\n\n\n# 其他\n## 错误\n### 本地登陆不进去\n```\n#mysql -u root -p \n提示”Access denied for user ‘root’@’localhost’ (using password: YES)”\n```\n我的mysql版本 \n> mysql  Ver 14.14 Distrib 5.6.38\n\n先修改一下mysql安装目录下面my.cnf,最后一行添加 `skip-grant-tables`\n然后登陆 进去修改\n> update mysql.user set password=password(‘mypassword’) where user=’root’; \n\n退出,修改文件删除刚加的属性,重启mysql服务\n\n### 远程连接 ip无权限\n> update mysql.user set host='%' where user=’root’;","source":"_posts/centos7-安装mysql-转.md","raw":"---\ntitle: centos7 安装mysql-转\ncategories: 学习\ntags:\n  - 大数据\n  - linux\n  - mysql\ntoc: true\ndate: 2017-11-04 22:30:14\nscaffolds:\n---\n[linux下安装Mysql](http://www.cnblogs.com/xxoome/p/5864912.html)\n\n\n# 其他\n## 错误\n### 本地登陆不进去\n```\n#mysql -u root -p \n提示”Access denied for user ‘root’@’localhost’ (using password: YES)”\n```\n我的mysql版本 \n> mysql  Ver 14.14 Distrib 5.6.38\n\n先修改一下mysql安装目录下面my.cnf,最后一行添加 `skip-grant-tables`\n然后登陆 进去修改\n> update mysql.user set password=password(‘mypassword’) where user=’root’; \n\n退出,修改文件删除刚加的属性,重启mysql服务\n\n### 远程连接 ip无权限\n> update mysql.user set host='%' where user=’root’;","slug":"centos7-安装mysql-转","published":1,"updated":"2017-11-04T15:15:04.097Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9wugoz40002h4v7ipifsb77","content":"<p><a href=\"http://www.cnblogs.com/xxoome/p/5864912.html\" target=\"_blank\" rel=\"external\">linux下安装Mysql</a></p>\n<h1 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h1><h2 id=\"错误\"><a href=\"#错误\" class=\"headerlink\" title=\"错误\"></a>错误</h2><h3 id=\"本地登陆不进去\"><a href=\"#本地登陆不进去\" class=\"headerlink\" title=\"本地登陆不进去\"></a>本地登陆不进去</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">#mysql -u root -p </div><div class=\"line\">提示”Access denied for user ‘root’@’localhost’ (using password: YES)”</div></pre></td></tr></table></figure>\n<p>我的mysql版本 </p>\n<blockquote>\n<p>mysql  Ver 14.14 Distrib 5.6.38</p>\n</blockquote>\n<p>先修改一下mysql安装目录下面my.cnf,最后一行添加 <code>skip-grant-tables</code><br>然后登陆 进去修改</p>\n<blockquote>\n<p>update mysql.user set password=password(‘mypassword’) where user=’root’; </p>\n</blockquote>\n<p>退出,修改文件删除刚加的属性,重启mysql服务</p>\n<h3 id=\"远程连接-ip无权限\"><a href=\"#远程连接-ip无权限\" class=\"headerlink\" title=\"远程连接 ip无权限\"></a>远程连接 ip无权限</h3><blockquote>\n<p>update mysql.user set host=’%’ where user=’root’;</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"http://www.cnblogs.com/xxoome/p/5864912.html\" target=\"_blank\" rel=\"external\">linux下安装Mysql</a></p>\n<h1 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h1><h2 id=\"错误\"><a href=\"#错误\" class=\"headerlink\" title=\"错误\"></a>错误</h2><h3 id=\"本地登陆不进去\"><a href=\"#本地登陆不进去\" class=\"headerlink\" title=\"本地登陆不进去\"></a>本地登陆不进去</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">#mysql -u root -p </div><div class=\"line\">提示”Access denied for user ‘root’@’localhost’ (using password: YES)”</div></pre></td></tr></table></figure>\n<p>我的mysql版本 </p>\n<blockquote>\n<p>mysql  Ver 14.14 Distrib 5.6.38</p>\n</blockquote>\n<p>先修改一下mysql安装目录下面my.cnf,最后一行添加 <code>skip-grant-tables</code><br>然后登陆 进去修改</p>\n<blockquote>\n<p>update mysql.user set password=password(‘mypassword’) where user=’root’; </p>\n</blockquote>\n<p>退出,修改文件删除刚加的属性,重启mysql服务</p>\n<h3 id=\"远程连接-ip无权限\"><a href=\"#远程连接-ip无权限\" class=\"headerlink\" title=\"远程连接 ip无权限\"></a>远程连接 ip无权限</h3><blockquote>\n<p>update mysql.user set host=’%’ where user=’root’;</p>\n</blockquote>\n"},{"title":"vscode快捷键记录","toc":true,"date":"2017-09-10T16:07:26.000Z","scaffolds":null,"_content":"\n分屏预览  \nctrl+k v  \nctrl+B 唤出侧边栏   \n\n切换分屏  \nctrl+1     \nctrl+2   \nctrl+3  \n\n<!-- more -->\n\nalt+z  开启/取消自动换行  \nctrl+` 打开/关闭控制台\n\n文本编辑  \nalt+↑/↓ 挪动行  \nalt+shift+↑/↓ 向上/下复制行  \nctrl+enter 下方新建行  \nctrl+shift+enter 上方新建行  \nctrl+shift+k 删除当前行  \n\nctrl+x 剪切行(光标没选中的时候)  \nctrl+k z 编辑区域最大化  \n\n切换窗口  \nctrl+e 最近打开的文件  \nctrl+r 打开的工作空间  ","source":"_posts/vscode快捷键记录.md","raw":"---\ntitle: vscode快捷键记录\ncategories: 工具\ntags: [vscode,快捷键]\ntoc: true\ndate: 2017-09-11 00:07:26\nscaffolds:\n---\n\n分屏预览  \nctrl+k v  \nctrl+B 唤出侧边栏   \n\n切换分屏  \nctrl+1     \nctrl+2   \nctrl+3  \n\n<!-- more -->\n\nalt+z  开启/取消自动换行  \nctrl+` 打开/关闭控制台\n\n文本编辑  \nalt+↑/↓ 挪动行  \nalt+shift+↑/↓ 向上/下复制行  \nctrl+enter 下方新建行  \nctrl+shift+enter 上方新建行  \nctrl+shift+k 删除当前行  \n\nctrl+x 剪切行(光标没选中的时候)  \nctrl+k z 编辑区域最大化  \n\n切换窗口  \nctrl+e 最近打开的文件  \nctrl+r 打开的工作空间  ","slug":"vscode快捷键记录","published":1,"updated":"2017-09-10T16:28:16.129Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9wugozb0006h4v7kei5g0fs","content":"<p>分屏预览<br>ctrl+k v<br>ctrl+B 唤出侧边栏   </p>\n<p>切换分屏<br>ctrl+1<br>ctrl+2<br>ctrl+3  </p>\n<a id=\"more\"></a>\n<p>alt+z  开启/取消自动换行<br>ctrl+` 打开/关闭控制台</p>\n<p>文本编辑<br>alt+↑/↓ 挪动行<br>alt+shift+↑/↓ 向上/下复制行<br>ctrl+enter 下方新建行<br>ctrl+shift+enter 上方新建行<br>ctrl+shift+k 删除当前行  </p>\n<p>ctrl+x 剪切行(光标没选中的时候)<br>ctrl+k z 编辑区域最大化  </p>\n<p>切换窗口<br>ctrl+e 最近打开的文件<br>ctrl+r 打开的工作空间  </p>\n","site":{"data":{}},"excerpt":"<p>分屏预览<br>ctrl+k v<br>ctrl+B 唤出侧边栏   </p>\n<p>切换分屏<br>ctrl+1<br>ctrl+2<br>ctrl+3  </p>","more":"<p>alt+z  开启/取消自动换行<br>ctrl+` 打开/关闭控制台</p>\n<p>文本编辑<br>alt+↑/↓ 挪动行<br>alt+shift+↑/↓ 向上/下复制行<br>ctrl+enter 下方新建行<br>ctrl+shift+enter 上方新建行<br>ctrl+shift+k 删除当前行  </p>\n<p>ctrl+x 剪切行(光标没选中的时候)<br>ctrl+k z 编辑区域最大化  </p>\n<p>切换窗口<br>ctrl+e 最近打开的文件<br>ctrl+r 打开的工作空间  </p>"},{"title":"hexo next 搜索 algolia","toc":true,"date":"2017-10-30T14:48:47.000Z","scaffolds":null,"_content":"# 目的:添加搜索功能\n#next版本\n我的版本号是\n```java\n    # Theme version\n    version: 5.1.2\n```\nnext5.0+版本集成了algolia 这样使配置algolia更简单\n\n# algolia账号申请\n[Algolia官网](https://www.algolia.com/)\n<!-- more -->\n* 直接用github账号注册就好啦\n* 创建index空间 输入一个名称,填写你自己站点的网址\n\n![1](http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030220402.jpg)\n* 创建两个key   \n    1. 空间创建好后默认会有一个只有搜索权限的key  \n    2. 需要另建一个有修改记录等权限的key(这个供我们提交索引到空间使用)  \n    3. 创建key的时候要选择授权的空间\n\n![3](http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030220635.jpg)\n![2](http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030220735.jpg)\n![4](http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030220846.jpg)\n![5](http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030220920.jpg)\n* 记录  \n    1. Application ID  \n    2. 两个key建\n\n# 安装hexo-algolia\n\n用git-bash在hexo工程根目录下执行\n\n    npm install hexo-algolia --save\n# 配置algolia\n- 在Hexo工程根目录的_config.yml中加入如下配置，注意改成前面API Keys页面相应配置\n\n```java\n    algolia:\n        applicationID: '你的Application ID'\n        apiKey: '只有搜索权限的key'\n        adminApiKey: ''\n        indexName: '你的index空间名称'\n        chunkSize: 5000\n```\n\n- 修改themes>next>_config.yml \n\n    搜索 algolia_search 修改enable 为true  \n    其他字体提示可以自己随意修改\n![2](http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030223530.jpg)\n# 添加环境变量\n我的电脑>右键属性>高级设置>环境变量>新建>填写变量名称和变量值\n\n    变量名称 : HEXO_ALGOLIA_INDEXING_KEY\n    变量值: 在algolia新建的有修改权限的key\n![1](http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030222934.jpg)\n![2](http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030222951.jpg)\n# 生成index上传到algolia\n在hexo根目录执行,**注意确保命令行面板已经重新载入新加的环境变量**\n```java\n    hexo algolia\n```\n\n不报错就可以啦\n\n# 参考\n[NexT主题集成Algolia搜索插件](http://blog.csdn.net/luzheqi/article/details/52798557)  \n[Hexo集成Algolia搜索插件](https://jobbym.github.io/2017/01/16/Hexo%E9%9B%86%E6%88%90Algolia%E6%90%9C%E7%B4%A2%E6%8F%92%E4%BB%B6/)\n","source":"_posts/hexo-next-搜索-algolia.md","raw":"---\ntitle: hexo next 搜索 algolia\ncategories: 工具\ntags: [hexo]\ntoc: true\ndate: 2017-10-30 22:48:47\nscaffolds:\n---\n# 目的:添加搜索功能\n#next版本\n我的版本号是\n```java\n    # Theme version\n    version: 5.1.2\n```\nnext5.0+版本集成了algolia 这样使配置algolia更简单\n\n# algolia账号申请\n[Algolia官网](https://www.algolia.com/)\n<!-- more -->\n* 直接用github账号注册就好啦\n* 创建index空间 输入一个名称,填写你自己站点的网址\n\n![1](http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030220402.jpg)\n* 创建两个key   \n    1. 空间创建好后默认会有一个只有搜索权限的key  \n    2. 需要另建一个有修改记录等权限的key(这个供我们提交索引到空间使用)  \n    3. 创建key的时候要选择授权的空间\n\n![3](http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030220635.jpg)\n![2](http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030220735.jpg)\n![4](http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030220846.jpg)\n![5](http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030220920.jpg)\n* 记录  \n    1. Application ID  \n    2. 两个key建\n\n# 安装hexo-algolia\n\n用git-bash在hexo工程根目录下执行\n\n    npm install hexo-algolia --save\n# 配置algolia\n- 在Hexo工程根目录的_config.yml中加入如下配置，注意改成前面API Keys页面相应配置\n\n```java\n    algolia:\n        applicationID: '你的Application ID'\n        apiKey: '只有搜索权限的key'\n        adminApiKey: ''\n        indexName: '你的index空间名称'\n        chunkSize: 5000\n```\n\n- 修改themes>next>_config.yml \n\n    搜索 algolia_search 修改enable 为true  \n    其他字体提示可以自己随意修改\n![2](http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030223530.jpg)\n# 添加环境变量\n我的电脑>右键属性>高级设置>环境变量>新建>填写变量名称和变量值\n\n    变量名称 : HEXO_ALGOLIA_INDEXING_KEY\n    变量值: 在algolia新建的有修改权限的key\n![1](http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030222934.jpg)\n![2](http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030222951.jpg)\n# 生成index上传到algolia\n在hexo根目录执行,**注意确保命令行面板已经重新载入新加的环境变量**\n```java\n    hexo algolia\n```\n\n不报错就可以啦\n\n# 参考\n[NexT主题集成Algolia搜索插件](http://blog.csdn.net/luzheqi/article/details/52798557)  \n[Hexo集成Algolia搜索插件](https://jobbym.github.io/2017/01/16/Hexo%E9%9B%86%E6%88%90Algolia%E6%90%9C%E7%B4%A2%E6%8F%92%E4%BB%B6/)\n","slug":"hexo-next-搜索-algolia","published":1,"updated":"2017-10-30T15:08:00.240Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9wugozf0008h4v7hyd3zixa","content":"<h1 id=\"目的-添加搜索功能\"><a href=\"#目的-添加搜索功能\" class=\"headerlink\" title=\"目的:添加搜索功能\"></a>目的:添加搜索功能</h1><p>#next版本<br>我的版本号是<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Theme version</div><div class=\"line\">version: <span class=\"number\">5.1</span>.2</div></pre></td></tr></table></figure></p>\n<p>next5.0+版本集成了algolia 这样使配置algolia更简单</p>\n<h1 id=\"algolia账号申请\"><a href=\"#algolia账号申请\" class=\"headerlink\" title=\"algolia账号申请\"></a>algolia账号申请</h1><p><a href=\"https://www.algolia.com/\" target=\"_blank\" rel=\"external\">Algolia官网</a><br><a id=\"more\"></a></p>\n<ul>\n<li>直接用github账号注册就好啦</li>\n<li>创建index空间 输入一个名称,填写你自己站点的网址</li>\n</ul>\n<p><img src=\"http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030220402.jpg\" alt=\"1\"></p>\n<ul>\n<li>创建两个key   <ol>\n<li>空间创建好后默认会有一个只有搜索权限的key  </li>\n<li>需要另建一个有修改记录等权限的key(这个供我们提交索引到空间使用)  </li>\n<li>创建key的时候要选择授权的空间</li>\n</ol>\n</li>\n</ul>\n<p><img src=\"http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030220635.jpg\" alt=\"3\"><br><img src=\"http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030220735.jpg\" alt=\"2\"><br><img src=\"http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030220846.jpg\" alt=\"4\"><br><img src=\"http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030220920.jpg\" alt=\"5\"></p>\n<ul>\n<li>记录  <ol>\n<li>Application ID  </li>\n<li>两个key建</li>\n</ol>\n</li>\n</ul>\n<h1 id=\"安装hexo-algolia\"><a href=\"#安装hexo-algolia\" class=\"headerlink\" title=\"安装hexo-algolia\"></a>安装hexo-algolia</h1><p>用git-bash在hexo工程根目录下执行</p>\n<pre><code>npm install hexo-algolia --save\n</code></pre><h1 id=\"配置algolia\"><a href=\"#配置algolia\" class=\"headerlink\" title=\"配置algolia\"></a>配置algolia</h1><ul>\n<li>在Hexo工程根目录的_config.yml中加入如下配置，注意改成前面API Keys页面相应配置</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">algolia:</div><div class=\"line\">    applicationID: <span class=\"string\">'你的Application ID'</span></div><div class=\"line\">    apiKey: <span class=\"string\">'只有搜索权限的key'</span></div><div class=\"line\">    adminApiKey: <span class=\"string\">''</span></div><div class=\"line\">    indexName: <span class=\"string\">'你的index空间名称'</span></div><div class=\"line\">    chunkSize: <span class=\"number\">5000</span></div></pre></td></tr></table></figure>\n<ul>\n<li><p>修改themes&gt;next&gt;_config.yml </p>\n<p>  搜索 algolia_search 修改enable 为true<br>  其他字体提示可以自己随意修改<br><img src=\"http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030223530.jpg\" alt=\"2\"></p>\n<h1 id=\"添加环境变量\"><a href=\"#添加环境变量\" class=\"headerlink\" title=\"添加环境变量\"></a>添加环境变量</h1><p>我的电脑&gt;右键属性&gt;高级设置&gt;环境变量&gt;新建&gt;填写变量名称和变量值</p>\n<p>  变量名称 : HEXO_ALGOLIA_INDEXING_KEY<br>  变量值: 在algolia新建的有修改权限的key<br><img src=\"http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030222934.jpg\" alt=\"1\"><br><img src=\"http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030222951.jpg\" alt=\"2\"></p>\n<h1 id=\"生成index上传到algolia\"><a href=\"#生成index上传到algolia\" class=\"headerlink\" title=\"生成index上传到algolia\"></a>生成index上传到algolia</h1><p>在hexo根目录执行,<strong>注意确保命令行面板已经重新载入新加的环境变量</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo algolia</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>不报错就可以啦</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"http://blog.csdn.net/luzheqi/article/details/52798557\" target=\"_blank\" rel=\"external\">NexT主题集成Algolia搜索插件</a><br><a href=\"https://jobbym.github.io/2017/01/16/Hexo%E9%9B%86%E6%88%90Algolia%E6%90%9C%E7%B4%A2%E6%8F%92%E4%BB%B6/\" target=\"_blank\" rel=\"external\">Hexo集成Algolia搜索插件</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"目的-添加搜索功能\"><a href=\"#目的-添加搜索功能\" class=\"headerlink\" title=\"目的:添加搜索功能\"></a>目的:添加搜索功能</h1><p>#next版本<br>我的版本号是<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Theme version</div><div class=\"line\">version: <span class=\"number\">5.1</span>.2</div></pre></td></tr></table></figure></p>\n<p>next5.0+版本集成了algolia 这样使配置algolia更简单</p>\n<h1 id=\"algolia账号申请\"><a href=\"#algolia账号申请\" class=\"headerlink\" title=\"algolia账号申请\"></a>algolia账号申请</h1><p><a href=\"https://www.algolia.com/\" target=\"_blank\" rel=\"external\">Algolia官网</a><br>","more":"</p>\n<ul>\n<li>直接用github账号注册就好啦</li>\n<li>创建index空间 输入一个名称,填写你自己站点的网址</li>\n</ul>\n<p><img src=\"http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030220402.jpg\" alt=\"1\"></p>\n<ul>\n<li>创建两个key   <ol>\n<li>空间创建好后默认会有一个只有搜索权限的key  </li>\n<li>需要另建一个有修改记录等权限的key(这个供我们提交索引到空间使用)  </li>\n<li>创建key的时候要选择授权的空间</li>\n</ol>\n</li>\n</ul>\n<p><img src=\"http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030220635.jpg\" alt=\"3\"><br><img src=\"http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030220735.jpg\" alt=\"2\"><br><img src=\"http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030220846.jpg\" alt=\"4\"><br><img src=\"http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030220920.jpg\" alt=\"5\"></p>\n<ul>\n<li>记录  <ol>\n<li>Application ID  </li>\n<li>两个key建</li>\n</ol>\n</li>\n</ul>\n<h1 id=\"安装hexo-algolia\"><a href=\"#安装hexo-algolia\" class=\"headerlink\" title=\"安装hexo-algolia\"></a>安装hexo-algolia</h1><p>用git-bash在hexo工程根目录下执行</p>\n<pre><code>npm install hexo-algolia --save\n</code></pre><h1 id=\"配置algolia\"><a href=\"#配置algolia\" class=\"headerlink\" title=\"配置algolia\"></a>配置algolia</h1><ul>\n<li>在Hexo工程根目录的_config.yml中加入如下配置，注意改成前面API Keys页面相应配置</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">algolia:</div><div class=\"line\">    applicationID: <span class=\"string\">'你的Application ID'</span></div><div class=\"line\">    apiKey: <span class=\"string\">'只有搜索权限的key'</span></div><div class=\"line\">    adminApiKey: <span class=\"string\">''</span></div><div class=\"line\">    indexName: <span class=\"string\">'你的index空间名称'</span></div><div class=\"line\">    chunkSize: <span class=\"number\">5000</span></div></pre></td></tr></table></figure>\n<ul>\n<li><p>修改themes&gt;next&gt;_config.yml </p>\n<p>  搜索 algolia_search 修改enable 为true<br>  其他字体提示可以自己随意修改<br><img src=\"http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030223530.jpg\" alt=\"2\"></p>\n<h1 id=\"添加环境变量\"><a href=\"#添加环境变量\" class=\"headerlink\" title=\"添加环境变量\"></a>添加环境变量</h1><p>我的电脑&gt;右键属性&gt;高级设置&gt;环境变量&gt;新建&gt;填写变量名称和变量值</p>\n<p>  变量名称 : HEXO_ALGOLIA_INDEXING_KEY<br>  变量值: 在algolia新建的有修改权限的key<br><img src=\"http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030222934.jpg\" alt=\"1\"><br><img src=\"http://ovasdkxqr.bkt.clouddn.com/hexo/QQ%E6%88%AA%E5%9B%BE20171030222951.jpg\" alt=\"2\"></p>\n<h1 id=\"生成index上传到algolia\"><a href=\"#生成index上传到algolia\" class=\"headerlink\" title=\"生成index上传到algolia\"></a>生成index上传到algolia</h1><p>在hexo根目录执行,<strong>注意确保命令行面板已经重新载入新加的环境变量</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo algolia</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>不报错就可以啦</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"http://blog.csdn.net/luzheqi/article/details/52798557\" target=\"_blank\" rel=\"external\">NexT主题集成Algolia搜索插件</a><br><a href=\"https://jobbym.github.io/2017/01/16/Hexo%E9%9B%86%E6%88%90Algolia%E6%90%9C%E7%B4%A2%E6%8F%92%E4%BB%B6/\" target=\"_blank\" rel=\"external\">Hexo集成Algolia搜索插件</a></p>"},{"title":"idea快捷键记录","toc":true,"date":"2017-09-03T15:37:13.000Z","scaffolds":null,"_content":"查找方法,这个用于看源码的时候感觉很好用记录一下\n> ctrl+shift+alt+n\n\n//-----------------------------------\n\nNavigate | Call Hierarchy命令查看一个Java方法调用树（caller和callee两个方向）\n> ctrl+alt+H\n\nAnalyze | Dataflow from/to Here两个命令查看表达式、变量和方法参数的传递关系树。\n>Analyze | Data Flow  to Here  \n>Analyze | Data Flow  from Here\n\n<!-- more -->\n\n\"Find Usage\"可以查看一个Java类、方法或变量的直接使用情况。 \n>alt+F7\n\nNavigate | File Structure 查看文件的结构\n> ctrl+F12\n\nhttp://www.cnblogs.com/huaxingtianxia/p/5728847.html\n\n//-----------------------------------\n","source":"_posts/idea快捷键记录.md","raw":"---\ntitle: idea快捷键记录\ncategories: 工具\ntoc: true\ndate: 2017-09-03 23:37:13\nscaffolds:\ntags: [idea,快捷键]\n---\n查找方法,这个用于看源码的时候感觉很好用记录一下\n> ctrl+shift+alt+n\n\n//-----------------------------------\n\nNavigate | Call Hierarchy命令查看一个Java方法调用树（caller和callee两个方向）\n> ctrl+alt+H\n\nAnalyze | Dataflow from/to Here两个命令查看表达式、变量和方法参数的传递关系树。\n>Analyze | Data Flow  to Here  \n>Analyze | Data Flow  from Here\n\n<!-- more -->\n\n\"Find Usage\"可以查看一个Java类、方法或变量的直接使用情况。 \n>alt+F7\n\nNavigate | File Structure 查看文件的结构\n> ctrl+F12\n\nhttp://www.cnblogs.com/huaxingtianxia/p/5728847.html\n\n//-----------------------------------\n","slug":"idea快捷键记录","published":1,"updated":"2017-09-10T16:23:29.507Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9wugozh0009h4v7jfeh0jxp","content":"<p>查找方法,这个用于看源码的时候感觉很好用记录一下</p>\n<blockquote>\n<p>ctrl+shift+alt+n</p>\n</blockquote>\n<p>//———————————–</p>\n<p>Navigate | Call Hierarchy命令查看一个Java方法调用树（caller和callee两个方向）</p>\n<blockquote>\n<p>ctrl+alt+H</p>\n</blockquote>\n<p>Analyze | Dataflow from/to Here两个命令查看表达式、变量和方法参数的传递关系树。</p>\n<blockquote>\n<p>Analyze | Data Flow  to Here<br>Analyze | Data Flow  from Here</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>“Find Usage”可以查看一个Java类、方法或变量的直接使用情况。 </p>\n<blockquote>\n<p>alt+F7</p>\n</blockquote>\n<p>Navigate | File Structure 查看文件的结构</p>\n<blockquote>\n<p>ctrl+F12</p>\n</blockquote>\n<p><a href=\"http://www.cnblogs.com/huaxingtianxia/p/5728847.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/huaxingtianxia/p/5728847.html</a></p>\n<p>//———————————–</p>\n","site":{"data":{}},"excerpt":"<p>查找方法,这个用于看源码的时候感觉很好用记录一下</p>\n<blockquote>\n<p>ctrl+shift+alt+n</p>\n</blockquote>\n<p>//———————————–</p>\n<p>Navigate | Call Hierarchy命令查看一个Java方法调用树（caller和callee两个方向）</p>\n<blockquote>\n<p>ctrl+alt+H</p>\n</blockquote>\n<p>Analyze | Dataflow from/to Here两个命令查看表达式、变量和方法参数的传递关系树。</p>\n<blockquote>\n<p>Analyze | Data Flow  to Here<br>Analyze | Data Flow  from Here</p>\n</blockquote>","more":"<p>“Find Usage”可以查看一个Java类、方法或变量的直接使用情况。 </p>\n<blockquote>\n<p>alt+F7</p>\n</blockquote>\n<p>Navigate | File Structure 查看文件的结构</p>\n<blockquote>\n<p>ctrl+F12</p>\n</blockquote>\n<p><a href=\"http://www.cnblogs.com/huaxingtianxia/p/5728847.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/huaxingtianxia/p/5728847.html</a></p>\n<p>//———————————–</p>"},{"title":"linux笔记-修改语言","toc":true,"date":"2017-11-05T15:39:47.000Z","scaffolds":null,"_content":"# 版本\ncentos7\n# 查看系统是否有安装中文语言包 （列出所有可用的公共语言环境的名称，包含有zh_CN）\n```\n[vagrant@mysql1 ~]$ locale -a |grep \"zh_CN\"\nzh_CN\nzh_CN.gb18030\nzh_CN.gb2312\nzh_CN.gbk\nzh_CN.utf8\n```\n若发现以上几项，说明系统已安装中文语言包，无需再安装\n# 安装中文包\n```\nroot@iZj6cbstl2n6r280a27eppZ tmp]# yum groupinstall \"fonts\"\n```\n# 修改i18n国际化和locale.conf本土化配置文件\n## 先查看系统语言环境\n```\n[vagrant@mysql1 ~]$ locale\nLANG=en_US.UTF-8\nLC_CTYPE=\"en_US.UTF-8\"\nLC_NUMERIC=\"en_US.UTF-8\"\nLC_TIME=\"en_US.UTF-8\"\nLC_COLLATE=\"en_US.UTF-8\"\nLC_MONETARY=\"en_US.UTF-8\"\nLC_MESSAGES=\"en_US.UTF-8\"\nLC_PAPER=\"en_US.UTF-8\"\nLC_NAME=\"en_US.UTF-8\"\nLC_ADDRESS=\"en_US.UTF-8\"\nLC_TELEPHONE=\"en_US.UTF-8\"\nLC_MEASUREMENT=\"en_US.UTF-8\"\nLC_IDENTIFICATION=\"en_US.UTF-8\"\nLC_ALL=\n```\n## 修改配置文件\n```\n vi /etc/locale.conf \n 或\n vi /etc/sysconfig/i18n (有些帖子上说修改这个,但是我的linux没有这个文件)\n```\n\n虽然安装了中文语言包但本机的语言环境并不是中文，先修改i18n配置文件\n\n```\n[root@iZj6cbstl2n6r280a27eppZ sysconfig]# vim /etc/sysconfig/i18n\n\nLANG=\"zh_CN.UTF-8\"\nLC_ALL=\"zh_CN.UTF-8\"\n\n[root@iZj6cbstl2n6r280a27eppZ sysconfig]# source /etc/sysconfig/i18n\n\n[root@iZj6cbstl2n6r280a27eppZ sysconfig]# vim /etc/locale.conf\n\nLANG=\"zh_CN.UTF-8\"\n\n [root@iZj6cbstl2n6r280a27eppZ sysconfig]# source   /etc/locale.conf\n```","source":"_posts/linux笔记-修改语言.md","raw":"---\ntitle: linux笔记-修改语言\ncategories: 学习\ntags:\n  - linux\n  - centos7\ntoc: true\ndate: 2017-11-05 23:39:47\nscaffolds:\n---\n# 版本\ncentos7\n# 查看系统是否有安装中文语言包 （列出所有可用的公共语言环境的名称，包含有zh_CN）\n```\n[vagrant@mysql1 ~]$ locale -a |grep \"zh_CN\"\nzh_CN\nzh_CN.gb18030\nzh_CN.gb2312\nzh_CN.gbk\nzh_CN.utf8\n```\n若发现以上几项，说明系统已安装中文语言包，无需再安装\n# 安装中文包\n```\nroot@iZj6cbstl2n6r280a27eppZ tmp]# yum groupinstall \"fonts\"\n```\n# 修改i18n国际化和locale.conf本土化配置文件\n## 先查看系统语言环境\n```\n[vagrant@mysql1 ~]$ locale\nLANG=en_US.UTF-8\nLC_CTYPE=\"en_US.UTF-8\"\nLC_NUMERIC=\"en_US.UTF-8\"\nLC_TIME=\"en_US.UTF-8\"\nLC_COLLATE=\"en_US.UTF-8\"\nLC_MONETARY=\"en_US.UTF-8\"\nLC_MESSAGES=\"en_US.UTF-8\"\nLC_PAPER=\"en_US.UTF-8\"\nLC_NAME=\"en_US.UTF-8\"\nLC_ADDRESS=\"en_US.UTF-8\"\nLC_TELEPHONE=\"en_US.UTF-8\"\nLC_MEASUREMENT=\"en_US.UTF-8\"\nLC_IDENTIFICATION=\"en_US.UTF-8\"\nLC_ALL=\n```\n## 修改配置文件\n```\n vi /etc/locale.conf \n 或\n vi /etc/sysconfig/i18n (有些帖子上说修改这个,但是我的linux没有这个文件)\n```\n\n虽然安装了中文语言包但本机的语言环境并不是中文，先修改i18n配置文件\n\n```\n[root@iZj6cbstl2n6r280a27eppZ sysconfig]# vim /etc/sysconfig/i18n\n\nLANG=\"zh_CN.UTF-8\"\nLC_ALL=\"zh_CN.UTF-8\"\n\n[root@iZj6cbstl2n6r280a27eppZ sysconfig]# source /etc/sysconfig/i18n\n\n[root@iZj6cbstl2n6r280a27eppZ sysconfig]# vim /etc/locale.conf\n\nLANG=\"zh_CN.UTF-8\"\n\n [root@iZj6cbstl2n6r280a27eppZ sysconfig]# source   /etc/locale.conf\n```","slug":"linux笔记-修改语言","published":1,"updated":"2017-11-05T15:47:51.172Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9wugozl000ch4v75dkyrd8w","content":"<h1 id=\"版本\"><a href=\"#版本\" class=\"headerlink\" title=\"版本\"></a>版本</h1><p>centos7</p>\n<h1 id=\"查看系统是否有安装中文语言包-（列出所有可用的公共语言环境的名称，包含有zh-CN）\"><a href=\"#查看系统是否有安装中文语言包-（列出所有可用的公共语言环境的名称，包含有zh-CN）\" class=\"headerlink\" title=\"查看系统是否有安装中文语言包 （列出所有可用的公共语言环境的名称，包含有zh_CN）\"></a>查看系统是否有安装中文语言包 （列出所有可用的公共语言环境的名称，包含有zh_CN）</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">[vagrant@mysql1 ~]$ locale -a |grep &quot;zh_CN&quot;</div><div class=\"line\">zh_CN</div><div class=\"line\">zh_CN.gb18030</div><div class=\"line\">zh_CN.gb2312</div><div class=\"line\">zh_CN.gbk</div><div class=\"line\">zh_CN.utf8</div></pre></td></tr></table></figure>\n<p>若发现以上几项，说明系统已安装中文语言包，无需再安装</p>\n<h1 id=\"安装中文包\"><a href=\"#安装中文包\" class=\"headerlink\" title=\"安装中文包\"></a>安装中文包</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@iZj6cbstl2n6r280a27eppZ tmp]# yum groupinstall &quot;fonts&quot;</div></pre></td></tr></table></figure>\n<h1 id=\"修改i18n国际化和locale-conf本土化配置文件\"><a href=\"#修改i18n国际化和locale-conf本土化配置文件\" class=\"headerlink\" title=\"修改i18n国际化和locale.conf本土化配置文件\"></a>修改i18n国际化和locale.conf本土化配置文件</h1><h2 id=\"先查看系统语言环境\"><a href=\"#先查看系统语言环境\" class=\"headerlink\" title=\"先查看系统语言环境\"></a>先查看系统语言环境</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">[vagrant@mysql1 ~]$ locale</div><div class=\"line\">LANG=en_US.UTF-8</div><div class=\"line\">LC_CTYPE=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_NUMERIC=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_TIME=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_COLLATE=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_MONETARY=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_MESSAGES=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_PAPER=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_NAME=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_ADDRESS=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_TELEPHONE=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_MEASUREMENT=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_IDENTIFICATION=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_ALL=</div></pre></td></tr></table></figure>\n<h2 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">vi /etc/locale.conf </div><div class=\"line\">或</div><div class=\"line\">vi /etc/sysconfig/i18n (有些帖子上说修改这个,但是我的linux没有这个文件)</div></pre></td></tr></table></figure>\n<p>虽然安装了中文语言包但本机的语言环境并不是中文，先修改i18n配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@iZj6cbstl2n6r280a27eppZ sysconfig]# vim /etc/sysconfig/i18n</div><div class=\"line\"></div><div class=\"line\">LANG=&quot;zh_CN.UTF-8&quot;</div><div class=\"line\">LC_ALL=&quot;zh_CN.UTF-8&quot;</div><div class=\"line\"></div><div class=\"line\">[root@iZj6cbstl2n6r280a27eppZ sysconfig]# source /etc/sysconfig/i18n</div><div class=\"line\"></div><div class=\"line\">[root@iZj6cbstl2n6r280a27eppZ sysconfig]# vim /etc/locale.conf</div><div class=\"line\"></div><div class=\"line\">LANG=&quot;zh_CN.UTF-8&quot;</div><div class=\"line\"></div><div class=\"line\"> [root@iZj6cbstl2n6r280a27eppZ sysconfig]# source   /etc/locale.conf</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"版本\"><a href=\"#版本\" class=\"headerlink\" title=\"版本\"></a>版本</h1><p>centos7</p>\n<h1 id=\"查看系统是否有安装中文语言包-（列出所有可用的公共语言环境的名称，包含有zh-CN）\"><a href=\"#查看系统是否有安装中文语言包-（列出所有可用的公共语言环境的名称，包含有zh-CN）\" class=\"headerlink\" title=\"查看系统是否有安装中文语言包 （列出所有可用的公共语言环境的名称，包含有zh_CN）\"></a>查看系统是否有安装中文语言包 （列出所有可用的公共语言环境的名称，包含有zh_CN）</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">[vagrant@mysql1 ~]$ locale -a |grep &quot;zh_CN&quot;</div><div class=\"line\">zh_CN</div><div class=\"line\">zh_CN.gb18030</div><div class=\"line\">zh_CN.gb2312</div><div class=\"line\">zh_CN.gbk</div><div class=\"line\">zh_CN.utf8</div></pre></td></tr></table></figure>\n<p>若发现以上几项，说明系统已安装中文语言包，无需再安装</p>\n<h1 id=\"安装中文包\"><a href=\"#安装中文包\" class=\"headerlink\" title=\"安装中文包\"></a>安装中文包</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">root@iZj6cbstl2n6r280a27eppZ tmp]# yum groupinstall &quot;fonts&quot;</div></pre></td></tr></table></figure>\n<h1 id=\"修改i18n国际化和locale-conf本土化配置文件\"><a href=\"#修改i18n国际化和locale-conf本土化配置文件\" class=\"headerlink\" title=\"修改i18n国际化和locale.conf本土化配置文件\"></a>修改i18n国际化和locale.conf本土化配置文件</h1><h2 id=\"先查看系统语言环境\"><a href=\"#先查看系统语言环境\" class=\"headerlink\" title=\"先查看系统语言环境\"></a>先查看系统语言环境</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">[vagrant@mysql1 ~]$ locale</div><div class=\"line\">LANG=en_US.UTF-8</div><div class=\"line\">LC_CTYPE=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_NUMERIC=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_TIME=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_COLLATE=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_MONETARY=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_MESSAGES=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_PAPER=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_NAME=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_ADDRESS=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_TELEPHONE=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_MEASUREMENT=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_IDENTIFICATION=&quot;en_US.UTF-8&quot;</div><div class=\"line\">LC_ALL=</div></pre></td></tr></table></figure>\n<h2 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">vi /etc/locale.conf </div><div class=\"line\">或</div><div class=\"line\">vi /etc/sysconfig/i18n (有些帖子上说修改这个,但是我的linux没有这个文件)</div></pre></td></tr></table></figure>\n<p>虽然安装了中文语言包但本机的语言环境并不是中文，先修改i18n配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@iZj6cbstl2n6r280a27eppZ sysconfig]# vim /etc/sysconfig/i18n</div><div class=\"line\"></div><div class=\"line\">LANG=&quot;zh_CN.UTF-8&quot;</div><div class=\"line\">LC_ALL=&quot;zh_CN.UTF-8&quot;</div><div class=\"line\"></div><div class=\"line\">[root@iZj6cbstl2n6r280a27eppZ sysconfig]# source /etc/sysconfig/i18n</div><div class=\"line\"></div><div class=\"line\">[root@iZj6cbstl2n6r280a27eppZ sysconfig]# vim /etc/locale.conf</div><div class=\"line\"></div><div class=\"line\">LANG=&quot;zh_CN.UTF-8&quot;</div><div class=\"line\"></div><div class=\"line\"> [root@iZj6cbstl2n6r280a27eppZ sysconfig]# source   /etc/locale.conf</div></pre></td></tr></table></figure>"},{"title":"大数据01-linux安装及基本命令.md","toc":true,"date":"2017-10-30T14:30:38.000Z","scaffolds":null,"_content":"\n# linux 文件目录\n> 约定俗成\n\n目录 | 功能\n------- | -------\n/bin | 可执行文件\n/sbin | 系统可执行文件\n/boot | 跟启动相关的东西\n/dev | 设备 硬件\n/etc | 配置文件 \n/lib | 依赖包\n/lib64 | 依赖包\n/media | 一些外接设备\n/mnt | 挂载\n/home | 用户目录\n/usr | user share resource 公用的一些软件\n/tmp | 临时文件\n\n\n\n<!-- more -->\n# linux 网络相关\n## 网卡相关:\n1. ip ：一般 1 给网关  255是广播地址\n2. gateway ： 网关\n3. netmask ： 子网掩码\n4. dns ：\n\n### 子网掩码\n是用来判断自己属于哪个网段\n\n网段的计算:\n将IP地址的二进制 & 子网掩码的二进制 = 网段地址\n例如：192.168.33.2 & 255.255.255.0 = 192.168.33.0\n### dns 域名解析\n1. 从本地hosts中寻找域名 -> ip映射信息\n2. 如果没有则去服务器找\n3. 访问服务器\n\n填写:\n1. 网关地址\n2. dns服务器\n\n![域名工作流程](http://ovasdkxqr.bkt.clouddn.com/dashuju/%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B.png)\n\nlinux dns配置文件\n> /etc/hosts\n\n## 网络模式\n### NAT模式  \n![NAT模式图](http://ovasdkxqr.bkt.clouddn.com/dashuju/NAT虚拟网络配置.png)  \n### 桥接模式  \n![桥接模式图](http://ovasdkxqr.bkt.clouddn.com/dashuju/ssh%E5%85%8D%E5%AF%86%E7%99%BB%E9%99%86%E6%9C%BA%E5%88%B6%E7%A4%BA%E6%84%8F%E5%9B%BE.png)\n### HOST only  \n![host only](http://ovasdkxqr.bkt.clouddn.com/dashuju/%E6%A1%A5%E6%8E%A5%E5%92%8Chostonly%E8%99%9A%E6%8B%9F%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE.png)\n\n## 修改linux ip\n修改主机名:  \n> vi /etc/sysconfig/network  \n    NETWORKING=yes\n    HOSTNAME=server1.itcast.cn\n\n修改IP地址  \nvi /etc/sysconfig/network-scripts/ifcfg-eth0  \n\n    DEVICE=eth0\n    TYPE=Ethernet\n    ONBOOT=yes          #是否开机启用\n    BOOTPROTO=static    #ip地址设置为静态\n    IPADDR=192.168.0.101\n    NETMASK=255.255.255.0\n\n修改ip地址和主机名的映射关系  \nvi /etc/hosts  \n\n    127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n    ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n    192.168.0.101 server1.itcast.cn\n\n关闭iptables并设置其开机启动/不启动  \n\n    service iptables stop\n    chkconfig iptables on\n    chkconfig iptables off\n\n# linux 简单命令\n创建文件\ntouch somefile.1 创建一个空文本\necho \"i love u\" **>** somefile.2 利用重定向写入 覆盖原文件\necho \"i love u\" **>>** somefile.2 追加\n\nctrl+v进入块选择模式\nshift+v 进入行选择模式\n\n:%s/key/newword 查找并替换\n\n## 文件权限操作\ndrw-r--r--\n\nd：标识节点类型（d 文件夹 - 文件 l 链接)\nr 可读 w可写 x可执行\n拥有者 所属组 其他用户\n\n方式1 :\nchmod g-rw somefile.1\n\ng 组 o 其他 u用户  +-(增加/删除权限)  rwx\n\n方式2 : \nchmod 700 somfile.1\n\n文件夹及下面文件\n\nchmod -R 770 aaa/\n\n修改所有者(必须要root用户)\nchown angela:angela aaa/   组/用户\n\n## 基本的用户管理\n添加用户\n\nuseradd nagela\n修改密码\npasswd nagela 按提示输入密码即可\n\nsudo useradd xiaobai\n\n为用户配置sudo权限\n用root编辑 \nvi /etc/sudoers \n在文件如下位置,为hadoop添加一行即可\nroot ALL=(ALL) ALL  \nhadoop ALL=(ALL) ALL  \n\n## 系统管理操作\n1.查看主机名\nhostname\n\n2.修改主机名(重启后无效)\nhostname hadoop\n\n3.修改主机名(重启后永久生效)\nvi /ect/sysconfig/network\n\n4.修改IP(重启后无效)\nifconfig eth0 192.168.12.22\n\n5.修改IP(重启后永久生效)\nvi /etc/sysconfig/network-scripts/ifcfg-eth0\n\n6.查看系统信息\nuname -a\nuname -r\n\n7.查看ID命令\nid -u\nid -g\n\n8.日期\ndate\ndate +%Y-%m-%d\ndate +%T\ndate +%Y-%m-%d\" \"%T\n\n9.日历\ncal 2012\n\n10.查看文件信息\nfile filename\n\n11.挂载硬盘\nmount\numount\n加载windows共享\nmount -t cifs //192.168.1.100/tools /mnt\n\n12.查看文件大小\ndu -h\ndu -ah\n\n13.查看分区\ndf -h\n\n14.ssh\nssh hadoop@192.168.1.1\n\n15.关机\nshutdown -h now /init 0\nshutdown -r now /reboot\n\n\n# ssh免密登录\n![](http://ovasdkxqr.bkt.clouddn.com/dashuju/ssh%E5%85%8D%E5%AF%86%E7%99%BB%E9%99%86%E6%9C%BA%E5%88%B6%E7%A4%BA%E6%84%8F%E5%9B%BE.png)\n\n假如 A  要登陆  B\n在A上操作：\n首先生成密钥对\n\n    ssh-keygen   (提示时，直接回车即可)\n再将A自己的公钥拷贝并追加到B的授权列表文件authorized_keys中\n\n    ssh-copy-id   B\n\n\n\n","source":"_posts/大数据01-linux安装及基本命令.md","raw":"---\ntitle: 大数据01-linux安装及基本命令.md\ncategories: 大数据学习笔记\ntags: [linux,大数据,linux命令]\ntoc: true\ndate: 2017-10-30 22:30:38\nscaffolds:\n---\n\n# linux 文件目录\n> 约定俗成\n\n目录 | 功能\n------- | -------\n/bin | 可执行文件\n/sbin | 系统可执行文件\n/boot | 跟启动相关的东西\n/dev | 设备 硬件\n/etc | 配置文件 \n/lib | 依赖包\n/lib64 | 依赖包\n/media | 一些外接设备\n/mnt | 挂载\n/home | 用户目录\n/usr | user share resource 公用的一些软件\n/tmp | 临时文件\n\n\n\n<!-- more -->\n# linux 网络相关\n## 网卡相关:\n1. ip ：一般 1 给网关  255是广播地址\n2. gateway ： 网关\n3. netmask ： 子网掩码\n4. dns ：\n\n### 子网掩码\n是用来判断自己属于哪个网段\n\n网段的计算:\n将IP地址的二进制 & 子网掩码的二进制 = 网段地址\n例如：192.168.33.2 & 255.255.255.0 = 192.168.33.0\n### dns 域名解析\n1. 从本地hosts中寻找域名 -> ip映射信息\n2. 如果没有则去服务器找\n3. 访问服务器\n\n填写:\n1. 网关地址\n2. dns服务器\n\n![域名工作流程](http://ovasdkxqr.bkt.clouddn.com/dashuju/%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B.png)\n\nlinux dns配置文件\n> /etc/hosts\n\n## 网络模式\n### NAT模式  \n![NAT模式图](http://ovasdkxqr.bkt.clouddn.com/dashuju/NAT虚拟网络配置.png)  \n### 桥接模式  \n![桥接模式图](http://ovasdkxqr.bkt.clouddn.com/dashuju/ssh%E5%85%8D%E5%AF%86%E7%99%BB%E9%99%86%E6%9C%BA%E5%88%B6%E7%A4%BA%E6%84%8F%E5%9B%BE.png)\n### HOST only  \n![host only](http://ovasdkxqr.bkt.clouddn.com/dashuju/%E6%A1%A5%E6%8E%A5%E5%92%8Chostonly%E8%99%9A%E6%8B%9F%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE.png)\n\n## 修改linux ip\n修改主机名:  \n> vi /etc/sysconfig/network  \n    NETWORKING=yes\n    HOSTNAME=server1.itcast.cn\n\n修改IP地址  \nvi /etc/sysconfig/network-scripts/ifcfg-eth0  \n\n    DEVICE=eth0\n    TYPE=Ethernet\n    ONBOOT=yes          #是否开机启用\n    BOOTPROTO=static    #ip地址设置为静态\n    IPADDR=192.168.0.101\n    NETMASK=255.255.255.0\n\n修改ip地址和主机名的映射关系  \nvi /etc/hosts  \n\n    127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n    ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n    192.168.0.101 server1.itcast.cn\n\n关闭iptables并设置其开机启动/不启动  \n\n    service iptables stop\n    chkconfig iptables on\n    chkconfig iptables off\n\n# linux 简单命令\n创建文件\ntouch somefile.1 创建一个空文本\necho \"i love u\" **>** somefile.2 利用重定向写入 覆盖原文件\necho \"i love u\" **>>** somefile.2 追加\n\nctrl+v进入块选择模式\nshift+v 进入行选择模式\n\n:%s/key/newword 查找并替换\n\n## 文件权限操作\ndrw-r--r--\n\nd：标识节点类型（d 文件夹 - 文件 l 链接)\nr 可读 w可写 x可执行\n拥有者 所属组 其他用户\n\n方式1 :\nchmod g-rw somefile.1\n\ng 组 o 其他 u用户  +-(增加/删除权限)  rwx\n\n方式2 : \nchmod 700 somfile.1\n\n文件夹及下面文件\n\nchmod -R 770 aaa/\n\n修改所有者(必须要root用户)\nchown angela:angela aaa/   组/用户\n\n## 基本的用户管理\n添加用户\n\nuseradd nagela\n修改密码\npasswd nagela 按提示输入密码即可\n\nsudo useradd xiaobai\n\n为用户配置sudo权限\n用root编辑 \nvi /etc/sudoers \n在文件如下位置,为hadoop添加一行即可\nroot ALL=(ALL) ALL  \nhadoop ALL=(ALL) ALL  \n\n## 系统管理操作\n1.查看主机名\nhostname\n\n2.修改主机名(重启后无效)\nhostname hadoop\n\n3.修改主机名(重启后永久生效)\nvi /ect/sysconfig/network\n\n4.修改IP(重启后无效)\nifconfig eth0 192.168.12.22\n\n5.修改IP(重启后永久生效)\nvi /etc/sysconfig/network-scripts/ifcfg-eth0\n\n6.查看系统信息\nuname -a\nuname -r\n\n7.查看ID命令\nid -u\nid -g\n\n8.日期\ndate\ndate +%Y-%m-%d\ndate +%T\ndate +%Y-%m-%d\" \"%T\n\n9.日历\ncal 2012\n\n10.查看文件信息\nfile filename\n\n11.挂载硬盘\nmount\numount\n加载windows共享\nmount -t cifs //192.168.1.100/tools /mnt\n\n12.查看文件大小\ndu -h\ndu -ah\n\n13.查看分区\ndf -h\n\n14.ssh\nssh hadoop@192.168.1.1\n\n15.关机\nshutdown -h now /init 0\nshutdown -r now /reboot\n\n\n# ssh免密登录\n![](http://ovasdkxqr.bkt.clouddn.com/dashuju/ssh%E5%85%8D%E5%AF%86%E7%99%BB%E9%99%86%E6%9C%BA%E5%88%B6%E7%A4%BA%E6%84%8F%E5%9B%BE.png)\n\n假如 A  要登陆  B\n在A上操作：\n首先生成密钥对\n\n    ssh-keygen   (提示时，直接回车即可)\n再将A自己的公钥拷贝并追加到B的授权列表文件authorized_keys中\n\n    ssh-copy-id   B\n\n\n\n","slug":"大数据01-linux安装及基本命令","published":1,"updated":"2017-11-06T16:13:20.500Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9wugozo000eh4v7whqminsp","content":"<h1 id=\"linux-文件目录\"><a href=\"#linux-文件目录\" class=\"headerlink\" title=\"linux 文件目录\"></a>linux 文件目录</h1><blockquote>\n<p>约定俗成</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>目录</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>/bin</td>\n<td>可执行文件</td>\n</tr>\n<tr>\n<td>/sbin</td>\n<td>系统可执行文件</td>\n</tr>\n<tr>\n<td>/boot</td>\n<td>跟启动相关的东西</td>\n</tr>\n<tr>\n<td>/dev</td>\n<td>设备 硬件</td>\n</tr>\n<tr>\n<td>/etc</td>\n<td>配置文件 </td>\n</tr>\n<tr>\n<td>/lib</td>\n<td>依赖包</td>\n</tr>\n<tr>\n<td>/lib64</td>\n<td>依赖包</td>\n</tr>\n<tr>\n<td>/media</td>\n<td>一些外接设备</td>\n</tr>\n<tr>\n<td>/mnt</td>\n<td>挂载</td>\n</tr>\n<tr>\n<td>/home</td>\n<td>用户目录</td>\n</tr>\n<tr>\n<td>/usr</td>\n<td>user share resource 公用的一些软件</td>\n</tr>\n<tr>\n<td>/tmp</td>\n<td>临时文件</td>\n</tr>\n</tbody>\n</table>\n<a id=\"more\"></a>\n<h1 id=\"linux-网络相关\"><a href=\"#linux-网络相关\" class=\"headerlink\" title=\"linux 网络相关\"></a>linux 网络相关</h1><h2 id=\"网卡相关\"><a href=\"#网卡相关\" class=\"headerlink\" title=\"网卡相关:\"></a>网卡相关:</h2><ol>\n<li>ip ：一般 1 给网关  255是广播地址</li>\n<li>gateway ： 网关</li>\n<li>netmask ： 子网掩码</li>\n<li>dns ：</li>\n</ol>\n<h3 id=\"子网掩码\"><a href=\"#子网掩码\" class=\"headerlink\" title=\"子网掩码\"></a>子网掩码</h3><p>是用来判断自己属于哪个网段</p>\n<p>网段的计算:<br>将IP地址的二进制 &amp; 子网掩码的二进制 = 网段地址<br>例如：192.168.33.2 &amp; 255.255.255.0 = 192.168.33.0</p>\n<h3 id=\"dns-域名解析\"><a href=\"#dns-域名解析\" class=\"headerlink\" title=\"dns 域名解析\"></a>dns 域名解析</h3><ol>\n<li>从本地hosts中寻找域名 -&gt; ip映射信息</li>\n<li>如果没有则去服务器找</li>\n<li>访问服务器</li>\n</ol>\n<p>填写:</p>\n<ol>\n<li>网关地址</li>\n<li>dns服务器</li>\n</ol>\n<p><img src=\"http://ovasdkxqr.bkt.clouddn.com/dashuju/%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B.png\" alt=\"域名工作流程\"></p>\n<p>linux dns配置文件</p>\n<blockquote>\n<p>/etc/hosts</p>\n</blockquote>\n<h2 id=\"网络模式\"><a href=\"#网络模式\" class=\"headerlink\" title=\"网络模式\"></a>网络模式</h2><h3 id=\"NAT模式\"><a href=\"#NAT模式\" class=\"headerlink\" title=\"NAT模式\"></a>NAT模式</h3><p><img src=\"http://ovasdkxqr.bkt.clouddn.com/dashuju/NAT虚拟网络配置.png\" alt=\"NAT模式图\">  </p>\n<h3 id=\"桥接模式\"><a href=\"#桥接模式\" class=\"headerlink\" title=\"桥接模式\"></a>桥接模式</h3><p><img src=\"http://ovasdkxqr.bkt.clouddn.com/dashuju/ssh%E5%85%8D%E5%AF%86%E7%99%BB%E9%99%86%E6%9C%BA%E5%88%B6%E7%A4%BA%E6%84%8F%E5%9B%BE.png\" alt=\"桥接模式图\"></p>\n<h3 id=\"HOST-only\"><a href=\"#HOST-only\" class=\"headerlink\" title=\"HOST only\"></a>HOST only</h3><p><img src=\"http://ovasdkxqr.bkt.clouddn.com/dashuju/%E6%A1%A5%E6%8E%A5%E5%92%8Chostonly%E8%99%9A%E6%8B%9F%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE.png\" alt=\"host only\"></p>\n<h2 id=\"修改linux-ip\"><a href=\"#修改linux-ip\" class=\"headerlink\" title=\"修改linux ip\"></a>修改linux ip</h2><p>修改主机名:  </p>\n<blockquote>\n<p>vi /etc/sysconfig/network<br>    NETWORKING=yes<br>    HOSTNAME=server1.itcast.cn</p>\n</blockquote>\n<p>修改IP地址<br>vi /etc/sysconfig/network-scripts/ifcfg-eth0  </p>\n<pre><code>DEVICE=eth0\nTYPE=Ethernet\nONBOOT=yes          #是否开机启用\nBOOTPROTO=static    #ip地址设置为静态\nIPADDR=192.168.0.101\nNETMASK=255.255.255.0\n</code></pre><p>修改ip地址和主机名的映射关系<br>vi /etc/hosts  </p>\n<pre><code>127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n192.168.0.101 server1.itcast.cn\n</code></pre><p>关闭iptables并设置其开机启动/不启动  </p>\n<pre><code>service iptables stop\nchkconfig iptables on\nchkconfig iptables off\n</code></pre><h1 id=\"linux-简单命令\"><a href=\"#linux-简单命令\" class=\"headerlink\" title=\"linux 简单命令\"></a>linux 简单命令</h1><p>创建文件<br>touch somefile.1 创建一个空文本<br>echo “i love u” <strong>&gt;</strong> somefile.2 利用重定向写入 覆盖原文件<br>echo “i love u” <strong>&gt;&gt;</strong> somefile.2 追加</p>\n<p>ctrl+v进入块选择模式<br>shift+v 进入行选择模式</p>\n<p>:%s/key/newword 查找并替换</p>\n<h2 id=\"文件权限操作\"><a href=\"#文件权限操作\" class=\"headerlink\" title=\"文件权限操作\"></a>文件权限操作</h2><p>drw-r–r–</p>\n<p>d：标识节点类型（d 文件夹 - 文件 l 链接)<br>r 可读 w可写 x可执行<br>拥有者 所属组 其他用户</p>\n<p>方式1 :<br>chmod g-rw somefile.1</p>\n<p>g 组 o 其他 u用户  +-(增加/删除权限)  rwx</p>\n<p>方式2 :<br>chmod 700 somfile.1</p>\n<p>文件夹及下面文件</p>\n<p>chmod -R 770 aaa/</p>\n<p>修改所有者(必须要root用户)<br>chown angela:angela aaa/   组/用户</p>\n<h2 id=\"基本的用户管理\"><a href=\"#基本的用户管理\" class=\"headerlink\" title=\"基本的用户管理\"></a>基本的用户管理</h2><p>添加用户</p>\n<p>useradd nagela<br>修改密码<br>passwd nagela 按提示输入密码即可</p>\n<p>sudo useradd xiaobai</p>\n<p>为用户配置sudo权限<br>用root编辑<br>vi /etc/sudoers<br>在文件如下位置,为hadoop添加一行即可<br>root ALL=(ALL) ALL<br>hadoop ALL=(ALL) ALL  </p>\n<h2 id=\"系统管理操作\"><a href=\"#系统管理操作\" class=\"headerlink\" title=\"系统管理操作\"></a>系统管理操作</h2><p>1.查看主机名<br>hostname</p>\n<p>2.修改主机名(重启后无效)<br>hostname hadoop</p>\n<p>3.修改主机名(重启后永久生效)<br>vi /ect/sysconfig/network</p>\n<p>4.修改IP(重启后无效)<br>ifconfig eth0 192.168.12.22</p>\n<p>5.修改IP(重启后永久生效)<br>vi /etc/sysconfig/network-scripts/ifcfg-eth0</p>\n<p>6.查看系统信息<br>uname -a<br>uname -r</p>\n<p>7.查看ID命令<br>id -u<br>id -g</p>\n<p>8.日期<br>date<br>date +%Y-%m-%d<br>date +%T<br>date +%Y-%m-%d” “%T</p>\n<p>9.日历<br>cal 2012</p>\n<p>10.查看文件信息<br>file filename</p>\n<p>11.挂载硬盘<br>mount<br>umount<br>加载windows共享<br>mount -t cifs //192.168.1.100/tools /mnt</p>\n<p>12.查看文件大小<br>du -h<br>du -ah</p>\n<p>13.查看分区<br>df -h</p>\n<p>14.ssh<br>ssh hadoop@192.168.1.1</p>\n<p>15.关机<br>shutdown -h now /init 0<br>shutdown -r now /reboot</p>\n<h1 id=\"ssh免密登录\"><a href=\"#ssh免密登录\" class=\"headerlink\" title=\"ssh免密登录\"></a>ssh免密登录</h1><p><img src=\"http://ovasdkxqr.bkt.clouddn.com/dashuju/ssh%E5%85%8D%E5%AF%86%E7%99%BB%E9%99%86%E6%9C%BA%E5%88%B6%E7%A4%BA%E6%84%8F%E5%9B%BE.png\" alt=\"\"></p>\n<p>假如 A  要登陆  B<br>在A上操作：<br>首先生成密钥对</p>\n<pre><code>ssh-keygen   (提示时，直接回车即可)\n</code></pre><p>再将A自己的公钥拷贝并追加到B的授权列表文件authorized_keys中</p>\n<pre><code>ssh-copy-id   B\n</code></pre>","site":{"data":{}},"excerpt":"<h1 id=\"linux-文件目录\"><a href=\"#linux-文件目录\" class=\"headerlink\" title=\"linux 文件目录\"></a>linux 文件目录</h1><blockquote>\n<p>约定俗成</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>目录</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>/bin</td>\n<td>可执行文件</td>\n</tr>\n<tr>\n<td>/sbin</td>\n<td>系统可执行文件</td>\n</tr>\n<tr>\n<td>/boot</td>\n<td>跟启动相关的东西</td>\n</tr>\n<tr>\n<td>/dev</td>\n<td>设备 硬件</td>\n</tr>\n<tr>\n<td>/etc</td>\n<td>配置文件 </td>\n</tr>\n<tr>\n<td>/lib</td>\n<td>依赖包</td>\n</tr>\n<tr>\n<td>/lib64</td>\n<td>依赖包</td>\n</tr>\n<tr>\n<td>/media</td>\n<td>一些外接设备</td>\n</tr>\n<tr>\n<td>/mnt</td>\n<td>挂载</td>\n</tr>\n<tr>\n<td>/home</td>\n<td>用户目录</td>\n</tr>\n<tr>\n<td>/usr</td>\n<td>user share resource 公用的一些软件</td>\n</tr>\n<tr>\n<td>/tmp</td>\n<td>临时文件</td>\n</tr>\n</tbody>\n</table>","more":"<h1 id=\"linux-网络相关\"><a href=\"#linux-网络相关\" class=\"headerlink\" title=\"linux 网络相关\"></a>linux 网络相关</h1><h2 id=\"网卡相关\"><a href=\"#网卡相关\" class=\"headerlink\" title=\"网卡相关:\"></a>网卡相关:</h2><ol>\n<li>ip ：一般 1 给网关  255是广播地址</li>\n<li>gateway ： 网关</li>\n<li>netmask ： 子网掩码</li>\n<li>dns ：</li>\n</ol>\n<h3 id=\"子网掩码\"><a href=\"#子网掩码\" class=\"headerlink\" title=\"子网掩码\"></a>子网掩码</h3><p>是用来判断自己属于哪个网段</p>\n<p>网段的计算:<br>将IP地址的二进制 &amp; 子网掩码的二进制 = 网段地址<br>例如：192.168.33.2 &amp; 255.255.255.0 = 192.168.33.0</p>\n<h3 id=\"dns-域名解析\"><a href=\"#dns-域名解析\" class=\"headerlink\" title=\"dns 域名解析\"></a>dns 域名解析</h3><ol>\n<li>从本地hosts中寻找域名 -&gt; ip映射信息</li>\n<li>如果没有则去服务器找</li>\n<li>访问服务器</li>\n</ol>\n<p>填写:</p>\n<ol>\n<li>网关地址</li>\n<li>dns服务器</li>\n</ol>\n<p><img src=\"http://ovasdkxqr.bkt.clouddn.com/dashuju/%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B.png\" alt=\"域名工作流程\"></p>\n<p>linux dns配置文件</p>\n<blockquote>\n<p>/etc/hosts</p>\n</blockquote>\n<h2 id=\"网络模式\"><a href=\"#网络模式\" class=\"headerlink\" title=\"网络模式\"></a>网络模式</h2><h3 id=\"NAT模式\"><a href=\"#NAT模式\" class=\"headerlink\" title=\"NAT模式\"></a>NAT模式</h3><p><img src=\"http://ovasdkxqr.bkt.clouddn.com/dashuju/NAT虚拟网络配置.png\" alt=\"NAT模式图\">  </p>\n<h3 id=\"桥接模式\"><a href=\"#桥接模式\" class=\"headerlink\" title=\"桥接模式\"></a>桥接模式</h3><p><img src=\"http://ovasdkxqr.bkt.clouddn.com/dashuju/ssh%E5%85%8D%E5%AF%86%E7%99%BB%E9%99%86%E6%9C%BA%E5%88%B6%E7%A4%BA%E6%84%8F%E5%9B%BE.png\" alt=\"桥接模式图\"></p>\n<h3 id=\"HOST-only\"><a href=\"#HOST-only\" class=\"headerlink\" title=\"HOST only\"></a>HOST only</h3><p><img src=\"http://ovasdkxqr.bkt.clouddn.com/dashuju/%E6%A1%A5%E6%8E%A5%E5%92%8Chostonly%E8%99%9A%E6%8B%9F%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE.png\" alt=\"host only\"></p>\n<h2 id=\"修改linux-ip\"><a href=\"#修改linux-ip\" class=\"headerlink\" title=\"修改linux ip\"></a>修改linux ip</h2><p>修改主机名:  </p>\n<blockquote>\n<p>vi /etc/sysconfig/network<br>    NETWORKING=yes<br>    HOSTNAME=server1.itcast.cn</p>\n</blockquote>\n<p>修改IP地址<br>vi /etc/sysconfig/network-scripts/ifcfg-eth0  </p>\n<pre><code>DEVICE=eth0\nTYPE=Ethernet\nONBOOT=yes          #是否开机启用\nBOOTPROTO=static    #ip地址设置为静态\nIPADDR=192.168.0.101\nNETMASK=255.255.255.0\n</code></pre><p>修改ip地址和主机名的映射关系<br>vi /etc/hosts  </p>\n<pre><code>127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n192.168.0.101 server1.itcast.cn\n</code></pre><p>关闭iptables并设置其开机启动/不启动  </p>\n<pre><code>service iptables stop\nchkconfig iptables on\nchkconfig iptables off\n</code></pre><h1 id=\"linux-简单命令\"><a href=\"#linux-简单命令\" class=\"headerlink\" title=\"linux 简单命令\"></a>linux 简单命令</h1><p>创建文件<br>touch somefile.1 创建一个空文本<br>echo “i love u” <strong>&gt;</strong> somefile.2 利用重定向写入 覆盖原文件<br>echo “i love u” <strong>&gt;&gt;</strong> somefile.2 追加</p>\n<p>ctrl+v进入块选择模式<br>shift+v 进入行选择模式</p>\n<p>:%s/key/newword 查找并替换</p>\n<h2 id=\"文件权限操作\"><a href=\"#文件权限操作\" class=\"headerlink\" title=\"文件权限操作\"></a>文件权限操作</h2><p>drw-r–r–</p>\n<p>d：标识节点类型（d 文件夹 - 文件 l 链接)<br>r 可读 w可写 x可执行<br>拥有者 所属组 其他用户</p>\n<p>方式1 :<br>chmod g-rw somefile.1</p>\n<p>g 组 o 其他 u用户  +-(增加/删除权限)  rwx</p>\n<p>方式2 :<br>chmod 700 somfile.1</p>\n<p>文件夹及下面文件</p>\n<p>chmod -R 770 aaa/</p>\n<p>修改所有者(必须要root用户)<br>chown angela:angela aaa/   组/用户</p>\n<h2 id=\"基本的用户管理\"><a href=\"#基本的用户管理\" class=\"headerlink\" title=\"基本的用户管理\"></a>基本的用户管理</h2><p>添加用户</p>\n<p>useradd nagela<br>修改密码<br>passwd nagela 按提示输入密码即可</p>\n<p>sudo useradd xiaobai</p>\n<p>为用户配置sudo权限<br>用root编辑<br>vi /etc/sudoers<br>在文件如下位置,为hadoop添加一行即可<br>root ALL=(ALL) ALL<br>hadoop ALL=(ALL) ALL  </p>\n<h2 id=\"系统管理操作\"><a href=\"#系统管理操作\" class=\"headerlink\" title=\"系统管理操作\"></a>系统管理操作</h2><p>1.查看主机名<br>hostname</p>\n<p>2.修改主机名(重启后无效)<br>hostname hadoop</p>\n<p>3.修改主机名(重启后永久生效)<br>vi /ect/sysconfig/network</p>\n<p>4.修改IP(重启后无效)<br>ifconfig eth0 192.168.12.22</p>\n<p>5.修改IP(重启后永久生效)<br>vi /etc/sysconfig/network-scripts/ifcfg-eth0</p>\n<p>6.查看系统信息<br>uname -a<br>uname -r</p>\n<p>7.查看ID命令<br>id -u<br>id -g</p>\n<p>8.日期<br>date<br>date +%Y-%m-%d<br>date +%T<br>date +%Y-%m-%d” “%T</p>\n<p>9.日历<br>cal 2012</p>\n<p>10.查看文件信息<br>file filename</p>\n<p>11.挂载硬盘<br>mount<br>umount<br>加载windows共享<br>mount -t cifs //192.168.1.100/tools /mnt</p>\n<p>12.查看文件大小<br>du -h<br>du -ah</p>\n<p>13.查看分区<br>df -h</p>\n<p>14.ssh<br>ssh hadoop@192.168.1.1</p>\n<p>15.关机<br>shutdown -h now /init 0<br>shutdown -r now /reboot</p>\n<h1 id=\"ssh免密登录\"><a href=\"#ssh免密登录\" class=\"headerlink\" title=\"ssh免密登录\"></a>ssh免密登录</h1><p><img src=\"http://ovasdkxqr.bkt.clouddn.com/dashuju/ssh%E5%85%8D%E5%AF%86%E7%99%BB%E9%99%86%E6%9C%BA%E5%88%B6%E7%A4%BA%E6%84%8F%E5%9B%BE.png\" alt=\"\"></p>\n<p>假如 A  要登陆  B<br>在A上操作：<br>首先生成密钥对</p>\n<pre><code>ssh-keygen   (提示时，直接回车即可)\n</code></pre><p>再将A自己的公钥拷贝并追加到B的授权列表文件authorized_keys中</p>\n<pre><code>ssh-copy-id   B\n</code></pre>"},{"title":"vagrant 创建virtualBox虚拟机","toc":true,"date":"2017-11-04T15:37:13.000Z","scaffolds":null,"_content":"# 安装vagrant\n## 本机环境\n\n系统环境 ： win10 64 系统\n\n## 软件及镜像\n\n\nvagrant 官网 https://www.vagrantup.com/  \nvagrant 需要依赖虚拟机 我用的 virtualBox  \nvirtualBox 官网 https://www.virtualbox.org/  \nvirtualBox 镜像 在vagrant官网中可以下载\n\n由于国内下载比较慢，已分享到百度云\n\n|名称|类型| 分享链接|\n|:----|:----:|:---------:|\n|vagrant_1.9.5.msi | 软件 | http://pan.baidu.com/s/1kVzFP1H|\n|VirtualBox-5.1.22-115126-Win.exe | 软件 | http://pan.baidu.com/s/1jIQgl6m|\n|centos-7.0-x86_64.box | 镜像文件 | http://pan.baidu.com/s/1o7Zlspk|\n|gparted-live-0.28.1-1-i686.iso | 32位分区live-cd | http://pan.baidu.com/s/1jISiee6|\n|gparted-live-0.28.1-1-amd64.iso | 64位分区live-cd | http://pan.baidu.com/s/1dFenvvb|\n<!-- more -->\n上面的gparted iso 文件是分区用的不过没有用到，下载不容易就一块传上来了。\n\n## 更改vagrant 存放box的位置\n默认vagrant 添加的box 默认存放位置为\n> C:\\Users\\当前用户名\\ .vagrant.d\\boxes\\ \n\n可以通过添加环境变量 VAGRANT_HOME 修改存放位置\n\n例如：VAGRANT_HOME = D:\\Program Files\\VagrantHome\n\n## 更改virtualBox 存放镜像目录\n默认目录 \n\n> C:\\Users\\当前用户名\\VirtualBox VMs\n  \n可以在virtualBox 软件 > 管理 > 全局设置 > 常规 > 默认虚拟电脑位置进行修改\n\n我修改为\n> D:\\VirtualBoxVMs\n# 启动vagrant\n## 添加box\n> vagrant box add centos7 E:\\软件安装包\\centos-7.0-x86_64.box\n\n查看已添加的box\n\n> vagrant box list\n\n    D:\\vagrantSpace>vagrant box list\n    centos7 (virtualbox, 0)\n\n## 初始化\n\n在准备存放vagrant配置文件的文件夹中执行\n\n> vagrant init \n\n会生成 Vagrantfile 文件  \n文件中包含vagrant 配置信息  \n其中有一些配置项的说明  \n\n    config.vm.box = \"base\" 修改base 为centos7 即 boxlist 中的名字  \n    config.vm.synced_folder \"E:\\\", \"/vagrant_data\" 共享文件夹\n    \n其他配置请自行百度\n\n### vagrant 配置文件\n\n下面的是我的配置\n\n    # -*- mode: ruby -*-\n    # vi: set ft=ruby :\n    Vagrant.configure(\"2\") do |config|\n      config.vm.box = \"centos7\"\n      config.vm.define :java do |java|\n        java.vm.provider \"virtualbox\" do |v|\n            v.customize [\"modifyvm\", :id, \"--name\", \"java\", \"--memory\", \"512\"]\n        end\n        java.vm.box = \"centos7\"\n        java.vm.hostname = \"java\"\n        java.vm.network :private_network, ip: \"192.168.33.10\"\n      end\n      config.vm.define :linux do |linux|\n        linux.vm.provider \"virtualbox\" do |v|\n            v.customize [\"modifyvm\", :id, \"--name\", \"linux\", \"--memory\", \"512\"]\n        end\n        linux.vm.box = \"centos7\"\n        linux.vm.hostname = \"linux\"\n        linux.vm.network :private_network, ip: \"192.168.33.11\"\n      end\n    end\n\n## 启动虚拟机\n\n> vagrant up linux \n\n第一次会初始化虚拟机,并启动,成功后查看虚拟机运行状态\n\n> vagrant global-status\n\n    D:\\vagrantSpace>vagrant global-status\n    id       name   provider   state   directory\n    -----------------------------------------------------------------------\n    1d24610  linux  virtualbox running D:/vagrantSpace\n\n这个时候就可以通过ssh登录虚拟机了。默认用户和密码都是 vagrant\n\n------------------------------------\n下面是修改磁盘大小,如果觉得没有必要,可以不修改,直接玩就可以啦\n\n# 修改虚拟机磁盘大小\n\nvagrant 默认创建的磁盘 根目录下只有10G.觉得太小,修改为1T.\n\n- 关闭 linux\n\n> vagrant halt linux\n\n- 进入到 D:\\VirtualBoxVMs文件夹下 即 之前设置的virtualBox的路径,里面会有个刚才创建的linux系统的文件夹 D:\\VirtualBoxVMs\\linux\n- 加入virtualBox 安装目录加入环境变量path\n\n    安装virtualBox后会自动加入 VBOX_MSI_INSTALL_PATH 环境变量,直接把这个路径加到path后面即可. \n    \n> %VBOX_MSI_INSTALL_PATH%\n    \n- 通过下面命令 复制一份磁盘文件, .vmdk 文件直接修改大小会报错\n\n\n> vboxmanage clonehd box-disk1.vmdk box.vdi --format vdi\n\n    D:\\VirtualBoxVMs\\linux>vboxmanage clonehd box-disk1.vmdk box.vdi --format vdi\n    0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\n    Clone medium created in format 'vdi'. UUID: 1431c156-a3b1-4374-b196-36450edecd9e\n\n- 修改vdi 文件大小,命令如下\n\n> vboxmanage modifyhd box.vdi --resize 1048576\n\n    D:\\VirtualBoxVMs\\linux>vboxmanage modifyhd box.vdi --resize 1048576\n    0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\n\n- 打开虚拟机,修改 linux 磁盘文件为 box.vdi\n\n![](https://static.oschina.net/uploads/img/201707/02192036_F9Jv.jpg)\n\n修改后\n\n![](https://static.oschina.net/uploads/img/201707/02192410_T07t.jpg)\n\n- 查看D:\\VirtualBoxVMs\\linux 文件夹下linux.vbox 文件 \n删除 原来的harddisk \n```\n     <HardDisk uuid=\"{3417d3e1-fcfd-410c-8df6-adba5f8b01bb}\" location=\"box-disk1.vmdk\" format=\"VMDK\" type=\"Normal\"/>\n```\n\n保留新的harddisk\n```\n    <HardDisk uuid=\"{417759f6-4e5d-4a45-9ce1-1351b15c5a7d}\" location=\"box-linux.vdi\" format=\"VDI\" type=\"Normal\"/>\n```\n\n\n- 删除原来的磁盘文件, box-disk1.vmdk。这个可以以后再删除也可以，防止操作中出现什么错误。\n- 启动虚拟机\n> vagrant up linux\n\n切换到root，密码为vagrant\n\n> su\n\n查看磁盘\n\n> fdisk -l\n\n    Gerät  boot.     Anfang        Ende     Blöcke   Id  System\n    /dev/sda1   *        2048     1026047      512000   83  Linux\n    /dev/sda2         1026048    20766719     9870336   8e  Linux LVM\n\n可以看到一共还是10G,并不是1T,我们需要加一个磁盘sda3\n\n    fdisk /dev/sda\n    n\n    p\n    3\n    回车\n    回车\n更改磁盘类型为 lvm\n\n    t\n    3\n    8e\n\n\n查看磁盘\n\n    p\n全部操作如下\n    \n    Befehl (m für Hilfe): n\n    Partition type:\n       p   primary (2 primary, 0 extended, 2 free)\n       e   Erweiterte\n    Select (default p): p\n    Partitionsnummer (3,4, default 3): 3\n    Erster Sektor (20766720-2147483647, Vorgabe: 20766720): \n    Benutze den Standardwert 20766720\n    Last Sektor, +Sektoren or +size{K,M,G} (20766720-2147483647, Vorgabe: 2147483647): \n    Benutze den Standardwert 2147483647\n    Partition 3 of type Linux and of size 1014,1 GiB is set\n    \n    Befehl (m für Hilfe): t\n    Partitionsnummer (1-3, default 3): 3\n    Hex code (type L to list all codes): 8e\n    Changed type of partition 'Linux' to 'Linux LVM'\n    \n    Befehl (m für Hilfe): p\n    \n    Disk /dev/sda: 1099.5 GB, 1099511627776 bytes, 2147483648 sectors\n    Units = Sektoren of 1 * 512 = 512 bytes\n    Sector size (logical/physical): 512 bytes / 512 bytes\n    I/O size (minimum/optimal): 512 bytes / 512 bytes\n    Disk label type: dos\n    Disk identifier: 0x00095a8e\n    \n       Gerät  boot.     Anfang        Ende     Blöcke   Id  System\n    /dev/sda1   *        2048     1026047      512000   83  Linux\n    /dev/sda2         1026048    20766719     9870336   8e  Linux LVM\n    /dev/sda3        20766720  2147483647  1063358464   8e  Linux LVM\n\n保存退出\n\n    w\n重启虚拟机\n    \n    reboot\n查看当前 Volume Group\n\n    vgdisplay\n信息如下\n\n    [root@linux vagrant]# vgdisplay\n      --- Volume group ---\n      VG Name               centos\n      System ID             \n      Format                lvm2\n      Metadata Areas        1\n      Metadata Sequence No  3\n      VG Access             read/write\n      VG Status             resizable\n      MAX LV                0\n      Cur LV                2\n      Open LV               2\n      Max PV                0\n      Cur PV                1\n      Act PV                1\n      VG Size               9,41 GiB\n      PE Size               4,00 MiB\n      Total PE              2409\n      Alloc PE / Size       2399 / 9,37 GiB\n      Free  PE / Size       10 / 40,00 MiB\n      VG UUID               NJWfOH-An0K-Hm9Q-8Tjs-yq2x-ZWXi-L2vP7i\n      \n名称为 centos，可调整大小（resizable），当前大小为 9,41GB。活动的 LVM 卷有\n\n    lvscan\n    \n    [root@linux vagrant]# lvscan\n    ACTIVE            '/dev/centos/swap' [1016,00 MiB] inherit\n    ACTIVE            '/dev/centos/root' [8,38 GiB] inherit\n    \n先将分配过来的新磁盘空间创建为一个新的物理卷\n\n    pvcreate /dev/sda3\n    \n    [root@linux vagrant]# pvcreate /dev/sda3\n    Physical volume \"/dev/sda3\" successfully created\n    \n然后使用新的物理卷来扩展 LVM 的 centos\n\n    vgextend centos /dev/sda3\n    \n    [root@linux vagrant]# vgextend centos /dev/sda3\n    Volume group \"centos\" successfully extended\n\n然后扩展 LVM 的逻辑卷 centos-lv_root\n\n    lvextend /dev/centos/root /dev/sda3\n    \n    [root@linux vagrant]# lvextend /dev/centos/root /dev/sda3\n    Size of logical volume centos/root changed from 8,38 GiB (2145 extents) to 1022,47 GiB (261753 extents).\n    Logical volume root successfully resized\n    \n最后，调整逻辑卷文件系统的大小\n\n    vagrant]# resize2fs /dev/centos/root\n    \n    [root@linux vagrant]# resize2fs /dev/centos/root\n    resize2fs 1.42.9 (28-Dec-2013)\n    resize2fs: Ungültige magische Zahl im Superblock beim Versuch, /dev/centos/root zu öffnen\n    Kann keinen gültigen Dateisystem-Superblock finden.\n    \n完成。看看效果,可以看到root下变成了1T\n\n    lvscan\n    \n    [root@linux vagrant]# lvscan\n      ACTIVE            '/dev/centos/swap' [1016,00 MiB] inherit\n      ACTIVE            '/dev/centos/root' [1022,47 GiB] inherit\n      \n但是,查看根目录下面分配大小, 跟目录还是为8.4G\n\n    [root@linux vagrant]# df -h\n    Dateisystem             Größe Benutzt Verf. Verw% Eingehängt auf\n    /dev/mapper/centos-root  8,4G    1,1G  7,4G   13% /\n    devtmpfs                 236M       0  236M    0% /dev\n    tmpfs                    245M       0  245M    0% /dev/shm\n    tmpfs                    245M    4,3M  241M    2% /run\n    tmpfs                    245M       0  245M    0% /sys/fs/cgroup\n    /dev/sda1                497M    118M  379M   24% /boot  \n \n用 xfs_growfs 对扩容后的 LV 进行 xfs 格式大小调整\n\n    xfs_growfs /dev/centos/root\n    \n    [root@linux vagrant]# xfs_growfs /dev/centos/root\n    meta-data=/dev/mapper/centos-root isize=256    agcount=4, agsize=549120 blks\n             =                       sectsz=512   attr=2, projid32bit=1\n             =                       crc=0        finobt=0\n    data     =                       bsize=4096   blocks=2196480, imaxpct=25\n             =                       sunit=0      swidth=0 blks\n    naming   =version 2              bsize=4096   ascii-ci=0 ftype=0\n    log      =Intern                 bsize=4096   blocks=2560, version=2\n             =                       sectsz=512   sunit=0 blks, lazy-count=1\n    realtime =keine                  extsz=4096   blocks=0, rtextents=0\n    Datenblöcke von 2196480 auf 268035072 geändert.\n\n再查看\n\n    [root@linux vagrant]# df -h\n    Dateisystem             Größe Benutzt Verf. Verw% Eingehängt auf\n    /dev/mapper/centos-root 1023G    1,1G 1022G    1% /\n    devtmpfs                 236M       0  236M    0% /dev\n    tmpfs                    245M       0  245M    0% /dev/shm\n    tmpfs                    245M    4,3M  241M    2% /run\n    tmpfs                    245M       0  245M    0% /sys/fs/cgroup\n    /dev/sda1                497M    118M  379M   24% /boot\n    \n可以看到根目录大小已经变成1T了\n\nhttp://pan.baidu.com/s/1dEC3ePr\n\n由于不了解linux,修改磁盘大小费了很多事.完成后打了包,做成了新的box，方便以后直接使用。\n\n# 其他\n## 修改linux 语言\n> /etc/locale.conf\n```\nLANG='en_US.UTF-8'\n```\n\n\n# 参考博客:  \n\n## 调整 VirtualBox 虚拟机的磁盘大小  \nhttps://cnzhx.net/blog/resizing-lvm-centos-virtualbox-guest/  \n\n## 手把手教你给 CentOS 7 添加硬盘及扩容(LVM)  \nhttps://aurthurxlc.github.io/Aurthur-2017/Centos-7-extend-lvm-volume.html\n","source":"_posts/vagrant 创建virtualBox虚拟机.md","raw":"---\ntitle: vagrant 创建virtualBox虚拟机\ncategories: 工具\ntoc: true\ndate: 2017-11-04 23:37:13\nscaffolds:\ntags: [vagrant]\n---\n# 安装vagrant\n## 本机环境\n\n系统环境 ： win10 64 系统\n\n## 软件及镜像\n\n\nvagrant 官网 https://www.vagrantup.com/  \nvagrant 需要依赖虚拟机 我用的 virtualBox  \nvirtualBox 官网 https://www.virtualbox.org/  \nvirtualBox 镜像 在vagrant官网中可以下载\n\n由于国内下载比较慢，已分享到百度云\n\n|名称|类型| 分享链接|\n|:----|:----:|:---------:|\n|vagrant_1.9.5.msi | 软件 | http://pan.baidu.com/s/1kVzFP1H|\n|VirtualBox-5.1.22-115126-Win.exe | 软件 | http://pan.baidu.com/s/1jIQgl6m|\n|centos-7.0-x86_64.box | 镜像文件 | http://pan.baidu.com/s/1o7Zlspk|\n|gparted-live-0.28.1-1-i686.iso | 32位分区live-cd | http://pan.baidu.com/s/1jISiee6|\n|gparted-live-0.28.1-1-amd64.iso | 64位分区live-cd | http://pan.baidu.com/s/1dFenvvb|\n<!-- more -->\n上面的gparted iso 文件是分区用的不过没有用到，下载不容易就一块传上来了。\n\n## 更改vagrant 存放box的位置\n默认vagrant 添加的box 默认存放位置为\n> C:\\Users\\当前用户名\\ .vagrant.d\\boxes\\ \n\n可以通过添加环境变量 VAGRANT_HOME 修改存放位置\n\n例如：VAGRANT_HOME = D:\\Program Files\\VagrantHome\n\n## 更改virtualBox 存放镜像目录\n默认目录 \n\n> C:\\Users\\当前用户名\\VirtualBox VMs\n  \n可以在virtualBox 软件 > 管理 > 全局设置 > 常规 > 默认虚拟电脑位置进行修改\n\n我修改为\n> D:\\VirtualBoxVMs\n# 启动vagrant\n## 添加box\n> vagrant box add centos7 E:\\软件安装包\\centos-7.0-x86_64.box\n\n查看已添加的box\n\n> vagrant box list\n\n    D:\\vagrantSpace>vagrant box list\n    centos7 (virtualbox, 0)\n\n## 初始化\n\n在准备存放vagrant配置文件的文件夹中执行\n\n> vagrant init \n\n会生成 Vagrantfile 文件  \n文件中包含vagrant 配置信息  \n其中有一些配置项的说明  \n\n    config.vm.box = \"base\" 修改base 为centos7 即 boxlist 中的名字  \n    config.vm.synced_folder \"E:\\\", \"/vagrant_data\" 共享文件夹\n    \n其他配置请自行百度\n\n### vagrant 配置文件\n\n下面的是我的配置\n\n    # -*- mode: ruby -*-\n    # vi: set ft=ruby :\n    Vagrant.configure(\"2\") do |config|\n      config.vm.box = \"centos7\"\n      config.vm.define :java do |java|\n        java.vm.provider \"virtualbox\" do |v|\n            v.customize [\"modifyvm\", :id, \"--name\", \"java\", \"--memory\", \"512\"]\n        end\n        java.vm.box = \"centos7\"\n        java.vm.hostname = \"java\"\n        java.vm.network :private_network, ip: \"192.168.33.10\"\n      end\n      config.vm.define :linux do |linux|\n        linux.vm.provider \"virtualbox\" do |v|\n            v.customize [\"modifyvm\", :id, \"--name\", \"linux\", \"--memory\", \"512\"]\n        end\n        linux.vm.box = \"centos7\"\n        linux.vm.hostname = \"linux\"\n        linux.vm.network :private_network, ip: \"192.168.33.11\"\n      end\n    end\n\n## 启动虚拟机\n\n> vagrant up linux \n\n第一次会初始化虚拟机,并启动,成功后查看虚拟机运行状态\n\n> vagrant global-status\n\n    D:\\vagrantSpace>vagrant global-status\n    id       name   provider   state   directory\n    -----------------------------------------------------------------------\n    1d24610  linux  virtualbox running D:/vagrantSpace\n\n这个时候就可以通过ssh登录虚拟机了。默认用户和密码都是 vagrant\n\n------------------------------------\n下面是修改磁盘大小,如果觉得没有必要,可以不修改,直接玩就可以啦\n\n# 修改虚拟机磁盘大小\n\nvagrant 默认创建的磁盘 根目录下只有10G.觉得太小,修改为1T.\n\n- 关闭 linux\n\n> vagrant halt linux\n\n- 进入到 D:\\VirtualBoxVMs文件夹下 即 之前设置的virtualBox的路径,里面会有个刚才创建的linux系统的文件夹 D:\\VirtualBoxVMs\\linux\n- 加入virtualBox 安装目录加入环境变量path\n\n    安装virtualBox后会自动加入 VBOX_MSI_INSTALL_PATH 环境变量,直接把这个路径加到path后面即可. \n    \n> %VBOX_MSI_INSTALL_PATH%\n    \n- 通过下面命令 复制一份磁盘文件, .vmdk 文件直接修改大小会报错\n\n\n> vboxmanage clonehd box-disk1.vmdk box.vdi --format vdi\n\n    D:\\VirtualBoxVMs\\linux>vboxmanage clonehd box-disk1.vmdk box.vdi --format vdi\n    0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\n    Clone medium created in format 'vdi'. UUID: 1431c156-a3b1-4374-b196-36450edecd9e\n\n- 修改vdi 文件大小,命令如下\n\n> vboxmanage modifyhd box.vdi --resize 1048576\n\n    D:\\VirtualBoxVMs\\linux>vboxmanage modifyhd box.vdi --resize 1048576\n    0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\n\n- 打开虚拟机,修改 linux 磁盘文件为 box.vdi\n\n![](https://static.oschina.net/uploads/img/201707/02192036_F9Jv.jpg)\n\n修改后\n\n![](https://static.oschina.net/uploads/img/201707/02192410_T07t.jpg)\n\n- 查看D:\\VirtualBoxVMs\\linux 文件夹下linux.vbox 文件 \n删除 原来的harddisk \n```\n     <HardDisk uuid=\"{3417d3e1-fcfd-410c-8df6-adba5f8b01bb}\" location=\"box-disk1.vmdk\" format=\"VMDK\" type=\"Normal\"/>\n```\n\n保留新的harddisk\n```\n    <HardDisk uuid=\"{417759f6-4e5d-4a45-9ce1-1351b15c5a7d}\" location=\"box-linux.vdi\" format=\"VDI\" type=\"Normal\"/>\n```\n\n\n- 删除原来的磁盘文件, box-disk1.vmdk。这个可以以后再删除也可以，防止操作中出现什么错误。\n- 启动虚拟机\n> vagrant up linux\n\n切换到root，密码为vagrant\n\n> su\n\n查看磁盘\n\n> fdisk -l\n\n    Gerät  boot.     Anfang        Ende     Blöcke   Id  System\n    /dev/sda1   *        2048     1026047      512000   83  Linux\n    /dev/sda2         1026048    20766719     9870336   8e  Linux LVM\n\n可以看到一共还是10G,并不是1T,我们需要加一个磁盘sda3\n\n    fdisk /dev/sda\n    n\n    p\n    3\n    回车\n    回车\n更改磁盘类型为 lvm\n\n    t\n    3\n    8e\n\n\n查看磁盘\n\n    p\n全部操作如下\n    \n    Befehl (m für Hilfe): n\n    Partition type:\n       p   primary (2 primary, 0 extended, 2 free)\n       e   Erweiterte\n    Select (default p): p\n    Partitionsnummer (3,4, default 3): 3\n    Erster Sektor (20766720-2147483647, Vorgabe: 20766720): \n    Benutze den Standardwert 20766720\n    Last Sektor, +Sektoren or +size{K,M,G} (20766720-2147483647, Vorgabe: 2147483647): \n    Benutze den Standardwert 2147483647\n    Partition 3 of type Linux and of size 1014,1 GiB is set\n    \n    Befehl (m für Hilfe): t\n    Partitionsnummer (1-3, default 3): 3\n    Hex code (type L to list all codes): 8e\n    Changed type of partition 'Linux' to 'Linux LVM'\n    \n    Befehl (m für Hilfe): p\n    \n    Disk /dev/sda: 1099.5 GB, 1099511627776 bytes, 2147483648 sectors\n    Units = Sektoren of 1 * 512 = 512 bytes\n    Sector size (logical/physical): 512 bytes / 512 bytes\n    I/O size (minimum/optimal): 512 bytes / 512 bytes\n    Disk label type: dos\n    Disk identifier: 0x00095a8e\n    \n       Gerät  boot.     Anfang        Ende     Blöcke   Id  System\n    /dev/sda1   *        2048     1026047      512000   83  Linux\n    /dev/sda2         1026048    20766719     9870336   8e  Linux LVM\n    /dev/sda3        20766720  2147483647  1063358464   8e  Linux LVM\n\n保存退出\n\n    w\n重启虚拟机\n    \n    reboot\n查看当前 Volume Group\n\n    vgdisplay\n信息如下\n\n    [root@linux vagrant]# vgdisplay\n      --- Volume group ---\n      VG Name               centos\n      System ID             \n      Format                lvm2\n      Metadata Areas        1\n      Metadata Sequence No  3\n      VG Access             read/write\n      VG Status             resizable\n      MAX LV                0\n      Cur LV                2\n      Open LV               2\n      Max PV                0\n      Cur PV                1\n      Act PV                1\n      VG Size               9,41 GiB\n      PE Size               4,00 MiB\n      Total PE              2409\n      Alloc PE / Size       2399 / 9,37 GiB\n      Free  PE / Size       10 / 40,00 MiB\n      VG UUID               NJWfOH-An0K-Hm9Q-8Tjs-yq2x-ZWXi-L2vP7i\n      \n名称为 centos，可调整大小（resizable），当前大小为 9,41GB。活动的 LVM 卷有\n\n    lvscan\n    \n    [root@linux vagrant]# lvscan\n    ACTIVE            '/dev/centos/swap' [1016,00 MiB] inherit\n    ACTIVE            '/dev/centos/root' [8,38 GiB] inherit\n    \n先将分配过来的新磁盘空间创建为一个新的物理卷\n\n    pvcreate /dev/sda3\n    \n    [root@linux vagrant]# pvcreate /dev/sda3\n    Physical volume \"/dev/sda3\" successfully created\n    \n然后使用新的物理卷来扩展 LVM 的 centos\n\n    vgextend centos /dev/sda3\n    \n    [root@linux vagrant]# vgextend centos /dev/sda3\n    Volume group \"centos\" successfully extended\n\n然后扩展 LVM 的逻辑卷 centos-lv_root\n\n    lvextend /dev/centos/root /dev/sda3\n    \n    [root@linux vagrant]# lvextend /dev/centos/root /dev/sda3\n    Size of logical volume centos/root changed from 8,38 GiB (2145 extents) to 1022,47 GiB (261753 extents).\n    Logical volume root successfully resized\n    \n最后，调整逻辑卷文件系统的大小\n\n    vagrant]# resize2fs /dev/centos/root\n    \n    [root@linux vagrant]# resize2fs /dev/centos/root\n    resize2fs 1.42.9 (28-Dec-2013)\n    resize2fs: Ungültige magische Zahl im Superblock beim Versuch, /dev/centos/root zu öffnen\n    Kann keinen gültigen Dateisystem-Superblock finden.\n    \n完成。看看效果,可以看到root下变成了1T\n\n    lvscan\n    \n    [root@linux vagrant]# lvscan\n      ACTIVE            '/dev/centos/swap' [1016,00 MiB] inherit\n      ACTIVE            '/dev/centos/root' [1022,47 GiB] inherit\n      \n但是,查看根目录下面分配大小, 跟目录还是为8.4G\n\n    [root@linux vagrant]# df -h\n    Dateisystem             Größe Benutzt Verf. Verw% Eingehängt auf\n    /dev/mapper/centos-root  8,4G    1,1G  7,4G   13% /\n    devtmpfs                 236M       0  236M    0% /dev\n    tmpfs                    245M       0  245M    0% /dev/shm\n    tmpfs                    245M    4,3M  241M    2% /run\n    tmpfs                    245M       0  245M    0% /sys/fs/cgroup\n    /dev/sda1                497M    118M  379M   24% /boot  \n \n用 xfs_growfs 对扩容后的 LV 进行 xfs 格式大小调整\n\n    xfs_growfs /dev/centos/root\n    \n    [root@linux vagrant]# xfs_growfs /dev/centos/root\n    meta-data=/dev/mapper/centos-root isize=256    agcount=4, agsize=549120 blks\n             =                       sectsz=512   attr=2, projid32bit=1\n             =                       crc=0        finobt=0\n    data     =                       bsize=4096   blocks=2196480, imaxpct=25\n             =                       sunit=0      swidth=0 blks\n    naming   =version 2              bsize=4096   ascii-ci=0 ftype=0\n    log      =Intern                 bsize=4096   blocks=2560, version=2\n             =                       sectsz=512   sunit=0 blks, lazy-count=1\n    realtime =keine                  extsz=4096   blocks=0, rtextents=0\n    Datenblöcke von 2196480 auf 268035072 geändert.\n\n再查看\n\n    [root@linux vagrant]# df -h\n    Dateisystem             Größe Benutzt Verf. Verw% Eingehängt auf\n    /dev/mapper/centos-root 1023G    1,1G 1022G    1% /\n    devtmpfs                 236M       0  236M    0% /dev\n    tmpfs                    245M       0  245M    0% /dev/shm\n    tmpfs                    245M    4,3M  241M    2% /run\n    tmpfs                    245M       0  245M    0% /sys/fs/cgroup\n    /dev/sda1                497M    118M  379M   24% /boot\n    \n可以看到根目录大小已经变成1T了\n\nhttp://pan.baidu.com/s/1dEC3ePr\n\n由于不了解linux,修改磁盘大小费了很多事.完成后打了包,做成了新的box，方便以后直接使用。\n\n# 其他\n## 修改linux 语言\n> /etc/locale.conf\n```\nLANG='en_US.UTF-8'\n```\n\n\n# 参考博客:  \n\n## 调整 VirtualBox 虚拟机的磁盘大小  \nhttps://cnzhx.net/blog/resizing-lvm-centos-virtualbox-guest/  \n\n## 手把手教你给 CentOS 7 添加硬盘及扩容(LVM)  \nhttps://aurthurxlc.github.io/Aurthur-2017/Centos-7-extend-lvm-volume.html\n","slug":"vagrant 创建virtualBox虚拟机","published":1,"updated":"2017-11-04T15:06:41.385Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9wugozr000hh4v7zfb9yu45","content":"<h1 id=\"安装vagrant\"><a href=\"#安装vagrant\" class=\"headerlink\" title=\"安装vagrant\"></a>安装vagrant</h1><h2 id=\"本机环境\"><a href=\"#本机环境\" class=\"headerlink\" title=\"本机环境\"></a>本机环境</h2><p>系统环境 ： win10 64 系统</p>\n<h2 id=\"软件及镜像\"><a href=\"#软件及镜像\" class=\"headerlink\" title=\"软件及镜像\"></a>软件及镜像</h2><p>vagrant 官网 <a href=\"https://www.vagrantup.com/\" target=\"_blank\" rel=\"external\">https://www.vagrantup.com/</a><br>vagrant 需要依赖虚拟机 我用的 virtualBox<br>virtualBox 官网 <a href=\"https://www.virtualbox.org/\" target=\"_blank\" rel=\"external\">https://www.virtualbox.org/</a><br>virtualBox 镜像 在vagrant官网中可以下载</p>\n<p>由于国内下载比较慢，已分享到百度云</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:center\">分享链接</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">vagrant_1.9.5.msi</td>\n<td style=\"text-align:center\">软件</td>\n<td style=\"text-align:center\"><a href=\"http://pan.baidu.com/s/1kVzFP1H\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1kVzFP1H</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">VirtualBox-5.1.22-115126-Win.exe</td>\n<td style=\"text-align:center\">软件</td>\n<td style=\"text-align:center\"><a href=\"http://pan.baidu.com/s/1jIQgl6m\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1jIQgl6m</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">centos-7.0-x86_64.box</td>\n<td style=\"text-align:center\">镜像文件</td>\n<td style=\"text-align:center\"><a href=\"http://pan.baidu.com/s/1o7Zlspk\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1o7Zlspk</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">gparted-live-0.28.1-1-i686.iso</td>\n<td style=\"text-align:center\">32位分区live-cd</td>\n<td style=\"text-align:center\"><a href=\"http://pan.baidu.com/s/1jISiee6\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1jISiee6</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">gparted-live-0.28.1-1-amd64.iso</td>\n<td style=\"text-align:center\">64位分区live-cd</td>\n<td style=\"text-align:center\"><a href=\"http://pan.baidu.com/s/1dFenvvb\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1dFenvvb</a></td>\n</tr>\n</tbody>\n</table>\n<a id=\"more\"></a>\n<p>上面的gparted iso 文件是分区用的不过没有用到，下载不容易就一块传上来了。</p>\n<h2 id=\"更改vagrant-存放box的位置\"><a href=\"#更改vagrant-存放box的位置\" class=\"headerlink\" title=\"更改vagrant 存放box的位置\"></a>更改vagrant 存放box的位置</h2><p>默认vagrant 添加的box 默认存放位置为</p>\n<blockquote>\n<p>C:\\Users\\当前用户名\\ .vagrant.d\\boxes\\ </p>\n</blockquote>\n<p>可以通过添加环境变量 VAGRANT_HOME 修改存放位置</p>\n<p>例如：VAGRANT_HOME = D:\\Program Files\\VagrantHome</p>\n<h2 id=\"更改virtualBox-存放镜像目录\"><a href=\"#更改virtualBox-存放镜像目录\" class=\"headerlink\" title=\"更改virtualBox 存放镜像目录\"></a>更改virtualBox 存放镜像目录</h2><p>默认目录 </p>\n<blockquote>\n<p>C:\\Users\\当前用户名\\VirtualBox VMs</p>\n</blockquote>\n<p>可以在virtualBox 软件 &gt; 管理 &gt; 全局设置 &gt; 常规 &gt; 默认虚拟电脑位置进行修改</p>\n<p>我修改为</p>\n<blockquote>\n<p>D:\\VirtualBoxVMs</p>\n<h1 id=\"启动vagrant\"><a href=\"#启动vagrant\" class=\"headerlink\" title=\"启动vagrant\"></a>启动vagrant</h1><h2 id=\"添加box\"><a href=\"#添加box\" class=\"headerlink\" title=\"添加box\"></a>添加box</h2><p>vagrant box add centos7 E:\\软件安装包\\centos-7.0-x86_64.box</p>\n</blockquote>\n<p>查看已添加的box</p>\n<blockquote>\n<p>vagrant box list</p>\n</blockquote>\n<pre><code>D:\\vagrantSpace&gt;vagrant box list\ncentos7 (virtualbox, 0)\n</code></pre><h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><p>在准备存放vagrant配置文件的文件夹中执行</p>\n<blockquote>\n<p>vagrant init </p>\n</blockquote>\n<p>会生成 Vagrantfile 文件<br>文件中包含vagrant 配置信息<br>其中有一些配置项的说明  </p>\n<pre><code>config.vm.box = &quot;base&quot; 修改base 为centos7 即 boxlist 中的名字  \nconfig.vm.synced_folder &quot;E:\\&quot;, &quot;/vagrant_data&quot; 共享文件夹\n</code></pre><p>其他配置请自行百度</p>\n<h3 id=\"vagrant-配置文件\"><a href=\"#vagrant-配置文件\" class=\"headerlink\" title=\"vagrant 配置文件\"></a>vagrant 配置文件</h3><p>下面的是我的配置</p>\n<pre><code># -*- mode: ruby -*-\n# vi: set ft=ruby :\nVagrant.configure(&quot;2&quot;) do |config|\n  config.vm.box = &quot;centos7&quot;\n  config.vm.define :java do |java|\n    java.vm.provider &quot;virtualbox&quot; do |v|\n        v.customize [&quot;modifyvm&quot;, :id, &quot;--name&quot;, &quot;java&quot;, &quot;--memory&quot;, &quot;512&quot;]\n    end\n    java.vm.box = &quot;centos7&quot;\n    java.vm.hostname = &quot;java&quot;\n    java.vm.network :private_network, ip: &quot;192.168.33.10&quot;\n  end\n  config.vm.define :linux do |linux|\n    linux.vm.provider &quot;virtualbox&quot; do |v|\n        v.customize [&quot;modifyvm&quot;, :id, &quot;--name&quot;, &quot;linux&quot;, &quot;--memory&quot;, &quot;512&quot;]\n    end\n    linux.vm.box = &quot;centos7&quot;\n    linux.vm.hostname = &quot;linux&quot;\n    linux.vm.network :private_network, ip: &quot;192.168.33.11&quot;\n  end\nend\n</code></pre><h2 id=\"启动虚拟机\"><a href=\"#启动虚拟机\" class=\"headerlink\" title=\"启动虚拟机\"></a>启动虚拟机</h2><blockquote>\n<p>vagrant up linux </p>\n</blockquote>\n<p>第一次会初始化虚拟机,并启动,成功后查看虚拟机运行状态</p>\n<blockquote>\n<p>vagrant global-status</p>\n</blockquote>\n<pre><code>D:\\vagrantSpace&gt;vagrant global-status\nid       name   provider   state   directory\n-----------------------------------------------------------------------\n1d24610  linux  virtualbox running D:/vagrantSpace\n</code></pre><p>这个时候就可以通过ssh登录虚拟机了。默认用户和密码都是 vagrant</p>\n<hr>\n<p>下面是修改磁盘大小,如果觉得没有必要,可以不修改,直接玩就可以啦</p>\n<h1 id=\"修改虚拟机磁盘大小\"><a href=\"#修改虚拟机磁盘大小\" class=\"headerlink\" title=\"修改虚拟机磁盘大小\"></a>修改虚拟机磁盘大小</h1><p>vagrant 默认创建的磁盘 根目录下只有10G.觉得太小,修改为1T.</p>\n<ul>\n<li>关闭 linux</li>\n</ul>\n<blockquote>\n<p>vagrant halt linux</p>\n</blockquote>\n<ul>\n<li>进入到 D:\\VirtualBoxVMs文件夹下 即 之前设置的virtualBox的路径,里面会有个刚才创建的linux系统的文件夹 D:\\VirtualBoxVMs\\linux</li>\n<li><p>加入virtualBox 安装目录加入环境变量path</p>\n<p>  安装virtualBox后会自动加入 VBOX_MSI_INSTALL_PATH 环境变量,直接把这个路径加到path后面即可. </p>\n</li>\n</ul>\n<blockquote>\n<p>%VBOX_MSI_INSTALL_PATH%</p>\n</blockquote>\n<ul>\n<li>通过下面命令 复制一份磁盘文件, .vmdk 文件直接修改大小会报错</li>\n</ul>\n<blockquote>\n<p>vboxmanage clonehd box-disk1.vmdk box.vdi –format vdi</p>\n</blockquote>\n<pre><code>D:\\VirtualBoxVMs\\linux&gt;vboxmanage clonehd box-disk1.vmdk box.vdi --format vdi\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\nClone medium created in format &apos;vdi&apos;. UUID: 1431c156-a3b1-4374-b196-36450edecd9e\n</code></pre><ul>\n<li>修改vdi 文件大小,命令如下</li>\n</ul>\n<blockquote>\n<p>vboxmanage modifyhd box.vdi –resize 1048576</p>\n</blockquote>\n<pre><code>D:\\VirtualBoxVMs\\linux&gt;vboxmanage modifyhd box.vdi --resize 1048576\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\n</code></pre><ul>\n<li>打开虚拟机,修改 linux 磁盘文件为 box.vdi</li>\n</ul>\n<p><img src=\"https://static.oschina.net/uploads/img/201707/02192036_F9Jv.jpg\" alt=\"\"></p>\n<p>修改后</p>\n<p><img src=\"https://static.oschina.net/uploads/img/201707/02192410_T07t.jpg\" alt=\"\"></p>\n<ul>\n<li>查看D:\\VirtualBoxVMs\\linux 文件夹下linux.vbox 文件<br>删除 原来的harddisk <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;HardDisk uuid=&quot;&#123;3417d3e1-fcfd-410c-8df6-adba5f8b01bb&#125;&quot; location=&quot;box-disk1.vmdk&quot; format=&quot;VMDK&quot; type=&quot;Normal&quot;/&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>保留新的harddisk<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;HardDisk uuid=&quot;&#123;417759f6-4e5d-4a45-9ce1-1351b15c5a7d&#125;&quot; location=&quot;box-linux.vdi&quot; format=&quot;VDI&quot; type=&quot;Normal&quot;/&gt;</div></pre></td></tr></table></figure></p>\n<ul>\n<li>删除原来的磁盘文件, box-disk1.vmdk。这个可以以后再删除也可以，防止操作中出现什么错误。</li>\n<li>启动虚拟机<blockquote>\n<p>vagrant up linux</p>\n</blockquote>\n</li>\n</ul>\n<p>切换到root，密码为vagrant</p>\n<blockquote>\n<p>su</p>\n</blockquote>\n<p>查看磁盘</p>\n<blockquote>\n<p>fdisk -l</p>\n</blockquote>\n<pre><code>Gerät  boot.     Anfang        Ende     Blöcke   Id  System\n/dev/sda1   *        2048     1026047      512000   83  Linux\n/dev/sda2         1026048    20766719     9870336   8e  Linux LVM\n</code></pre><p>可以看到一共还是10G,并不是1T,我们需要加一个磁盘sda3</p>\n<pre><code>fdisk /dev/sda\nn\np\n3\n回车\n回车\n</code></pre><p>更改磁盘类型为 lvm</p>\n<pre><code>t\n3\n8e\n</code></pre><p>查看磁盘</p>\n<pre><code>p\n</code></pre><p>全部操作如下</p>\n<pre><code>Befehl (m für Hilfe): n\nPartition type:\n   p   primary (2 primary, 0 extended, 2 free)\n   e   Erweiterte\nSelect (default p): p\nPartitionsnummer (3,4, default 3): 3\nErster Sektor (20766720-2147483647, Vorgabe: 20766720): \nBenutze den Standardwert 20766720\nLast Sektor, +Sektoren or +size{K,M,G} (20766720-2147483647, Vorgabe: 2147483647): \nBenutze den Standardwert 2147483647\nPartition 3 of type Linux and of size 1014,1 GiB is set\n\nBefehl (m für Hilfe): t\nPartitionsnummer (1-3, default 3): 3\nHex code (type L to list all codes): 8e\nChanged type of partition &apos;Linux&apos; to &apos;Linux LVM&apos;\n\nBefehl (m für Hilfe): p\n\nDisk /dev/sda: 1099.5 GB, 1099511627776 bytes, 2147483648 sectors\nUnits = Sektoren of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisk label type: dos\nDisk identifier: 0x00095a8e\n\n   Gerät  boot.     Anfang        Ende     Blöcke   Id  System\n/dev/sda1   *        2048     1026047      512000   83  Linux\n/dev/sda2         1026048    20766719     9870336   8e  Linux LVM\n/dev/sda3        20766720  2147483647  1063358464   8e  Linux LVM\n</code></pre><p>保存退出</p>\n<pre><code>w\n</code></pre><p>重启虚拟机</p>\n<pre><code>reboot\n</code></pre><p>查看当前 Volume Group</p>\n<pre><code>vgdisplay\n</code></pre><p>信息如下</p>\n<pre><code>[root@linux vagrant]# vgdisplay\n  --- Volume group ---\n  VG Name               centos\n  System ID             \n  Format                lvm2\n  Metadata Areas        1\n  Metadata Sequence No  3\n  VG Access             read/write\n  VG Status             resizable\n  MAX LV                0\n  Cur LV                2\n  Open LV               2\n  Max PV                0\n  Cur PV                1\n  Act PV                1\n  VG Size               9,41 GiB\n  PE Size               4,00 MiB\n  Total PE              2409\n  Alloc PE / Size       2399 / 9,37 GiB\n  Free  PE / Size       10 / 40,00 MiB\n  VG UUID               NJWfOH-An0K-Hm9Q-8Tjs-yq2x-ZWXi-L2vP7i\n</code></pre><p>名称为 centos，可调整大小（resizable），当前大小为 9,41GB。活动的 LVM 卷有</p>\n<pre><code>lvscan\n\n[root@linux vagrant]# lvscan\nACTIVE            &apos;/dev/centos/swap&apos; [1016,00 MiB] inherit\nACTIVE            &apos;/dev/centos/root&apos; [8,38 GiB] inherit\n</code></pre><p>先将分配过来的新磁盘空间创建为一个新的物理卷</p>\n<pre><code>pvcreate /dev/sda3\n\n[root@linux vagrant]# pvcreate /dev/sda3\nPhysical volume &quot;/dev/sda3&quot; successfully created\n</code></pre><p>然后使用新的物理卷来扩展 LVM 的 centos</p>\n<pre><code>vgextend centos /dev/sda3\n\n[root@linux vagrant]# vgextend centos /dev/sda3\nVolume group &quot;centos&quot; successfully extended\n</code></pre><p>然后扩展 LVM 的逻辑卷 centos-lv_root</p>\n<pre><code>lvextend /dev/centos/root /dev/sda3\n\n[root@linux vagrant]# lvextend /dev/centos/root /dev/sda3\nSize of logical volume centos/root changed from 8,38 GiB (2145 extents) to 1022,47 GiB (261753 extents).\nLogical volume root successfully resized\n</code></pre><p>最后，调整逻辑卷文件系统的大小</p>\n<pre><code>vagrant]# resize2fs /dev/centos/root\n\n[root@linux vagrant]# resize2fs /dev/centos/root\nresize2fs 1.42.9 (28-Dec-2013)\nresize2fs: Ungültige magische Zahl im Superblock beim Versuch, /dev/centos/root zu öffnen\nKann keinen gültigen Dateisystem-Superblock finden.\n</code></pre><p>完成。看看效果,可以看到root下变成了1T</p>\n<pre><code>lvscan\n\n[root@linux vagrant]# lvscan\n  ACTIVE            &apos;/dev/centos/swap&apos; [1016,00 MiB] inherit\n  ACTIVE            &apos;/dev/centos/root&apos; [1022,47 GiB] inherit\n</code></pre><p>但是,查看根目录下面分配大小, 跟目录还是为8.4G</p>\n<pre><code>[root@linux vagrant]# df -h\nDateisystem             Größe Benutzt Verf. Verw% Eingehängt auf\n/dev/mapper/centos-root  8,4G    1,1G  7,4G   13% /\ndevtmpfs                 236M       0  236M    0% /dev\ntmpfs                    245M       0  245M    0% /dev/shm\ntmpfs                    245M    4,3M  241M    2% /run\ntmpfs                    245M       0  245M    0% /sys/fs/cgroup\n/dev/sda1                497M    118M  379M   24% /boot  \n</code></pre><p>用 xfs_growfs 对扩容后的 LV 进行 xfs 格式大小调整</p>\n<pre><code>xfs_growfs /dev/centos/root\n\n[root@linux vagrant]# xfs_growfs /dev/centos/root\nmeta-data=/dev/mapper/centos-root isize=256    agcount=4, agsize=549120 blks\n         =                       sectsz=512   attr=2, projid32bit=1\n         =                       crc=0        finobt=0\ndata     =                       bsize=4096   blocks=2196480, imaxpct=25\n         =                       sunit=0      swidth=0 blks\nnaming   =version 2              bsize=4096   ascii-ci=0 ftype=0\nlog      =Intern                 bsize=4096   blocks=2560, version=2\n         =                       sectsz=512   sunit=0 blks, lazy-count=1\nrealtime =keine                  extsz=4096   blocks=0, rtextents=0\nDatenblöcke von 2196480 auf 268035072 geändert.\n</code></pre><p>再查看</p>\n<pre><code>[root@linux vagrant]# df -h\nDateisystem             Größe Benutzt Verf. Verw% Eingehängt auf\n/dev/mapper/centos-root 1023G    1,1G 1022G    1% /\ndevtmpfs                 236M       0  236M    0% /dev\ntmpfs                    245M       0  245M    0% /dev/shm\ntmpfs                    245M    4,3M  241M    2% /run\ntmpfs                    245M       0  245M    0% /sys/fs/cgroup\n/dev/sda1                497M    118M  379M   24% /boot\n</code></pre><p>可以看到根目录大小已经变成1T了</p>\n<p><a href=\"http://pan.baidu.com/s/1dEC3ePr\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1dEC3ePr</a></p>\n<p>由于不了解linux,修改磁盘大小费了很多事.完成后打了包,做成了新的box，方便以后直接使用。</p>\n<h1 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h1><h2 id=\"修改linux-语言\"><a href=\"#修改linux-语言\" class=\"headerlink\" title=\"修改linux 语言\"></a>修改linux 语言</h2><blockquote>\n<p>/etc/locale.conf<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">LANG=&apos;en_US.UTF-8&apos;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h1 id=\"参考博客\"><a href=\"#参考博客\" class=\"headerlink\" title=\"参考博客:\"></a>参考博客:</h1><h2 id=\"调整-VirtualBox-虚拟机的磁盘大小\"><a href=\"#调整-VirtualBox-虚拟机的磁盘大小\" class=\"headerlink\" title=\"调整 VirtualBox 虚拟机的磁盘大小\"></a>调整 VirtualBox 虚拟机的磁盘大小</h2><p><a href=\"https://cnzhx.net/blog/resizing-lvm-centos-virtualbox-guest/\" target=\"_blank\" rel=\"external\">https://cnzhx.net/blog/resizing-lvm-centos-virtualbox-guest/</a>  </p>\n<h2 id=\"手把手教你给-CentOS-7-添加硬盘及扩容-LVM\"><a href=\"#手把手教你给-CentOS-7-添加硬盘及扩容-LVM\" class=\"headerlink\" title=\"手把手教你给 CentOS 7 添加硬盘及扩容(LVM)\"></a>手把手教你给 CentOS 7 添加硬盘及扩容(LVM)</h2><p><a href=\"https://aurthurxlc.github.io/Aurthur-2017/Centos-7-extend-lvm-volume.html\" target=\"_blank\" rel=\"external\">https://aurthurxlc.github.io/Aurthur-2017/Centos-7-extend-lvm-volume.html</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"安装vagrant\"><a href=\"#安装vagrant\" class=\"headerlink\" title=\"安装vagrant\"></a>安装vagrant</h1><h2 id=\"本机环境\"><a href=\"#本机环境\" class=\"headerlink\" title=\"本机环境\"></a>本机环境</h2><p>系统环境 ： win10 64 系统</p>\n<h2 id=\"软件及镜像\"><a href=\"#软件及镜像\" class=\"headerlink\" title=\"软件及镜像\"></a>软件及镜像</h2><p>vagrant 官网 <a href=\"https://www.vagrantup.com/\" target=\"_blank\" rel=\"external\">https://www.vagrantup.com/</a><br>vagrant 需要依赖虚拟机 我用的 virtualBox<br>virtualBox 官网 <a href=\"https://www.virtualbox.org/\" target=\"_blank\" rel=\"external\">https://www.virtualbox.org/</a><br>virtualBox 镜像 在vagrant官网中可以下载</p>\n<p>由于国内下载比较慢，已分享到百度云</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:center\">分享链接</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">vagrant_1.9.5.msi</td>\n<td style=\"text-align:center\">软件</td>\n<td style=\"text-align:center\"><a href=\"http://pan.baidu.com/s/1kVzFP1H\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1kVzFP1H</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">VirtualBox-5.1.22-115126-Win.exe</td>\n<td style=\"text-align:center\">软件</td>\n<td style=\"text-align:center\"><a href=\"http://pan.baidu.com/s/1jIQgl6m\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1jIQgl6m</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">centos-7.0-x86_64.box</td>\n<td style=\"text-align:center\">镜像文件</td>\n<td style=\"text-align:center\"><a href=\"http://pan.baidu.com/s/1o7Zlspk\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1o7Zlspk</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">gparted-live-0.28.1-1-i686.iso</td>\n<td style=\"text-align:center\">32位分区live-cd</td>\n<td style=\"text-align:center\"><a href=\"http://pan.baidu.com/s/1jISiee6\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1jISiee6</a></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">gparted-live-0.28.1-1-amd64.iso</td>\n<td style=\"text-align:center\">64位分区live-cd</td>\n<td style=\"text-align:center\"><a href=\"http://pan.baidu.com/s/1dFenvvb\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1dFenvvb</a></td>\n</tr>\n</tbody>\n</table>","more":"<p>上面的gparted iso 文件是分区用的不过没有用到，下载不容易就一块传上来了。</p>\n<h2 id=\"更改vagrant-存放box的位置\"><a href=\"#更改vagrant-存放box的位置\" class=\"headerlink\" title=\"更改vagrant 存放box的位置\"></a>更改vagrant 存放box的位置</h2><p>默认vagrant 添加的box 默认存放位置为</p>\n<blockquote>\n<p>C:\\Users\\当前用户名\\ .vagrant.d\\boxes\\ </p>\n</blockquote>\n<p>可以通过添加环境变量 VAGRANT_HOME 修改存放位置</p>\n<p>例如：VAGRANT_HOME = D:\\Program Files\\VagrantHome</p>\n<h2 id=\"更改virtualBox-存放镜像目录\"><a href=\"#更改virtualBox-存放镜像目录\" class=\"headerlink\" title=\"更改virtualBox 存放镜像目录\"></a>更改virtualBox 存放镜像目录</h2><p>默认目录 </p>\n<blockquote>\n<p>C:\\Users\\当前用户名\\VirtualBox VMs</p>\n</blockquote>\n<p>可以在virtualBox 软件 &gt; 管理 &gt; 全局设置 &gt; 常规 &gt; 默认虚拟电脑位置进行修改</p>\n<p>我修改为</p>\n<blockquote>\n<p>D:\\VirtualBoxVMs</p>\n<h1 id=\"启动vagrant\"><a href=\"#启动vagrant\" class=\"headerlink\" title=\"启动vagrant\"></a>启动vagrant</h1><h2 id=\"添加box\"><a href=\"#添加box\" class=\"headerlink\" title=\"添加box\"></a>添加box</h2><p>vagrant box add centos7 E:\\软件安装包\\centos-7.0-x86_64.box</p>\n</blockquote>\n<p>查看已添加的box</p>\n<blockquote>\n<p>vagrant box list</p>\n</blockquote>\n<pre><code>D:\\vagrantSpace&gt;vagrant box list\ncentos7 (virtualbox, 0)\n</code></pre><h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><p>在准备存放vagrant配置文件的文件夹中执行</p>\n<blockquote>\n<p>vagrant init </p>\n</blockquote>\n<p>会生成 Vagrantfile 文件<br>文件中包含vagrant 配置信息<br>其中有一些配置项的说明  </p>\n<pre><code>config.vm.box = &quot;base&quot; 修改base 为centos7 即 boxlist 中的名字  \nconfig.vm.synced_folder &quot;E:\\&quot;, &quot;/vagrant_data&quot; 共享文件夹\n</code></pre><p>其他配置请自行百度</p>\n<h3 id=\"vagrant-配置文件\"><a href=\"#vagrant-配置文件\" class=\"headerlink\" title=\"vagrant 配置文件\"></a>vagrant 配置文件</h3><p>下面的是我的配置</p>\n<pre><code># -*- mode: ruby -*-\n# vi: set ft=ruby :\nVagrant.configure(&quot;2&quot;) do |config|\n  config.vm.box = &quot;centos7&quot;\n  config.vm.define :java do |java|\n    java.vm.provider &quot;virtualbox&quot; do |v|\n        v.customize [&quot;modifyvm&quot;, :id, &quot;--name&quot;, &quot;java&quot;, &quot;--memory&quot;, &quot;512&quot;]\n    end\n    java.vm.box = &quot;centos7&quot;\n    java.vm.hostname = &quot;java&quot;\n    java.vm.network :private_network, ip: &quot;192.168.33.10&quot;\n  end\n  config.vm.define :linux do |linux|\n    linux.vm.provider &quot;virtualbox&quot; do |v|\n        v.customize [&quot;modifyvm&quot;, :id, &quot;--name&quot;, &quot;linux&quot;, &quot;--memory&quot;, &quot;512&quot;]\n    end\n    linux.vm.box = &quot;centos7&quot;\n    linux.vm.hostname = &quot;linux&quot;\n    linux.vm.network :private_network, ip: &quot;192.168.33.11&quot;\n  end\nend\n</code></pre><h2 id=\"启动虚拟机\"><a href=\"#启动虚拟机\" class=\"headerlink\" title=\"启动虚拟机\"></a>启动虚拟机</h2><blockquote>\n<p>vagrant up linux </p>\n</blockquote>\n<p>第一次会初始化虚拟机,并启动,成功后查看虚拟机运行状态</p>\n<blockquote>\n<p>vagrant global-status</p>\n</blockquote>\n<pre><code>D:\\vagrantSpace&gt;vagrant global-status\nid       name   provider   state   directory\n-----------------------------------------------------------------------\n1d24610  linux  virtualbox running D:/vagrantSpace\n</code></pre><p>这个时候就可以通过ssh登录虚拟机了。默认用户和密码都是 vagrant</p>\n<hr>\n<p>下面是修改磁盘大小,如果觉得没有必要,可以不修改,直接玩就可以啦</p>\n<h1 id=\"修改虚拟机磁盘大小\"><a href=\"#修改虚拟机磁盘大小\" class=\"headerlink\" title=\"修改虚拟机磁盘大小\"></a>修改虚拟机磁盘大小</h1><p>vagrant 默认创建的磁盘 根目录下只有10G.觉得太小,修改为1T.</p>\n<ul>\n<li>关闭 linux</li>\n</ul>\n<blockquote>\n<p>vagrant halt linux</p>\n</blockquote>\n<ul>\n<li>进入到 D:\\VirtualBoxVMs文件夹下 即 之前设置的virtualBox的路径,里面会有个刚才创建的linux系统的文件夹 D:\\VirtualBoxVMs\\linux</li>\n<li><p>加入virtualBox 安装目录加入环境变量path</p>\n<p>  安装virtualBox后会自动加入 VBOX_MSI_INSTALL_PATH 环境变量,直接把这个路径加到path后面即可. </p>\n</li>\n</ul>\n<blockquote>\n<p>%VBOX_MSI_INSTALL_PATH%</p>\n</blockquote>\n<ul>\n<li>通过下面命令 复制一份磁盘文件, .vmdk 文件直接修改大小会报错</li>\n</ul>\n<blockquote>\n<p>vboxmanage clonehd box-disk1.vmdk box.vdi –format vdi</p>\n</blockquote>\n<pre><code>D:\\VirtualBoxVMs\\linux&gt;vboxmanage clonehd box-disk1.vmdk box.vdi --format vdi\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\nClone medium created in format &apos;vdi&apos;. UUID: 1431c156-a3b1-4374-b196-36450edecd9e\n</code></pre><ul>\n<li>修改vdi 文件大小,命令如下</li>\n</ul>\n<blockquote>\n<p>vboxmanage modifyhd box.vdi –resize 1048576</p>\n</blockquote>\n<pre><code>D:\\VirtualBoxVMs\\linux&gt;vboxmanage modifyhd box.vdi --resize 1048576\n0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%\n</code></pre><ul>\n<li>打开虚拟机,修改 linux 磁盘文件为 box.vdi</li>\n</ul>\n<p><img src=\"https://static.oschina.net/uploads/img/201707/02192036_F9Jv.jpg\" alt=\"\"></p>\n<p>修改后</p>\n<p><img src=\"https://static.oschina.net/uploads/img/201707/02192410_T07t.jpg\" alt=\"\"></p>\n<ul>\n<li>查看D:\\VirtualBoxVMs\\linux 文件夹下linux.vbox 文件<br>删除 原来的harddisk <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;HardDisk uuid=&quot;&#123;3417d3e1-fcfd-410c-8df6-adba5f8b01bb&#125;&quot; location=&quot;box-disk1.vmdk&quot; format=&quot;VMDK&quot; type=&quot;Normal&quot;/&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>保留新的harddisk<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;HardDisk uuid=&quot;&#123;417759f6-4e5d-4a45-9ce1-1351b15c5a7d&#125;&quot; location=&quot;box-linux.vdi&quot; format=&quot;VDI&quot; type=&quot;Normal&quot;/&gt;</div></pre></td></tr></table></figure></p>\n<ul>\n<li>删除原来的磁盘文件, box-disk1.vmdk。这个可以以后再删除也可以，防止操作中出现什么错误。</li>\n<li>启动虚拟机<blockquote>\n<p>vagrant up linux</p>\n</blockquote>\n</li>\n</ul>\n<p>切换到root，密码为vagrant</p>\n<blockquote>\n<p>su</p>\n</blockquote>\n<p>查看磁盘</p>\n<blockquote>\n<p>fdisk -l</p>\n</blockquote>\n<pre><code>Gerät  boot.     Anfang        Ende     Blöcke   Id  System\n/dev/sda1   *        2048     1026047      512000   83  Linux\n/dev/sda2         1026048    20766719     9870336   8e  Linux LVM\n</code></pre><p>可以看到一共还是10G,并不是1T,我们需要加一个磁盘sda3</p>\n<pre><code>fdisk /dev/sda\nn\np\n3\n回车\n回车\n</code></pre><p>更改磁盘类型为 lvm</p>\n<pre><code>t\n3\n8e\n</code></pre><p>查看磁盘</p>\n<pre><code>p\n</code></pre><p>全部操作如下</p>\n<pre><code>Befehl (m für Hilfe): n\nPartition type:\n   p   primary (2 primary, 0 extended, 2 free)\n   e   Erweiterte\nSelect (default p): p\nPartitionsnummer (3,4, default 3): 3\nErster Sektor (20766720-2147483647, Vorgabe: 20766720): \nBenutze den Standardwert 20766720\nLast Sektor, +Sektoren or +size{K,M,G} (20766720-2147483647, Vorgabe: 2147483647): \nBenutze den Standardwert 2147483647\nPartition 3 of type Linux and of size 1014,1 GiB is set\n\nBefehl (m für Hilfe): t\nPartitionsnummer (1-3, default 3): 3\nHex code (type L to list all codes): 8e\nChanged type of partition &apos;Linux&apos; to &apos;Linux LVM&apos;\n\nBefehl (m für Hilfe): p\n\nDisk /dev/sda: 1099.5 GB, 1099511627776 bytes, 2147483648 sectors\nUnits = Sektoren of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisk label type: dos\nDisk identifier: 0x00095a8e\n\n   Gerät  boot.     Anfang        Ende     Blöcke   Id  System\n/dev/sda1   *        2048     1026047      512000   83  Linux\n/dev/sda2         1026048    20766719     9870336   8e  Linux LVM\n/dev/sda3        20766720  2147483647  1063358464   8e  Linux LVM\n</code></pre><p>保存退出</p>\n<pre><code>w\n</code></pre><p>重启虚拟机</p>\n<pre><code>reboot\n</code></pre><p>查看当前 Volume Group</p>\n<pre><code>vgdisplay\n</code></pre><p>信息如下</p>\n<pre><code>[root@linux vagrant]# vgdisplay\n  --- Volume group ---\n  VG Name               centos\n  System ID             \n  Format                lvm2\n  Metadata Areas        1\n  Metadata Sequence No  3\n  VG Access             read/write\n  VG Status             resizable\n  MAX LV                0\n  Cur LV                2\n  Open LV               2\n  Max PV                0\n  Cur PV                1\n  Act PV                1\n  VG Size               9,41 GiB\n  PE Size               4,00 MiB\n  Total PE              2409\n  Alloc PE / Size       2399 / 9,37 GiB\n  Free  PE / Size       10 / 40,00 MiB\n  VG UUID               NJWfOH-An0K-Hm9Q-8Tjs-yq2x-ZWXi-L2vP7i\n</code></pre><p>名称为 centos，可调整大小（resizable），当前大小为 9,41GB。活动的 LVM 卷有</p>\n<pre><code>lvscan\n\n[root@linux vagrant]# lvscan\nACTIVE            &apos;/dev/centos/swap&apos; [1016,00 MiB] inherit\nACTIVE            &apos;/dev/centos/root&apos; [8,38 GiB] inherit\n</code></pre><p>先将分配过来的新磁盘空间创建为一个新的物理卷</p>\n<pre><code>pvcreate /dev/sda3\n\n[root@linux vagrant]# pvcreate /dev/sda3\nPhysical volume &quot;/dev/sda3&quot; successfully created\n</code></pre><p>然后使用新的物理卷来扩展 LVM 的 centos</p>\n<pre><code>vgextend centos /dev/sda3\n\n[root@linux vagrant]# vgextend centos /dev/sda3\nVolume group &quot;centos&quot; successfully extended\n</code></pre><p>然后扩展 LVM 的逻辑卷 centos-lv_root</p>\n<pre><code>lvextend /dev/centos/root /dev/sda3\n\n[root@linux vagrant]# lvextend /dev/centos/root /dev/sda3\nSize of logical volume centos/root changed from 8,38 GiB (2145 extents) to 1022,47 GiB (261753 extents).\nLogical volume root successfully resized\n</code></pre><p>最后，调整逻辑卷文件系统的大小</p>\n<pre><code>vagrant]# resize2fs /dev/centos/root\n\n[root@linux vagrant]# resize2fs /dev/centos/root\nresize2fs 1.42.9 (28-Dec-2013)\nresize2fs: Ungültige magische Zahl im Superblock beim Versuch, /dev/centos/root zu öffnen\nKann keinen gültigen Dateisystem-Superblock finden.\n</code></pre><p>完成。看看效果,可以看到root下变成了1T</p>\n<pre><code>lvscan\n\n[root@linux vagrant]# lvscan\n  ACTIVE            &apos;/dev/centos/swap&apos; [1016,00 MiB] inherit\n  ACTIVE            &apos;/dev/centos/root&apos; [1022,47 GiB] inherit\n</code></pre><p>但是,查看根目录下面分配大小, 跟目录还是为8.4G</p>\n<pre><code>[root@linux vagrant]# df -h\nDateisystem             Größe Benutzt Verf. Verw% Eingehängt auf\n/dev/mapper/centos-root  8,4G    1,1G  7,4G   13% /\ndevtmpfs                 236M       0  236M    0% /dev\ntmpfs                    245M       0  245M    0% /dev/shm\ntmpfs                    245M    4,3M  241M    2% /run\ntmpfs                    245M       0  245M    0% /sys/fs/cgroup\n/dev/sda1                497M    118M  379M   24% /boot  \n</code></pre><p>用 xfs_growfs 对扩容后的 LV 进行 xfs 格式大小调整</p>\n<pre><code>xfs_growfs /dev/centos/root\n\n[root@linux vagrant]# xfs_growfs /dev/centos/root\nmeta-data=/dev/mapper/centos-root isize=256    agcount=4, agsize=549120 blks\n         =                       sectsz=512   attr=2, projid32bit=1\n         =                       crc=0        finobt=0\ndata     =                       bsize=4096   blocks=2196480, imaxpct=25\n         =                       sunit=0      swidth=0 blks\nnaming   =version 2              bsize=4096   ascii-ci=0 ftype=0\nlog      =Intern                 bsize=4096   blocks=2560, version=2\n         =                       sectsz=512   sunit=0 blks, lazy-count=1\nrealtime =keine                  extsz=4096   blocks=0, rtextents=0\nDatenblöcke von 2196480 auf 268035072 geändert.\n</code></pre><p>再查看</p>\n<pre><code>[root@linux vagrant]# df -h\nDateisystem             Größe Benutzt Verf. Verw% Eingehängt auf\n/dev/mapper/centos-root 1023G    1,1G 1022G    1% /\ndevtmpfs                 236M       0  236M    0% /dev\ntmpfs                    245M       0  245M    0% /dev/shm\ntmpfs                    245M    4,3M  241M    2% /run\ntmpfs                    245M       0  245M    0% /sys/fs/cgroup\n/dev/sda1                497M    118M  379M   24% /boot\n</code></pre><p>可以看到根目录大小已经变成1T了</p>\n<p><a href=\"http://pan.baidu.com/s/1dEC3ePr\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1dEC3ePr</a></p>\n<p>由于不了解linux,修改磁盘大小费了很多事.完成后打了包,做成了新的box，方便以后直接使用。</p>\n<h1 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h1><h2 id=\"修改linux-语言\"><a href=\"#修改linux-语言\" class=\"headerlink\" title=\"修改linux 语言\"></a>修改linux 语言</h2><blockquote>\n<p>/etc/locale.conf<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">LANG=&apos;en_US.UTF-8&apos;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h1 id=\"参考博客\"><a href=\"#参考博客\" class=\"headerlink\" title=\"参考博客:\"></a>参考博客:</h1><h2 id=\"调整-VirtualBox-虚拟机的磁盘大小\"><a href=\"#调整-VirtualBox-虚拟机的磁盘大小\" class=\"headerlink\" title=\"调整 VirtualBox 虚拟机的磁盘大小\"></a>调整 VirtualBox 虚拟机的磁盘大小</h2><p><a href=\"https://cnzhx.net/blog/resizing-lvm-centos-virtualbox-guest/\" target=\"_blank\" rel=\"external\">https://cnzhx.net/blog/resizing-lvm-centos-virtualbox-guest/</a>  </p>\n<h2 id=\"手把手教你给-CentOS-7-添加硬盘及扩容-LVM\"><a href=\"#手把手教你给-CentOS-7-添加硬盘及扩容-LVM\" class=\"headerlink\" title=\"手把手教你给 CentOS 7 添加硬盘及扩容(LVM)\"></a>手把手教你给 CentOS 7 添加硬盘及扩容(LVM)</h2><p><a href=\"https://aurthurxlc.github.io/Aurthur-2017/Centos-7-extend-lvm-volume.html\" target=\"_blank\" rel=\"external\">https://aurthurxlc.github.io/Aurthur-2017/Centos-7-extend-lvm-volume.html</a></p>"},{"title":"大数据02-01 linux命令继续学习.md","toc":true,"date":"2017-10-29T14:30:38.000Z","scaffolds":null,"_content":"# vmare克隆后修改地址问题\n解决克隆后eth0不见的问题\n\n直接修改  /etc/sysconfig/network-script/ifcfg-eth0 \n删掉UUID  HWADDR\n配置静态地址\n然后：\n修改 /etc/udev/rules.d/70-persistent-net.rules\n然后 reboot\n\n# linux命令继续学习\n## 查看文件内容\ncat    somefile    一次性将文件内容全部输出（控制台）\nmore   somefile     可以翻页查看, 下翻一页(空格)    上翻一页（b）   退出（q）\nless   somefile      可以翻页查看,下翻一页(空格)    上翻一页（b），上翻一行(↑)  下翻一行（↓）  可以搜索关键字（/keyword）\n\ntail -10  install.log   查看文件尾部的10行\ntail -f install.log    小f跟踪文件的唯一inode号，就算文件改名后，还是跟踪原来这个inode表示的文件\ntail -F install.log    大F按照文件名来跟踪\n\nhead -10  install.log   查看文件头部的10行\n\n## 后台服务管理\nservice network status   查看指定服务的状态\nservice network stop     停止指定服务\nservice network start    启动指定服务\nservice network restart  重启指定服务\nservice --status-all  查看系统中所有的后台服务\n\n## 设置后台服务的自启配置\nchkconfig   查看所有服务器自启配置\nchkconfig iptables off   关掉指定服务的自动启动\nchkconfig iptables on   开启指定服务的自动启动\n\n## 系统启动级别管理\nvi  /etc/inittab\n```\n# Default runlevel. The runlevels used are:\n#   0 - halt (Do NOT set initdefault to this)\n#   1 - Single user mode\n#   2 - Multiuser, without NFS (The same as 3, if you do not have networking)\n#   3 - Full multiuser mode\n#   4 - unused\n#   5 - X11\n#   6 - reboot (Do NOT set initdefault to this)\n#\nid:3:initdefault:\n```\n\n# 软件安装\n\n\n\n## 如何上传安装包到服务器\n\n- 可以使用图形化工具，如： filezilla\n- 可以使用sftp工具：  alt+p 调出后，用put命令上传\n上传（如果不cd指定目录，则上传到当前用户的主目录）：\n```\nsftp> cd /home/   \nsftp> put C:\\Users\\Administrator\\Desktop\\day02\\soft\\jdk-7u45-linux-x64.tar.gz\n```\n下载（lcd[local cd]指定下载到本地的目标路径）\n```\nsftp> lcd d:/                            \nsftp> get /home/jdk-7u45-linux-x64.tar.gz\n```\n\n- lrzsz\n\n\n## 安装jdk\n### 压缩解压缩的相关命令\n压缩解压缩\n\n    root@mini1 ~]# gzip access.log \n    [root@mini1 ~]# ll\n    总用量 134892\n    -rw-r--r--. 1 root root        68 4月   3 17:37 access.log.gz\n\n解压gz文件：  ```gzip -d access.log.gz```\n\n### 打包解包\n```\n[root@mini1 ~]# tar -cvf myfirsttarball.tar aaa/\naaa/\naaa/2.txt\naaa/3.txt\naaa/1.txt\n```\n解包：\n```\n[root@mini1 ~]# tar -xvf myfirsttarball.tar \naaa/\naaa/2.txt\naaa/3.txt\naaa/1.txt\n```\n\n### 一次性完成打包&&压缩的操作\n产生压缩包：\n```\n[root@mini1 ~]# tar -zcvf my.tar.gz aaa/\naaa/\naaa/2.txt\naaa/3.txt\naaa/1.txt\n```\n\n解压缩包：\n```\n[root@mini1 ~]# tar -zxvf my.tar.gz \naaa/\naaa/2.txt\naaa/3.txt\naaa/1.txt\n```\n\n\n### 安装jdk的过程：\n- 解压安装包\n\n    tar -zxvf jdk-7u45-linux-x64.tar.gz -C apps/\n- 然后修改环境变量\n\n    vi /etc/profile  \n    在文件最后添加\n    export JAVA_HOME=/root/apps/jdk1.7.0_45\n    export PATH=$PATH:$JAVA_HOME/bin\n    保存退出\n\n- 然后重新加载环境变量 \n\n    source /etc/profile\n\n\n\n## 安装rpm包软件，如mysql\n### 查看系统中安装的rpm包\n\n    rpm -qa | grep mysql\n\n### 上传rpm安装包\n\n    MySQL-client-5.5.48-1.linux2.6.x86_64.rpm\n    MySQL-server-5.5.48-1.linux2.6.x86_64.rpm\n    per * .rpm\n\n### 安装perl依赖\n\n    rpm -ivh perl*\n_可能会提示有包冲突，解决： rpm -e 冲突包名 --nodeps_\n\n### 安装server\n\n    rpm -ivh MySQL-server-5.5.48-1.linux2.6.x86_64.rpm\n    \n如果成功，会看到进度条，最后，有关于root密码设置的提示，一定要记下来\n这个版本的提示是，先启动server\n\n    service mysql start\n    \n然后```/usr/bin/mysql_secure_installation``` 命令去交互式修改root密码\n\n### 修改密码时，提示需要先安装client\n\n    rpm -ivh MySQL-client-5.5.48-1.linux2.6.x86_64.rpm\n\n客户端安装成功后，记得还要用/usr/bin/mysql_secure_installation 命令去交互式修改root密码\n\n### 登录验证\n\n    mysql -uroot -proot","source":"_posts/大数据02-01 linux命令继续学习.md","raw":"---\ntitle: 大数据02-01 linux命令继续学习.md\ncategories: 大数据学习笔记\ntags: [大数据,linux,linux命令]\ntoc: true\ndate: 2017-10-29 22:30:38\nscaffolds:\n---\n# vmare克隆后修改地址问题\n解决克隆后eth0不见的问题\n\n直接修改  /etc/sysconfig/network-script/ifcfg-eth0 \n删掉UUID  HWADDR\n配置静态地址\n然后：\n修改 /etc/udev/rules.d/70-persistent-net.rules\n然后 reboot\n\n# linux命令继续学习\n## 查看文件内容\ncat    somefile    一次性将文件内容全部输出（控制台）\nmore   somefile     可以翻页查看, 下翻一页(空格)    上翻一页（b）   退出（q）\nless   somefile      可以翻页查看,下翻一页(空格)    上翻一页（b），上翻一行(↑)  下翻一行（↓）  可以搜索关键字（/keyword）\n\ntail -10  install.log   查看文件尾部的10行\ntail -f install.log    小f跟踪文件的唯一inode号，就算文件改名后，还是跟踪原来这个inode表示的文件\ntail -F install.log    大F按照文件名来跟踪\n\nhead -10  install.log   查看文件头部的10行\n\n## 后台服务管理\nservice network status   查看指定服务的状态\nservice network stop     停止指定服务\nservice network start    启动指定服务\nservice network restart  重启指定服务\nservice --status-all  查看系统中所有的后台服务\n\n## 设置后台服务的自启配置\nchkconfig   查看所有服务器自启配置\nchkconfig iptables off   关掉指定服务的自动启动\nchkconfig iptables on   开启指定服务的自动启动\n\n## 系统启动级别管理\nvi  /etc/inittab\n```\n# Default runlevel. The runlevels used are:\n#   0 - halt (Do NOT set initdefault to this)\n#   1 - Single user mode\n#   2 - Multiuser, without NFS (The same as 3, if you do not have networking)\n#   3 - Full multiuser mode\n#   4 - unused\n#   5 - X11\n#   6 - reboot (Do NOT set initdefault to this)\n#\nid:3:initdefault:\n```\n\n# 软件安装\n\n\n\n## 如何上传安装包到服务器\n\n- 可以使用图形化工具，如： filezilla\n- 可以使用sftp工具：  alt+p 调出后，用put命令上传\n上传（如果不cd指定目录，则上传到当前用户的主目录）：\n```\nsftp> cd /home/   \nsftp> put C:\\Users\\Administrator\\Desktop\\day02\\soft\\jdk-7u45-linux-x64.tar.gz\n```\n下载（lcd[local cd]指定下载到本地的目标路径）\n```\nsftp> lcd d:/                            \nsftp> get /home/jdk-7u45-linux-x64.tar.gz\n```\n\n- lrzsz\n\n\n## 安装jdk\n### 压缩解压缩的相关命令\n压缩解压缩\n\n    root@mini1 ~]# gzip access.log \n    [root@mini1 ~]# ll\n    总用量 134892\n    -rw-r--r--. 1 root root        68 4月   3 17:37 access.log.gz\n\n解压gz文件：  ```gzip -d access.log.gz```\n\n### 打包解包\n```\n[root@mini1 ~]# tar -cvf myfirsttarball.tar aaa/\naaa/\naaa/2.txt\naaa/3.txt\naaa/1.txt\n```\n解包：\n```\n[root@mini1 ~]# tar -xvf myfirsttarball.tar \naaa/\naaa/2.txt\naaa/3.txt\naaa/1.txt\n```\n\n### 一次性完成打包&&压缩的操作\n产生压缩包：\n```\n[root@mini1 ~]# tar -zcvf my.tar.gz aaa/\naaa/\naaa/2.txt\naaa/3.txt\naaa/1.txt\n```\n\n解压缩包：\n```\n[root@mini1 ~]# tar -zxvf my.tar.gz \naaa/\naaa/2.txt\naaa/3.txt\naaa/1.txt\n```\n\n\n### 安装jdk的过程：\n- 解压安装包\n\n    tar -zxvf jdk-7u45-linux-x64.tar.gz -C apps/\n- 然后修改环境变量\n\n    vi /etc/profile  \n    在文件最后添加\n    export JAVA_HOME=/root/apps/jdk1.7.0_45\n    export PATH=$PATH:$JAVA_HOME/bin\n    保存退出\n\n- 然后重新加载环境变量 \n\n    source /etc/profile\n\n\n\n## 安装rpm包软件，如mysql\n### 查看系统中安装的rpm包\n\n    rpm -qa | grep mysql\n\n### 上传rpm安装包\n\n    MySQL-client-5.5.48-1.linux2.6.x86_64.rpm\n    MySQL-server-5.5.48-1.linux2.6.x86_64.rpm\n    per * .rpm\n\n### 安装perl依赖\n\n    rpm -ivh perl*\n_可能会提示有包冲突，解决： rpm -e 冲突包名 --nodeps_\n\n### 安装server\n\n    rpm -ivh MySQL-server-5.5.48-1.linux2.6.x86_64.rpm\n    \n如果成功，会看到进度条，最后，有关于root密码设置的提示，一定要记下来\n这个版本的提示是，先启动server\n\n    service mysql start\n    \n然后```/usr/bin/mysql_secure_installation``` 命令去交互式修改root密码\n\n### 修改密码时，提示需要先安装client\n\n    rpm -ivh MySQL-client-5.5.48-1.linux2.6.x86_64.rpm\n\n客户端安装成功后，记得还要用/usr/bin/mysql_secure_installation 命令去交互式修改root密码\n\n### 登录验证\n\n    mysql -uroot -proot","slug":"大数据02-01 linux命令继续学习","published":1,"updated":"2017-11-06T16:13:15.524Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9wugozt000jh4v7gfmz7vx3","content":"<h1 id=\"vmare克隆后修改地址问题\"><a href=\"#vmare克隆后修改地址问题\" class=\"headerlink\" title=\"vmare克隆后修改地址问题\"></a>vmare克隆后修改地址问题</h1><p>解决克隆后eth0不见的问题</p>\n<p>直接修改  /etc/sysconfig/network-script/ifcfg-eth0<br>删掉UUID  HWADDR<br>配置静态地址<br>然后：<br>修改 /etc/udev/rules.d/70-persistent-net.rules<br>然后 reboot</p>\n<h1 id=\"linux命令继续学习\"><a href=\"#linux命令继续学习\" class=\"headerlink\" title=\"linux命令继续学习\"></a>linux命令继续学习</h1><h2 id=\"查看文件内容\"><a href=\"#查看文件内容\" class=\"headerlink\" title=\"查看文件内容\"></a>查看文件内容</h2><p>cat    somefile    一次性将文件内容全部输出（控制台）<br>more   somefile     可以翻页查看, 下翻一页(空格)    上翻一页（b）   退出（q）<br>less   somefile      可以翻页查看,下翻一页(空格)    上翻一页（b），上翻一行(↑)  下翻一行（↓）  可以搜索关键字（/keyword）</p>\n<p>tail -10  install.log   查看文件尾部的10行<br>tail -f install.log    小f跟踪文件的唯一inode号，就算文件改名后，还是跟踪原来这个inode表示的文件<br>tail -F install.log    大F按照文件名来跟踪</p>\n<p>head -10  install.log   查看文件头部的10行</p>\n<h2 id=\"后台服务管理\"><a href=\"#后台服务管理\" class=\"headerlink\" title=\"后台服务管理\"></a>后台服务管理</h2><p>service network status   查看指定服务的状态<br>service network stop     停止指定服务<br>service network start    启动指定服务<br>service network restart  重启指定服务<br>service –status-all  查看系统中所有的后台服务</p>\n<h2 id=\"设置后台服务的自启配置\"><a href=\"#设置后台服务的自启配置\" class=\"headerlink\" title=\"设置后台服务的自启配置\"></a>设置后台服务的自启配置</h2><p>chkconfig   查看所有服务器自启配置<br>chkconfig iptables off   关掉指定服务的自动启动<br>chkconfig iptables on   开启指定服务的自动启动</p>\n<h2 id=\"系统启动级别管理\"><a href=\"#系统启动级别管理\" class=\"headerlink\" title=\"系统启动级别管理\"></a>系统启动级别管理</h2><p>vi  /etc/inittab<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Default runlevel. The runlevels used are:</div><div class=\"line\">#   0 - halt (Do NOT set initdefault to this)</div><div class=\"line\">#   1 - Single user mode</div><div class=\"line\">#   2 - Multiuser, without NFS (The same as 3, if you do not have networking)</div><div class=\"line\">#   3 - Full multiuser mode</div><div class=\"line\">#   4 - unused</div><div class=\"line\">#   5 - X11</div><div class=\"line\">#   6 - reboot (Do NOT set initdefault to this)</div><div class=\"line\">#</div><div class=\"line\">id:3:initdefault:</div></pre></td></tr></table></figure></p>\n<h1 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h1><h2 id=\"如何上传安装包到服务器\"><a href=\"#如何上传安装包到服务器\" class=\"headerlink\" title=\"如何上传安装包到服务器\"></a>如何上传安装包到服务器</h2><ul>\n<li>可以使用图形化工具，如： filezilla</li>\n<li>可以使用sftp工具：  alt+p 调出后，用put命令上传<br>上传（如果不cd指定目录，则上传到当前用户的主目录）：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sftp&gt; cd /home/   </div><div class=\"line\">sftp&gt; put C:\\Users\\Administrator\\Desktop\\day02\\soft\\jdk-7u45-linux-x64.tar.gz</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>下载（lcd[local cd]指定下载到本地的目标路径）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sftp&gt; lcd d:/                            </div><div class=\"line\">sftp&gt; get /home/jdk-7u45-linux-x64.tar.gz</div></pre></td></tr></table></figure></p>\n<ul>\n<li>lrzsz</li>\n</ul>\n<h2 id=\"安装jdk\"><a href=\"#安装jdk\" class=\"headerlink\" title=\"安装jdk\"></a>安装jdk</h2><h3 id=\"压缩解压缩的相关命令\"><a href=\"#压缩解压缩的相关命令\" class=\"headerlink\" title=\"压缩解压缩的相关命令\"></a>压缩解压缩的相关命令</h3><p>压缩解压缩</p>\n<pre><code>root@mini1 ~]# gzip access.log \n[root@mini1 ~]# ll\n总用量 134892\n-rw-r--r--. 1 root root        68 4月   3 17:37 access.log.gz\n</code></pre><p>解压gz文件：  <figure class=\"highlight plain\"><figcaption><span>-d access.log.gz```</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">### 打包解包</div></pre></td></tr></table></figure></p>\n<p>[root@mini1 ~]# tar -cvf myfirsttarball.tar aaa/<br>aaa/<br>aaa/2.txt<br>aaa/3.txt<br>aaa/1.txt<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">解包：</div></pre></td></tr></table></figure></p>\n<p>[root@mini1 ~]# tar -xvf myfirsttarball.tar<br>aaa/<br>aaa/2.txt<br>aaa/3.txt<br>aaa/1.txt<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">### 一次性完成打包&amp;&amp;压缩的操作</div><div class=\"line\">产生压缩包：</div></pre></td></tr></table></figure></p>\n<p>[root@mini1 ~]# tar -zcvf my.tar.gz aaa/<br>aaa/<br>aaa/2.txt<br>aaa/3.txt<br>aaa/1.txt<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">解压缩包：</div></pre></td></tr></table></figure></p>\n<p>[root@mini1 ~]# tar -zxvf my.tar.gz<br>aaa/<br>aaa/2.txt<br>aaa/3.txt<br>aaa/1.txt<br>```</p>\n<h3 id=\"安装jdk的过程：\"><a href=\"#安装jdk的过程：\" class=\"headerlink\" title=\"安装jdk的过程：\"></a>安装jdk的过程：</h3><ul>\n<li><p>解压安装包</p>\n<p>  tar -zxvf jdk-7u45-linux-x64.tar.gz -C apps/</p>\n</li>\n<li><p>然后修改环境变量</p>\n<p>  vi /etc/profile<br>  在文件最后添加<br>  export JAVA_HOME=/root/apps/jdk1.7.0_45<br>  export PATH=$PATH:$JAVA_HOME/bin<br>  保存退出</p>\n</li>\n<li><p>然后重新加载环境变量 </p>\n<p>  source /etc/profile</p>\n</li>\n</ul>\n<h2 id=\"安装rpm包软件，如mysql\"><a href=\"#安装rpm包软件，如mysql\" class=\"headerlink\" title=\"安装rpm包软件，如mysql\"></a>安装rpm包软件，如mysql</h2><h3 id=\"查看系统中安装的rpm包\"><a href=\"#查看系统中安装的rpm包\" class=\"headerlink\" title=\"查看系统中安装的rpm包\"></a>查看系统中安装的rpm包</h3><pre><code>rpm -qa | grep mysql\n</code></pre><h3 id=\"上传rpm安装包\"><a href=\"#上传rpm安装包\" class=\"headerlink\" title=\"上传rpm安装包\"></a>上传rpm安装包</h3><pre><code>MySQL-client-5.5.48-1.linux2.6.x86_64.rpm\nMySQL-server-5.5.48-1.linux2.6.x86_64.rpm\nper * .rpm\n</code></pre><h3 id=\"安装perl依赖\"><a href=\"#安装perl依赖\" class=\"headerlink\" title=\"安装perl依赖\"></a>安装perl依赖</h3><pre><code>rpm -ivh perl*\n</code></pre><p><em>可能会提示有包冲突，解决： rpm -e 冲突包名 –nodeps</em></p>\n<h3 id=\"安装server\"><a href=\"#安装server\" class=\"headerlink\" title=\"安装server\"></a>安装server</h3><pre><code>rpm -ivh MySQL-server-5.5.48-1.linux2.6.x86_64.rpm\n</code></pre><p>如果成功，会看到进度条，最后，有关于root密码设置的提示，一定要记下来<br>这个版本的提示是，先启动server</p>\n<pre><code>service mysql start\n</code></pre><p>然后<code>/usr/bin/mysql_secure_installation</code> 命令去交互式修改root密码</p>\n<h3 id=\"修改密码时，提示需要先安装client\"><a href=\"#修改密码时，提示需要先安装client\" class=\"headerlink\" title=\"修改密码时，提示需要先安装client\"></a>修改密码时，提示需要先安装client</h3><pre><code>rpm -ivh MySQL-client-5.5.48-1.linux2.6.x86_64.rpm\n</code></pre><p>客户端安装成功后，记得还要用/usr/bin/mysql_secure_installation 命令去交互式修改root密码</p>\n<h3 id=\"登录验证\"><a href=\"#登录验证\" class=\"headerlink\" title=\"登录验证\"></a>登录验证</h3><pre><code>mysql -uroot -proot\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"vmare克隆后修改地址问题\"><a href=\"#vmare克隆后修改地址问题\" class=\"headerlink\" title=\"vmare克隆后修改地址问题\"></a>vmare克隆后修改地址问题</h1><p>解决克隆后eth0不见的问题</p>\n<p>直接修改  /etc/sysconfig/network-script/ifcfg-eth0<br>删掉UUID  HWADDR<br>配置静态地址<br>然后：<br>修改 /etc/udev/rules.d/70-persistent-net.rules<br>然后 reboot</p>\n<h1 id=\"linux命令继续学习\"><a href=\"#linux命令继续学习\" class=\"headerlink\" title=\"linux命令继续学习\"></a>linux命令继续学习</h1><h2 id=\"查看文件内容\"><a href=\"#查看文件内容\" class=\"headerlink\" title=\"查看文件内容\"></a>查看文件内容</h2><p>cat    somefile    一次性将文件内容全部输出（控制台）<br>more   somefile     可以翻页查看, 下翻一页(空格)    上翻一页（b）   退出（q）<br>less   somefile      可以翻页查看,下翻一页(空格)    上翻一页（b），上翻一行(↑)  下翻一行（↓）  可以搜索关键字（/keyword）</p>\n<p>tail -10  install.log   查看文件尾部的10行<br>tail -f install.log    小f跟踪文件的唯一inode号，就算文件改名后，还是跟踪原来这个inode表示的文件<br>tail -F install.log    大F按照文件名来跟踪</p>\n<p>head -10  install.log   查看文件头部的10行</p>\n<h2 id=\"后台服务管理\"><a href=\"#后台服务管理\" class=\"headerlink\" title=\"后台服务管理\"></a>后台服务管理</h2><p>service network status   查看指定服务的状态<br>service network stop     停止指定服务<br>service network start    启动指定服务<br>service network restart  重启指定服务<br>service –status-all  查看系统中所有的后台服务</p>\n<h2 id=\"设置后台服务的自启配置\"><a href=\"#设置后台服务的自启配置\" class=\"headerlink\" title=\"设置后台服务的自启配置\"></a>设置后台服务的自启配置</h2><p>chkconfig   查看所有服务器自启配置<br>chkconfig iptables off   关掉指定服务的自动启动<br>chkconfig iptables on   开启指定服务的自动启动</p>\n<h2 id=\"系统启动级别管理\"><a href=\"#系统启动级别管理\" class=\"headerlink\" title=\"系统启动级别管理\"></a>系统启动级别管理</h2><p>vi  /etc/inittab<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Default runlevel. The runlevels used are:</div><div class=\"line\">#   0 - halt (Do NOT set initdefault to this)</div><div class=\"line\">#   1 - Single user mode</div><div class=\"line\">#   2 - Multiuser, without NFS (The same as 3, if you do not have networking)</div><div class=\"line\">#   3 - Full multiuser mode</div><div class=\"line\">#   4 - unused</div><div class=\"line\">#   5 - X11</div><div class=\"line\">#   6 - reboot (Do NOT set initdefault to this)</div><div class=\"line\">#</div><div class=\"line\">id:3:initdefault:</div></pre></td></tr></table></figure></p>\n<h1 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h1><h2 id=\"如何上传安装包到服务器\"><a href=\"#如何上传安装包到服务器\" class=\"headerlink\" title=\"如何上传安装包到服务器\"></a>如何上传安装包到服务器</h2><ul>\n<li>可以使用图形化工具，如： filezilla</li>\n<li>可以使用sftp工具：  alt+p 调出后，用put命令上传<br>上传（如果不cd指定目录，则上传到当前用户的主目录）：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sftp&gt; cd /home/   </div><div class=\"line\">sftp&gt; put C:\\Users\\Administrator\\Desktop\\day02\\soft\\jdk-7u45-linux-x64.tar.gz</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>下载（lcd[local cd]指定下载到本地的目标路径）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sftp&gt; lcd d:/                            </div><div class=\"line\">sftp&gt; get /home/jdk-7u45-linux-x64.tar.gz</div></pre></td></tr></table></figure></p>\n<ul>\n<li>lrzsz</li>\n</ul>\n<h2 id=\"安装jdk\"><a href=\"#安装jdk\" class=\"headerlink\" title=\"安装jdk\"></a>安装jdk</h2><h3 id=\"压缩解压缩的相关命令\"><a href=\"#压缩解压缩的相关命令\" class=\"headerlink\" title=\"压缩解压缩的相关命令\"></a>压缩解压缩的相关命令</h3><p>压缩解压缩</p>\n<pre><code>root@mini1 ~]# gzip access.log \n[root@mini1 ~]# ll\n总用量 134892\n-rw-r--r--. 1 root root        68 4月   3 17:37 access.log.gz\n</code></pre><p>解压gz文件：  <figure class=\"highlight plain\"><figcaption><span>-d access.log.gz```</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">### 打包解包</div></pre></td></tr></table></figure></p>\n<p>[root@mini1 ~]# tar -cvf myfirsttarball.tar aaa/<br>aaa/<br>aaa/2.txt<br>aaa/3.txt<br>aaa/1.txt<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">解包：</div></pre></td></tr></table></figure></p>\n<p>[root@mini1 ~]# tar -xvf myfirsttarball.tar<br>aaa/<br>aaa/2.txt<br>aaa/3.txt<br>aaa/1.txt<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">### 一次性完成打包&amp;&amp;压缩的操作</div><div class=\"line\">产生压缩包：</div></pre></td></tr></table></figure></p>\n<p>[root@mini1 ~]# tar -zcvf my.tar.gz aaa/<br>aaa/<br>aaa/2.txt<br>aaa/3.txt<br>aaa/1.txt<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">解压缩包：</div></pre></td></tr></table></figure></p>\n<p>[root@mini1 ~]# tar -zxvf my.tar.gz<br>aaa/<br>aaa/2.txt<br>aaa/3.txt<br>aaa/1.txt<br>```</p>\n<h3 id=\"安装jdk的过程：\"><a href=\"#安装jdk的过程：\" class=\"headerlink\" title=\"安装jdk的过程：\"></a>安装jdk的过程：</h3><ul>\n<li><p>解压安装包</p>\n<p>  tar -zxvf jdk-7u45-linux-x64.tar.gz -C apps/</p>\n</li>\n<li><p>然后修改环境变量</p>\n<p>  vi /etc/profile<br>  在文件最后添加<br>  export JAVA_HOME=/root/apps/jdk1.7.0_45<br>  export PATH=$PATH:$JAVA_HOME/bin<br>  保存退出</p>\n</li>\n<li><p>然后重新加载环境变量 </p>\n<p>  source /etc/profile</p>\n</li>\n</ul>\n<h2 id=\"安装rpm包软件，如mysql\"><a href=\"#安装rpm包软件，如mysql\" class=\"headerlink\" title=\"安装rpm包软件，如mysql\"></a>安装rpm包软件，如mysql</h2><h3 id=\"查看系统中安装的rpm包\"><a href=\"#查看系统中安装的rpm包\" class=\"headerlink\" title=\"查看系统中安装的rpm包\"></a>查看系统中安装的rpm包</h3><pre><code>rpm -qa | grep mysql\n</code></pre><h3 id=\"上传rpm安装包\"><a href=\"#上传rpm安装包\" class=\"headerlink\" title=\"上传rpm安装包\"></a>上传rpm安装包</h3><pre><code>MySQL-client-5.5.48-1.linux2.6.x86_64.rpm\nMySQL-server-5.5.48-1.linux2.6.x86_64.rpm\nper * .rpm\n</code></pre><h3 id=\"安装perl依赖\"><a href=\"#安装perl依赖\" class=\"headerlink\" title=\"安装perl依赖\"></a>安装perl依赖</h3><pre><code>rpm -ivh perl*\n</code></pre><p><em>可能会提示有包冲突，解决： rpm -e 冲突包名 –nodeps</em></p>\n<h3 id=\"安装server\"><a href=\"#安装server\" class=\"headerlink\" title=\"安装server\"></a>安装server</h3><pre><code>rpm -ivh MySQL-server-5.5.48-1.linux2.6.x86_64.rpm\n</code></pre><p>如果成功，会看到进度条，最后，有关于root密码设置的提示，一定要记下来<br>这个版本的提示是，先启动server</p>\n<pre><code>service mysql start\n</code></pre><p>然后<code>/usr/bin/mysql_secure_installation</code> 命令去交互式修改root密码</p>\n<h3 id=\"修改密码时，提示需要先安装client\"><a href=\"#修改密码时，提示需要先安装client\" class=\"headerlink\" title=\"修改密码时，提示需要先安装client\"></a>修改密码时，提示需要先安装client</h3><pre><code>rpm -ivh MySQL-client-5.5.48-1.linux2.6.x86_64.rpm\n</code></pre><p>客户端安装成功后，记得还要用/usr/bin/mysql_secure_installation 命令去交互式修改root密码</p>\n<h3 id=\"登录验证\"><a href=\"#登录验证\" class=\"headerlink\" title=\"登录验证\"></a>登录验证</h3><pre><code>mysql -uroot -proot\n</code></pre>"},{"title":"大数据02-03 shell编程语法讲解","toc":true,"date":"2017-11-06T15:02:36.000Z","scaffolds":null,"_content":"\n# 变量\n## 系统变量\n* $HOME\n* $PWD\n* $SHELL\n* $USER\n显示当前shell中所有变量\n```\nset\n`````\n\n## 用户自定义变量\n定义变量\n> STR=\"hello world\"\n\n> A=9\n\n> unset A 撤销变量 A\n\n> readonly B=2 声明静态的变量 B=2 ，不能 unset\n\n> export 变量名 可把变量提升为全局环境变量，可供其他shell程序使用\n\n将命令的返回值赋给变量\n\n<!-- more -->\n\n```\nA=`ls -la` 反引号，运行里面的命令，并把结果返回给变量A\nA=$(ls -la) 等价于反引号\n```\n## shell中的特殊变量\n* $? 表示上一个命令退出的状态  true 0 false 1 错误127\n* $$ 表示当前进程编号\n* $0 表示当前脚本名称\n* $n 表示n位置的输入参数（n代表数字，n>=1）\n* $# \t表示参数的个数，常用于循环\n* $*和$@ 都表示参数列表 \n### $*与$@区别\n* $* 和 $@ 都表示传递给函数或脚本的所有参数，不被双引号\" \"包含时，都以$1  $2  … $n 的形式输出所有参数  \n* 当它们被双引号\" \"包含时，\"$*\" 会将所有的参数作为一个整体，以\"$1 $2 … $n\"的形式输出所有参数；\"$@\" 会将各个参数分开，以\"$1\" \"$2\" … \"$n\" 的形式输出所有参数\n\n## 运算符\n> 格式 :expr m + n 或$((m+n)) 注意expr运算符间要有空格\n\n例如计算（2 ＋3 ）×4 的值\n1 .分步计算\u000b\tS=`expr 2 + 3`\u000b\texpr $S \\* 4\n2.一步完成计算\n```bash\n\texpr `expr 2 + 3 ` \\* 4\n\techo `expr \\`expr 2 + 3\\` \\* 4`\n\t或\n\t$(((2+3)*4))\n```\n# for循环\n\n## 第一种：\n```bash\nfor N in 1 2 3\ndo\n\techo $N\ndone\n或\nfor N in 1 2 3; do echo $N; done\n或\nfor N in {1..3}; do echo $N; done\n```\n## 第二种：\n```bash\nfor ((i = 0; i <= 5; i++))\ndo\n\techo \"welcome $i times\"\ndone\n或\nfor ((i = 0; i <= 5; i++)); do echo \"welcome $i times\"; done\n```\n\n# while循环\n\n## 第一种\n```bash\nwhile expression\ndo\ncommand\n…\ndone\n```\n\n## 第二种\n```bash\ni=1\nwhile ((i<=3))\ndo\n  echo $i\n  let i++\ndone\n```\n# case语句\n\n格式\n```bash\ncase $1 in\nstart)\n\techo \"starting\"\n\t;;\nstop)\n\techo \"stoping\"\n\t;;\n*)\n\techo \"Usage: {start|stop} “\nesac\n\n```\n# read命令\nread -p(提示语句)-n(字符个数) -t(等待时间) \n\tread -p \"please input your name: \" NAME\n\n使用示例：\n```\n[vagrant@mysql1 ~]$ read -p \"please enter a number:\" numb\nplease enter a number:1\n[vagrant@mysql1 ~]$ echo $numb\n1\n[vagrant@mysql1 ~]$ \n```\n\n# if判断\n语法\n```bash\nif condition \nthen \n    statements\n[elif condition \n    then statements. ..] \n[else \n    statements ] \nfi\n\n```\n# 判断语句\n[ condition ] **(注意condition前后要有空格)**\n#非空返回true，可使用$?验证（0为true，>1为false）\n[ test ]\n\n#空返回false\n[  ]\n\n> [ condition ] && echo OK || echo notok\n\n条件满足，执行后面的语句 不满足执行 || 后面的语句\n\n# 常用判断条件\n* = 字符串比较\n* -lt 小于\n* -le 小于等于\n* -eq 等于\n* -gt 大于\n* -ge 大于等于\n* -ne 不等于\n\n* -r 有读的权限\n* -w 有写的权限\n* -x 有执行的权限\n* **-f 文件存在并且是一个常规的文件**\n* -s 文件存在且不为空\n* -d 文件存在并是一个目录\n* -b文件存在并且是一个块设备\n* -L 文件存在并且是一个链接\n\n# Shell自定义函数\n语法\n```bash\n [ function ] funname [()]\n{\n    action;\n    [return int;]\n}\n\n```\n三种声明方式:\n* function start()  \n* function start \n* start()\n\n注意\n1. 必须在调用函数地方之前，先声明函数，shell脚本是逐行运行。不会像其它语言一样先预编译\n2. 函数返回值，只能通过$? 系统变量获得，可以显示加：return 返回，如果不加，将以最后一条命令运行结果，作为返回值。 return后跟数值n(0-255)\n\n## 例子\n```bash\n#!/bin/bash\nfSum 3 2;\nfunction fSum()\n{\n    echo $1,$2;\n    return $(($1+$2));\n}\nfSum 5 7;\ntotal=$?;\necho $total,$?;\n\n```\n结果\n```\n[vagrant@mysql1 ~]$ sh test \ntest: line 2: fSum: command not found\n5,7\n12,0\n\n```\n# 脚本调试\n* sh -vx helloWorld.sh\n* 或者在脚本中增加set -x\n\n# cut命令\ncut命令可以从一个文本文件或者文本流中提取文本列。\n\n## 语法\n```\ncut -d'分隔字符' -f fields <==用于有特定分隔字符\ncut -c 字符区间            <==用于排列整齐的信息\n\n```\n* -d  ：后面接分隔字符。与 -f 一起使用；\n* -f  ：依据 -d 的分隔字符将一段信息分割成为数段，用 -f 取出第几段的意思；\n* -c  ：以字符 (characters) 的单位取出固定字符区间；\n\n## 例子\n### PATH 变量如下\n\n```\n[root@www ~]# echo $PATH\n/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/X11R6/bin:/usr/games\n# 1 | 2       | 3   | 4       | 5            | 6            | 7\n\n```\n### 将 PATH 变量取出，我要找出第五个路径。\n\n```\n#echo $PATH | cut -d ':' -f 5\n/usr/local/bin\n\n```\n### 将 PATH 变量取出，我要找出第三和第五个路径。\n\n```\n#echo $PATH | cut -d ':' -f 3,5\n/sbin:/usr/local/bin\n\n```\n### 将 PATH 变量取出，我要找出第三到最后一个路径。\n\n```\necho $PATH | cut -d ':' -f 3-\n/sbin:/usr/sbin:/usr/local/bin:/usr/X11R6/bin:/usr/games\n\n```\n\n### 将 PATH 变量取出，我要找出第一到第三个路径。\n\n```\n#echo $PATH | cut -d ':' -f 1-3\n/bin:/usr/bin:/sbin:\n\n```\n### 将 PATH 变量取出，我要找出第一到第三，还有第五个路径。\n\n```\necho $PATH | cut -d ':' -f 1-3,5\n/bin:/usr/bin:/sbin:/usr/local/bin\n```\n\n## 实用例子:只显示/etc/passwd的用户和shell\n\n```\n#cat /etc/passwd | cut -d ':' -f 1,7 \nroot:/bin/bash\ndaemon:/bin/sh\nbin:/bin/sh\n```\n\n# sort命令\nsort 命令对 File 参数指定的文件中的行排序，并将结果写到标准输出。如果 File 参数指定多个文件，那么 sort 命令将这些文件连接起来，并当作一个文件进行排序。\n## 语法\n`[root@www ~]# sort [-fbMnrtuk] [file or stdin]`\n选项与参数：\n* -f  ：忽略大小写的差异，例如 A 与 a 视为编码相同；\n* -b  ：忽略最前面的空格符部分；\n* -M  ：以月份的名字来排序，例如 JAN, DEC 等等的排序方法；\n* -n  ：使用『纯数字』进行排序(默认是以文字型态来排序的)；\n* -r  ：反向排序；\n* -u  ：就是 uniq ，相同的数据中，仅出现一行代表；\n* -t  ：分隔符，默认是用 [tab] 键来分隔；\n* -k  ：以那个区间 (field) 来进行排序的意思\n\n## 对/etc/passwd 的账号进行排序\n```bash\n[root@www ~]# cat /etc/passwd | sort\nadm:x:3:4:adm:/var/adm:/sbin/nologin\napache:x:48:48:Apache:/var/www:/sbin/nologin\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\n\n```\nsort 是默认以第一个数据来排序，而且默认是以字符串形式来排序,所以由字母 a 开始升序排序。\n## /etc/passwd 内容是以 : 来分隔的，我想以第三栏来排序，该如何\n\n```\n[root@www ~]# cat /etc/passwd | sort -t ':' -k 3\nroot:x:0:0:root:/root:/bin/bash\nuucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin\noperator:x:11:0:operator:/root:/sbin/nologin\nbin:x:1:1:bin:/bin:/sbin/nologin\ngames:x:12:100:games:/usr/games:/sbin/nologin\n\n```\n## 默认是以字符串来排序的，如果想要使用数字排序：\n```\ncat /etc/passwd | sort -t ':' -k 3n\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/bin/sh\nbin:x:2:2:bin:/bin:/bin/sh\n\n```\n## 默认是升序排序，如果要倒序排序，如下\n\n```\ncat /etc/passwd | sort -t ':' -k 3nr\nnobody:x:65534:65534:nobody:/nonexistent:/bin/sh\nntp:x:106:113::/home/ntp:/bin/false\nmessagebus:x:105:109::/var/run/dbus:/bin/false\nsshd:x:104:65534::/var/run/sshd:/usr/sbin/nologin\n\n```\n## 如果要对/etc/passwd,先以第六个域的第2个字符到第4个字符进行正向排序，再基于第一个域进行反向排序。\n\n```\ncat /etc/passwd |  sort -t':' -k 6.2,6.4 -k 1r      \nsync:x:4:65534:sync:/bin:/bin/sync\nproxy:x:13:13:proxy:/bin:/bin/sh\nbin:x:2:2:bin:/bin:/bin/sh\nsys:x:3:3:sys:/dev:/bin/sh\n\n```\n## 查看/etc/passwd有多少个shell:对/etc/passwd的第七个域进行排序，然后去重:\n```\ncat /etc/passwd |  sort -t':' -k 7 -u\nroot:x:0:0:root:/root:/bin/bash\nsyslog:x:101:102::/home/syslog:/bin/false\ndaemon:x:1:1:daemon:/usr/sbin:/bin/sh\nsync:x:4:65534:sync:/bin:/bin/sync\nsshd:x:104:65534::/var/run/sshd:/usr/sbin/nologin\n```\n# uniq去重命令\n uniq命令可以去除排序过的文件中的重复行，因此uniq经常和sort合用。也就是说，为了使uniq起作用，所有的重复行必须是相邻的。\n\n## uniq语法\n`[root@www ~]# uniq [-icu]`\n选项与参数：\n* -i   ：忽略大小写字符的不同；\n* -c  ：进行计数\n* -u  ：只显示唯一的行\n\ntestfile的内容如下\n```\ncat testfile\nhello\nworld\nfriend\nhello\nworld\nhello\n```\n直接删除未经排序的文件，将会发现没有任何行被删除\n```\n#uniq testfile  \nhello\nworld\nfriend\nhello\nworld\nhello\n```\n排序文件，默认是去重\n```\n#cat testfile | sort |uniq\nfriend\nhello\nworld\n```\n排序之后删除了重复行，同时在行首位置输出该行重复的次数\n```\n#sort testfile | uniq -c\n1 friend\n3 hello\n2 world\n```\n仅显示存在重复的行，并在行首显示该行重复的次数\n```\n#sort testfile | uniq -dc\n3 hello\n2 world\n```\n仅显示不重复的行\n```\nsort testfile | uniq -u\nfriend  \n```\n\n\n# wc命令\n## 语法\n`[root@www ~]# wc [-lwm]`\n选项与参数：\n* -l  ：仅列出行；\n* -w  ：仅列出多少字(英文单字)；\n* -m  ：多少字符；\n## 默认使用wc统计/etc/passwd\n\n```\n#wc /etc/passwd\n40   45 1719 /etc/passwd\n40是行数，45是单词数，1719是字节数\n\n```\nwc的命令比较简单使用，每个参数使用如下：\n \n```\n#wc -l /etc/passwd   #统计行数，在对记录数时，很常用\n40 /etc/passwd       #表示系统有40个账户\n\n#wc -w /etc/passwd  #统计单词出现次数\n45 /etc/passwd\n\n#wc -m /etc/passwd  #统计文件的字符数\n1719\n\n```\n\n\n\n\n\n\n\n\n","source":"_posts/大数据02-03 shell编程语法讲解.md","raw":"---\ntitle: 大数据02-03 shell编程语法讲解\ncategories: 学习\ntags:\n  - 大数据\n  - linux\n  - centos7\n  - linux命令\ntoc: true\ndate: 2017-11-06 23:02:36\nscaffolds:\n---\n\n# 变量\n## 系统变量\n* $HOME\n* $PWD\n* $SHELL\n* $USER\n显示当前shell中所有变量\n```\nset\n`````\n\n## 用户自定义变量\n定义变量\n> STR=\"hello world\"\n\n> A=9\n\n> unset A 撤销变量 A\n\n> readonly B=2 声明静态的变量 B=2 ，不能 unset\n\n> export 变量名 可把变量提升为全局环境变量，可供其他shell程序使用\n\n将命令的返回值赋给变量\n\n<!-- more -->\n\n```\nA=`ls -la` 反引号，运行里面的命令，并把结果返回给变量A\nA=$(ls -la) 等价于反引号\n```\n## shell中的特殊变量\n* $? 表示上一个命令退出的状态  true 0 false 1 错误127\n* $$ 表示当前进程编号\n* $0 表示当前脚本名称\n* $n 表示n位置的输入参数（n代表数字，n>=1）\n* $# \t表示参数的个数，常用于循环\n* $*和$@ 都表示参数列表 \n### $*与$@区别\n* $* 和 $@ 都表示传递给函数或脚本的所有参数，不被双引号\" \"包含时，都以$1  $2  … $n 的形式输出所有参数  \n* 当它们被双引号\" \"包含时，\"$*\" 会将所有的参数作为一个整体，以\"$1 $2 … $n\"的形式输出所有参数；\"$@\" 会将各个参数分开，以\"$1\" \"$2\" … \"$n\" 的形式输出所有参数\n\n## 运算符\n> 格式 :expr m + n 或$((m+n)) 注意expr运算符间要有空格\n\n例如计算（2 ＋3 ）×4 的值\n1 .分步计算\u000b\tS=`expr 2 + 3`\u000b\texpr $S \\* 4\n2.一步完成计算\n```bash\n\texpr `expr 2 + 3 ` \\* 4\n\techo `expr \\`expr 2 + 3\\` \\* 4`\n\t或\n\t$(((2+3)*4))\n```\n# for循环\n\n## 第一种：\n```bash\nfor N in 1 2 3\ndo\n\techo $N\ndone\n或\nfor N in 1 2 3; do echo $N; done\n或\nfor N in {1..3}; do echo $N; done\n```\n## 第二种：\n```bash\nfor ((i = 0; i <= 5; i++))\ndo\n\techo \"welcome $i times\"\ndone\n或\nfor ((i = 0; i <= 5; i++)); do echo \"welcome $i times\"; done\n```\n\n# while循环\n\n## 第一种\n```bash\nwhile expression\ndo\ncommand\n…\ndone\n```\n\n## 第二种\n```bash\ni=1\nwhile ((i<=3))\ndo\n  echo $i\n  let i++\ndone\n```\n# case语句\n\n格式\n```bash\ncase $1 in\nstart)\n\techo \"starting\"\n\t;;\nstop)\n\techo \"stoping\"\n\t;;\n*)\n\techo \"Usage: {start|stop} “\nesac\n\n```\n# read命令\nread -p(提示语句)-n(字符个数) -t(等待时间) \n\tread -p \"please input your name: \" NAME\n\n使用示例：\n```\n[vagrant@mysql1 ~]$ read -p \"please enter a number:\" numb\nplease enter a number:1\n[vagrant@mysql1 ~]$ echo $numb\n1\n[vagrant@mysql1 ~]$ \n```\n\n# if判断\n语法\n```bash\nif condition \nthen \n    statements\n[elif condition \n    then statements. ..] \n[else \n    statements ] \nfi\n\n```\n# 判断语句\n[ condition ] **(注意condition前后要有空格)**\n#非空返回true，可使用$?验证（0为true，>1为false）\n[ test ]\n\n#空返回false\n[  ]\n\n> [ condition ] && echo OK || echo notok\n\n条件满足，执行后面的语句 不满足执行 || 后面的语句\n\n# 常用判断条件\n* = 字符串比较\n* -lt 小于\n* -le 小于等于\n* -eq 等于\n* -gt 大于\n* -ge 大于等于\n* -ne 不等于\n\n* -r 有读的权限\n* -w 有写的权限\n* -x 有执行的权限\n* **-f 文件存在并且是一个常规的文件**\n* -s 文件存在且不为空\n* -d 文件存在并是一个目录\n* -b文件存在并且是一个块设备\n* -L 文件存在并且是一个链接\n\n# Shell自定义函数\n语法\n```bash\n [ function ] funname [()]\n{\n    action;\n    [return int;]\n}\n\n```\n三种声明方式:\n* function start()  \n* function start \n* start()\n\n注意\n1. 必须在调用函数地方之前，先声明函数，shell脚本是逐行运行。不会像其它语言一样先预编译\n2. 函数返回值，只能通过$? 系统变量获得，可以显示加：return 返回，如果不加，将以最后一条命令运行结果，作为返回值。 return后跟数值n(0-255)\n\n## 例子\n```bash\n#!/bin/bash\nfSum 3 2;\nfunction fSum()\n{\n    echo $1,$2;\n    return $(($1+$2));\n}\nfSum 5 7;\ntotal=$?;\necho $total,$?;\n\n```\n结果\n```\n[vagrant@mysql1 ~]$ sh test \ntest: line 2: fSum: command not found\n5,7\n12,0\n\n```\n# 脚本调试\n* sh -vx helloWorld.sh\n* 或者在脚本中增加set -x\n\n# cut命令\ncut命令可以从一个文本文件或者文本流中提取文本列。\n\n## 语法\n```\ncut -d'分隔字符' -f fields <==用于有特定分隔字符\ncut -c 字符区间            <==用于排列整齐的信息\n\n```\n* -d  ：后面接分隔字符。与 -f 一起使用；\n* -f  ：依据 -d 的分隔字符将一段信息分割成为数段，用 -f 取出第几段的意思；\n* -c  ：以字符 (characters) 的单位取出固定字符区间；\n\n## 例子\n### PATH 变量如下\n\n```\n[root@www ~]# echo $PATH\n/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/X11R6/bin:/usr/games\n# 1 | 2       | 3   | 4       | 5            | 6            | 7\n\n```\n### 将 PATH 变量取出，我要找出第五个路径。\n\n```\n#echo $PATH | cut -d ':' -f 5\n/usr/local/bin\n\n```\n### 将 PATH 变量取出，我要找出第三和第五个路径。\n\n```\n#echo $PATH | cut -d ':' -f 3,5\n/sbin:/usr/local/bin\n\n```\n### 将 PATH 变量取出，我要找出第三到最后一个路径。\n\n```\necho $PATH | cut -d ':' -f 3-\n/sbin:/usr/sbin:/usr/local/bin:/usr/X11R6/bin:/usr/games\n\n```\n\n### 将 PATH 变量取出，我要找出第一到第三个路径。\n\n```\n#echo $PATH | cut -d ':' -f 1-3\n/bin:/usr/bin:/sbin:\n\n```\n### 将 PATH 变量取出，我要找出第一到第三，还有第五个路径。\n\n```\necho $PATH | cut -d ':' -f 1-3,5\n/bin:/usr/bin:/sbin:/usr/local/bin\n```\n\n## 实用例子:只显示/etc/passwd的用户和shell\n\n```\n#cat /etc/passwd | cut -d ':' -f 1,7 \nroot:/bin/bash\ndaemon:/bin/sh\nbin:/bin/sh\n```\n\n# sort命令\nsort 命令对 File 参数指定的文件中的行排序，并将结果写到标准输出。如果 File 参数指定多个文件，那么 sort 命令将这些文件连接起来，并当作一个文件进行排序。\n## 语法\n`[root@www ~]# sort [-fbMnrtuk] [file or stdin]`\n选项与参数：\n* -f  ：忽略大小写的差异，例如 A 与 a 视为编码相同；\n* -b  ：忽略最前面的空格符部分；\n* -M  ：以月份的名字来排序，例如 JAN, DEC 等等的排序方法；\n* -n  ：使用『纯数字』进行排序(默认是以文字型态来排序的)；\n* -r  ：反向排序；\n* -u  ：就是 uniq ，相同的数据中，仅出现一行代表；\n* -t  ：分隔符，默认是用 [tab] 键来分隔；\n* -k  ：以那个区间 (field) 来进行排序的意思\n\n## 对/etc/passwd 的账号进行排序\n```bash\n[root@www ~]# cat /etc/passwd | sort\nadm:x:3:4:adm:/var/adm:/sbin/nologin\napache:x:48:48:Apache:/var/www:/sbin/nologin\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\n\n```\nsort 是默认以第一个数据来排序，而且默认是以字符串形式来排序,所以由字母 a 开始升序排序。\n## /etc/passwd 内容是以 : 来分隔的，我想以第三栏来排序，该如何\n\n```\n[root@www ~]# cat /etc/passwd | sort -t ':' -k 3\nroot:x:0:0:root:/root:/bin/bash\nuucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin\noperator:x:11:0:operator:/root:/sbin/nologin\nbin:x:1:1:bin:/bin:/sbin/nologin\ngames:x:12:100:games:/usr/games:/sbin/nologin\n\n```\n## 默认是以字符串来排序的，如果想要使用数字排序：\n```\ncat /etc/passwd | sort -t ':' -k 3n\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/bin/sh\nbin:x:2:2:bin:/bin:/bin/sh\n\n```\n## 默认是升序排序，如果要倒序排序，如下\n\n```\ncat /etc/passwd | sort -t ':' -k 3nr\nnobody:x:65534:65534:nobody:/nonexistent:/bin/sh\nntp:x:106:113::/home/ntp:/bin/false\nmessagebus:x:105:109::/var/run/dbus:/bin/false\nsshd:x:104:65534::/var/run/sshd:/usr/sbin/nologin\n\n```\n## 如果要对/etc/passwd,先以第六个域的第2个字符到第4个字符进行正向排序，再基于第一个域进行反向排序。\n\n```\ncat /etc/passwd |  sort -t':' -k 6.2,6.4 -k 1r      \nsync:x:4:65534:sync:/bin:/bin/sync\nproxy:x:13:13:proxy:/bin:/bin/sh\nbin:x:2:2:bin:/bin:/bin/sh\nsys:x:3:3:sys:/dev:/bin/sh\n\n```\n## 查看/etc/passwd有多少个shell:对/etc/passwd的第七个域进行排序，然后去重:\n```\ncat /etc/passwd |  sort -t':' -k 7 -u\nroot:x:0:0:root:/root:/bin/bash\nsyslog:x:101:102::/home/syslog:/bin/false\ndaemon:x:1:1:daemon:/usr/sbin:/bin/sh\nsync:x:4:65534:sync:/bin:/bin/sync\nsshd:x:104:65534::/var/run/sshd:/usr/sbin/nologin\n```\n# uniq去重命令\n uniq命令可以去除排序过的文件中的重复行，因此uniq经常和sort合用。也就是说，为了使uniq起作用，所有的重复行必须是相邻的。\n\n## uniq语法\n`[root@www ~]# uniq [-icu]`\n选项与参数：\n* -i   ：忽略大小写字符的不同；\n* -c  ：进行计数\n* -u  ：只显示唯一的行\n\ntestfile的内容如下\n```\ncat testfile\nhello\nworld\nfriend\nhello\nworld\nhello\n```\n直接删除未经排序的文件，将会发现没有任何行被删除\n```\n#uniq testfile  \nhello\nworld\nfriend\nhello\nworld\nhello\n```\n排序文件，默认是去重\n```\n#cat testfile | sort |uniq\nfriend\nhello\nworld\n```\n排序之后删除了重复行，同时在行首位置输出该行重复的次数\n```\n#sort testfile | uniq -c\n1 friend\n3 hello\n2 world\n```\n仅显示存在重复的行，并在行首显示该行重复的次数\n```\n#sort testfile | uniq -dc\n3 hello\n2 world\n```\n仅显示不重复的行\n```\nsort testfile | uniq -u\nfriend  \n```\n\n\n# wc命令\n## 语法\n`[root@www ~]# wc [-lwm]`\n选项与参数：\n* -l  ：仅列出行；\n* -w  ：仅列出多少字(英文单字)；\n* -m  ：多少字符；\n## 默认使用wc统计/etc/passwd\n\n```\n#wc /etc/passwd\n40   45 1719 /etc/passwd\n40是行数，45是单词数，1719是字节数\n\n```\nwc的命令比较简单使用，每个参数使用如下：\n \n```\n#wc -l /etc/passwd   #统计行数，在对记录数时，很常用\n40 /etc/passwd       #表示系统有40个账户\n\n#wc -w /etc/passwd  #统计单词出现次数\n45 /etc/passwd\n\n#wc -m /etc/passwd  #统计文件的字符数\n1719\n\n```\n\n\n\n\n\n\n\n\n","slug":"大数据02-03 shell编程语法讲解","published":1,"updated":"2017-11-06T16:13:49.837Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9wugozx000nh4v7x5zmcrd0","content":"<h1 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h1><h2 id=\"系统变量\"><a href=\"#系统变量\" class=\"headerlink\" title=\"系统变量\"></a>系统变量</h2><ul>\n<li>$HOME</li>\n<li>$PWD</li>\n<li>$SHELL</li>\n<li>$USER<br>显示当前shell中所有变量<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">set</div><div class=\"line\">``</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"用户自定义变量\"><a href=\"#用户自定义变量\" class=\"headerlink\" title=\"用户自定义变量\"></a>用户自定义变量</h2><p>定义变量</p>\n<blockquote>\n<p>STR=”hello world”</p>\n<p>A=9</p>\n<p>unset A 撤销变量 A</p>\n<p>readonly B=2 声明静态的变量 B=2 ，不能 unset</p>\n<p>export 变量名 可把变量提升为全局环境变量，可供其他shell程序使用</p>\n</blockquote>\n<p>将命令的返回值赋给变量</p>\n<a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">A=`ls -la` 反引号，运行里面的命令，并把结果返回给变量A</div><div class=\"line\">A=$(ls -la) 等价于反引号</div></pre></td></tr></table></figure>\n<h2 id=\"shell中的特殊变量\"><a href=\"#shell中的特殊变量\" class=\"headerlink\" title=\"shell中的特殊变量\"></a>shell中的特殊变量</h2><ul>\n<li>$? 表示上一个命令退出的状态  true 0 false 1 错误127</li>\n<li>$$ 表示当前进程编号</li>\n<li>$0 表示当前脚本名称</li>\n<li>$n 表示n位置的输入参数（n代表数字，n&gt;=1）</li>\n<li>$#     表示参数的个数，常用于循环</li>\n<li>$*和$@ 都表示参数列表 <h3 id=\"与-区别\"><a href=\"#与-区别\" class=\"headerlink\" title=\"$*与$@区别\"></a>$*与$@区别</h3></li>\n<li>$* 和 $@ 都表示传递给函数或脚本的所有参数，不被双引号” “包含时，都以$1  $2  … $n 的形式输出所有参数  </li>\n<li>当它们被双引号” “包含时，”$*” 会将所有的参数作为一个整体，以”$1 $2 … $n”的形式输出所有参数；”$@” 会将各个参数分开，以”$1” “$2” … “$n” 的形式输出所有参数</li>\n</ul>\n<h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h2><blockquote>\n<p>格式 :expr m + n 或$((m+n)) 注意expr运算符间要有空格</p>\n</blockquote>\n<p>例如计算（2 ＋3 ）×4 的值<br>1 .分步计算\u000b    S=<code>expr 2 + 3</code>\u000b    expr $S * 4<br>2.一步完成计算<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">expr `expr 2 + 3 ` \\* 4</div><div class=\"line\"><span class=\"built_in\">echo</span> `expr \\`expr 2 + 3\\` \\* 4`</div><div class=\"line\">或</div><div class=\"line\">$(((2+3)*4))</div></pre></td></tr></table></figure></p>\n<h1 id=\"for循环\"><a href=\"#for循环\" class=\"headerlink\" title=\"for循环\"></a>for循环</h1><h2 id=\"第一种：\"><a href=\"#第一种：\" class=\"headerlink\" title=\"第一种：\"></a>第一种：</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> N <span class=\"keyword\">in</span> 1 2 3</div><div class=\"line\"><span class=\"keyword\">do</span></div><div class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"variable\">$N</span></div><div class=\"line\"><span class=\"keyword\">done</span></div><div class=\"line\">或</div><div class=\"line\"><span class=\"keyword\">for</span> N <span class=\"keyword\">in</span> 1 2 3; <span class=\"keyword\">do</span> <span class=\"built_in\">echo</span> <span class=\"variable\">$N</span>; <span class=\"keyword\">done</span></div><div class=\"line\">或</div><div class=\"line\"><span class=\"keyword\">for</span> N <span class=\"keyword\">in</span> &#123;1..3&#125;; <span class=\"keyword\">do</span> <span class=\"built_in\">echo</span> <span class=\"variable\">$N</span>; <span class=\"keyword\">done</span></div></pre></td></tr></table></figure>\n<h2 id=\"第二种：\"><a href=\"#第二种：\" class=\"headerlink\" title=\"第二种：\"></a>第二种：</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> ((i = 0; i &lt;= 5; i++))</div><div class=\"line\"><span class=\"keyword\">do</span></div><div class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"welcome <span class=\"variable\">$i</span> times\"</span></div><div class=\"line\"><span class=\"keyword\">done</span></div><div class=\"line\">或</div><div class=\"line\"><span class=\"keyword\">for</span> ((i = 0; i &lt;= 5; i++)); <span class=\"keyword\">do</span> <span class=\"built_in\">echo</span> <span class=\"string\">\"welcome <span class=\"variable\">$i</span> times\"</span>; <span class=\"keyword\">done</span></div></pre></td></tr></table></figure>\n<h1 id=\"while循环\"><a href=\"#while循环\" class=\"headerlink\" title=\"while循环\"></a>while循环</h1><h2 id=\"第一种\"><a href=\"#第一种\" class=\"headerlink\" title=\"第一种\"></a>第一种</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">while</span> expression</div><div class=\"line\"><span class=\"keyword\">do</span></div><div class=\"line\"><span class=\"built_in\">command</span></div><div class=\"line\">…</div><div class=\"line\"><span class=\"keyword\">done</span></div></pre></td></tr></table></figure>\n<h2 id=\"第二种\"><a href=\"#第二种\" class=\"headerlink\" title=\"第二种\"></a>第二种</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">i=1</div><div class=\"line\"><span class=\"keyword\">while</span> ((i&lt;=3))</div><div class=\"line\"><span class=\"keyword\">do</span></div><div class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"variable\">$i</span></div><div class=\"line\">  <span class=\"built_in\">let</span> i++</div><div class=\"line\"><span class=\"keyword\">done</span></div></pre></td></tr></table></figure>\n<h1 id=\"case语句\"><a href=\"#case语句\" class=\"headerlink\" title=\"case语句\"></a>case语句</h1><p>格式<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">case</span> <span class=\"variable\">$1</span> <span class=\"keyword\">in</span></div><div class=\"line\">start)</div><div class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"starting\"</span></div><div class=\"line\">\t;;</div><div class=\"line\">stop)</div><div class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"stoping\"</span></div><div class=\"line\">\t;;</div><div class=\"line\">*)</div><div class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"Usage: &#123;start|stop&#125; “</span></div><div class=\"line\"><span class=\"string\">esac</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"read命令\"><a href=\"#read命令\" class=\"headerlink\" title=\"read命令\"></a>read命令</h1><p>read -p(提示语句)-n(字符个数) -t(等待时间)<br>    read -p “please input your name: “ NAME</p>\n<p>使用示例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">[vagrant@mysql1 ~]$ read -p &quot;please enter a number:&quot; numb</div><div class=\"line\">please enter a number:1</div><div class=\"line\">[vagrant@mysql1 ~]$ echo $numb</div><div class=\"line\">1</div><div class=\"line\">[vagrant@mysql1 ~]$</div></pre></td></tr></table></figure></p>\n<h1 id=\"if判断\"><a href=\"#if判断\" class=\"headerlink\" title=\"if判断\"></a>if判断</h1><p>语法<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> condition </div><div class=\"line\"><span class=\"keyword\">then</span> </div><div class=\"line\">    statements</div><div class=\"line\">[<span class=\"keyword\">elif</span> condition </div><div class=\"line\">    <span class=\"keyword\">then</span> statements. ..] </div><div class=\"line\">[<span class=\"keyword\">else</span> </div><div class=\"line\">    statements ] </div><div class=\"line\"><span class=\"keyword\">fi</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"判断语句\"><a href=\"#判断语句\" class=\"headerlink\" title=\"判断语句\"></a>判断语句</h1><p>[ condition ] <strong>(注意condition前后要有空格)</strong></p>\n<p>#非空返回true，可使用$?验证（0为true，&gt;1为false）<br>[ test ]</p>\n<p>#空返回false<br>[  ]</p>\n<blockquote>\n<p>[ condition ] &amp;&amp; echo OK || echo notok</p>\n</blockquote>\n<p>条件满足，执行后面的语句 不满足执行 || 后面的语句</p>\n<h1 id=\"常用判断条件\"><a href=\"#常用判断条件\" class=\"headerlink\" title=\"常用判断条件\"></a>常用判断条件</h1><ul>\n<li>= 字符串比较</li>\n<li>-lt 小于</li>\n<li>-le 小于等于</li>\n<li>-eq 等于</li>\n<li>-gt 大于</li>\n<li>-ge 大于等于</li>\n<li><p>-ne 不等于</p>\n</li>\n<li><p>-r 有读的权限</p>\n</li>\n<li>-w 有写的权限</li>\n<li>-x 有执行的权限</li>\n<li><strong>-f 文件存在并且是一个常规的文件</strong></li>\n<li>-s 文件存在且不为空</li>\n<li>-d 文件存在并是一个目录</li>\n<li>-b文件存在并且是一个块设备</li>\n<li>-L 文件存在并且是一个链接</li>\n</ul>\n<h1 id=\"Shell自定义函数\"><a href=\"#Shell自定义函数\" class=\"headerlink\" title=\"Shell自定义函数\"></a>Shell自定义函数</h1><p>语法<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"> [ <span class=\"keyword\">function</span> ] funname [()]</div><div class=\"line\">&#123;</div><div class=\"line\">    action;</div><div class=\"line\">    [<span class=\"built_in\">return</span> int;]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>三种声明方式:</p>\n<ul>\n<li>function start()  </li>\n<li>function start </li>\n<li>start()</li>\n</ul>\n<p>注意</p>\n<ol>\n<li>必须在调用函数地方之前，先声明函数，shell脚本是逐行运行。不会像其它语言一样先预编译</li>\n<li>函数返回值，只能通过$? 系统变量获得，可以显示加：return 返回，如果不加，将以最后一条命令运行结果，作为返回值。 return后跟数值n(0-255)</li>\n</ol>\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\">fSum 3 2;</div><div class=\"line\"><span class=\"keyword\">function</span> fSum()</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$1</span>,<span class=\"variable\">$2</span>;</div><div class=\"line\">    <span class=\"built_in\">return</span> $((<span class=\"variable\">$1</span>+<span class=\"variable\">$2</span>));</div><div class=\"line\">&#125;</div><div class=\"line\">fSum 5 7;</div><div class=\"line\">total=$?;</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$total</span>,$?;</div></pre></td></tr></table></figure>\n<p>结果<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[vagrant@mysql1 ~]$ sh test </div><div class=\"line\">test: line 2: fSum: command not found</div><div class=\"line\">5,7</div><div class=\"line\">12,0</div></pre></td></tr></table></figure></p>\n<h1 id=\"脚本调试\"><a href=\"#脚本调试\" class=\"headerlink\" title=\"脚本调试\"></a>脚本调试</h1><ul>\n<li>sh -vx helloWorld.sh</li>\n<li>或者在脚本中增加set -x</li>\n</ul>\n<h1 id=\"cut命令\"><a href=\"#cut命令\" class=\"headerlink\" title=\"cut命令\"></a>cut命令</h1><p>cut命令可以从一个文本文件或者文本流中提取文本列。</p>\n<h2 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cut -d&apos;分隔字符&apos; -f fields &lt;==用于有特定分隔字符</div><div class=\"line\">cut -c 字符区间            &lt;==用于排列整齐的信息</div></pre></td></tr></table></figure>\n<ul>\n<li>-d  ：后面接分隔字符。与 -f 一起使用；</li>\n<li>-f  ：依据 -d 的分隔字符将一段信息分割成为数段，用 -f 取出第几段的意思；</li>\n<li>-c  ：以字符 (characters) 的单位取出固定字符区间；</li>\n</ul>\n<h2 id=\"例子-1\"><a href=\"#例子-1\" class=\"headerlink\" title=\"例子\"></a>例子</h2><h3 id=\"PATH-变量如下\"><a href=\"#PATH-变量如下\" class=\"headerlink\" title=\"PATH 变量如下\"></a>PATH 变量如下</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@www ~]# echo $PATH</div><div class=\"line\">/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/X11R6/bin:/usr/games</div><div class=\"line\"># 1 | 2       | 3   | 4       | 5            | 6            | 7</div></pre></td></tr></table></figure>\n<h3 id=\"将-PATH-变量取出，我要找出第五个路径。\"><a href=\"#将-PATH-变量取出，我要找出第五个路径。\" class=\"headerlink\" title=\"将 PATH 变量取出，我要找出第五个路径。\"></a>将 PATH 变量取出，我要找出第五个路径。</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">#echo $PATH | cut -d &apos;:&apos; -f 5</div><div class=\"line\">/usr/local/bin</div></pre></td></tr></table></figure>\n<h3 id=\"将-PATH-变量取出，我要找出第三和第五个路径。\"><a href=\"#将-PATH-变量取出，我要找出第三和第五个路径。\" class=\"headerlink\" title=\"将 PATH 变量取出，我要找出第三和第五个路径。\"></a>将 PATH 变量取出，我要找出第三和第五个路径。</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">#echo $PATH | cut -d &apos;:&apos; -f 3,5</div><div class=\"line\">/sbin:/usr/local/bin</div></pre></td></tr></table></figure>\n<h3 id=\"将-PATH-变量取出，我要找出第三到最后一个路径。\"><a href=\"#将-PATH-变量取出，我要找出第三到最后一个路径。\" class=\"headerlink\" title=\"将 PATH 变量取出，我要找出第三到最后一个路径。\"></a>将 PATH 变量取出，我要找出第三到最后一个路径。</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">echo $PATH | cut -d &apos;:&apos; -f 3-</div><div class=\"line\">/sbin:/usr/sbin:/usr/local/bin:/usr/X11R6/bin:/usr/games</div></pre></td></tr></table></figure>\n<h3 id=\"将-PATH-变量取出，我要找出第一到第三个路径。\"><a href=\"#将-PATH-变量取出，我要找出第一到第三个路径。\" class=\"headerlink\" title=\"将 PATH 变量取出，我要找出第一到第三个路径。\"></a>将 PATH 变量取出，我要找出第一到第三个路径。</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">#echo $PATH | cut -d &apos;:&apos; -f 1-3</div><div class=\"line\">/bin:/usr/bin:/sbin:</div></pre></td></tr></table></figure>\n<h3 id=\"将-PATH-变量取出，我要找出第一到第三，还有第五个路径。\"><a href=\"#将-PATH-变量取出，我要找出第一到第三，还有第五个路径。\" class=\"headerlink\" title=\"将 PATH 变量取出，我要找出第一到第三，还有第五个路径。\"></a>将 PATH 变量取出，我要找出第一到第三，还有第五个路径。</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">echo $PATH | cut -d &apos;:&apos; -f 1-3,5</div><div class=\"line\">/bin:/usr/bin:/sbin:/usr/local/bin</div></pre></td></tr></table></figure>\n<h2 id=\"实用例子-只显示-etc-passwd的用户和shell\"><a href=\"#实用例子-只显示-etc-passwd的用户和shell\" class=\"headerlink\" title=\"实用例子:只显示/etc/passwd的用户和shell\"></a>实用例子:只显示/etc/passwd的用户和shell</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">#cat /etc/passwd | cut -d &apos;:&apos; -f 1,7 </div><div class=\"line\">root:/bin/bash</div><div class=\"line\">daemon:/bin/sh</div><div class=\"line\">bin:/bin/sh</div></pre></td></tr></table></figure>\n<h1 id=\"sort命令\"><a href=\"#sort命令\" class=\"headerlink\" title=\"sort命令\"></a>sort命令</h1><p>sort 命令对 File 参数指定的文件中的行排序，并将结果写到标准输出。如果 File 参数指定多个文件，那么 sort 命令将这些文件连接起来，并当作一个文件进行排序。</p>\n<h2 id=\"语法-1\"><a href=\"#语法-1\" class=\"headerlink\" title=\"语法\"></a>语法</h2><p><code>[root@www ~]# sort [-fbMnrtuk] [file or stdin]</code><br>选项与参数：</p>\n<ul>\n<li>-f  ：忽略大小写的差异，例如 A 与 a 视为编码相同；</li>\n<li>-b  ：忽略最前面的空格符部分；</li>\n<li>-M  ：以月份的名字来排序，例如 JAN, DEC 等等的排序方法；</li>\n<li>-n  ：使用『纯数字』进行排序(默认是以文字型态来排序的)；</li>\n<li>-r  ：反向排序；</li>\n<li>-u  ：就是 uniq ，相同的数据中，仅出现一行代表；</li>\n<li>-t  ：分隔符，默认是用 [tab] 键来分隔；</li>\n<li>-k  ：以那个区间 (field) 来进行排序的意思</li>\n</ul>\n<h2 id=\"对-etc-passwd-的账号进行排序\"><a href=\"#对-etc-passwd-的账号进行排序\" class=\"headerlink\" title=\"对/etc/passwd 的账号进行排序\"></a>对/etc/passwd 的账号进行排序</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@www ~]<span class=\"comment\"># cat /etc/passwd | sort</span></div><div class=\"line\">adm:x:3:4:adm:/var/adm:/sbin/nologin</div><div class=\"line\">apache:x:48:48:Apache:/var/www:/sbin/nologin</div><div class=\"line\">bin:x:1:1:bin:/bin:/sbin/nologin</div><div class=\"line\">daemon:x:2:2:daemon:/sbin:/sbin/nologin</div></pre></td></tr></table></figure>\n<p>sort 是默认以第一个数据来排序，而且默认是以字符串形式来排序,所以由字母 a 开始升序排序。</p>\n<h2 id=\"etc-passwd-内容是以-来分隔的，我想以第三栏来排序，该如何\"><a href=\"#etc-passwd-内容是以-来分隔的，我想以第三栏来排序，该如何\" class=\"headerlink\" title=\"/etc/passwd 内容是以 : 来分隔的，我想以第三栏来排序，该如何\"></a>/etc/passwd 内容是以 : 来分隔的，我想以第三栏来排序，该如何</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@www ~]# cat /etc/passwd | sort -t &apos;:&apos; -k 3</div><div class=\"line\">root:x:0:0:root:/root:/bin/bash</div><div class=\"line\">uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin</div><div class=\"line\">operator:x:11:0:operator:/root:/sbin/nologin</div><div class=\"line\">bin:x:1:1:bin:/bin:/sbin/nologin</div><div class=\"line\">games:x:12:100:games:/usr/games:/sbin/nologin</div></pre></td></tr></table></figure>\n<h2 id=\"默认是以字符串来排序的，如果想要使用数字排序：\"><a href=\"#默认是以字符串来排序的，如果想要使用数字排序：\" class=\"headerlink\" title=\"默认是以字符串来排序的，如果想要使用数字排序：\"></a>默认是以字符串来排序的，如果想要使用数字排序：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat /etc/passwd | sort -t &apos;:&apos; -k 3n</div><div class=\"line\">root:x:0:0:root:/root:/bin/bash</div><div class=\"line\">daemon:x:1:1:daemon:/usr/sbin:/bin/sh</div><div class=\"line\">bin:x:2:2:bin:/bin:/bin/sh</div></pre></td></tr></table></figure>\n<h2 id=\"默认是升序排序，如果要倒序排序，如下\"><a href=\"#默认是升序排序，如果要倒序排序，如下\" class=\"headerlink\" title=\"默认是升序排序，如果要倒序排序，如下\"></a>默认是升序排序，如果要倒序排序，如下</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat /etc/passwd | sort -t &apos;:&apos; -k 3nr</div><div class=\"line\">nobody:x:65534:65534:nobody:/nonexistent:/bin/sh</div><div class=\"line\">ntp:x:106:113::/home/ntp:/bin/false</div><div class=\"line\">messagebus:x:105:109::/var/run/dbus:/bin/false</div><div class=\"line\">sshd:x:104:65534::/var/run/sshd:/usr/sbin/nologin</div></pre></td></tr></table></figure>\n<h2 id=\"如果要对-etc-passwd-先以第六个域的第2个字符到第4个字符进行正向排序，再基于第一个域进行反向排序。\"><a href=\"#如果要对-etc-passwd-先以第六个域的第2个字符到第4个字符进行正向排序，再基于第一个域进行反向排序。\" class=\"headerlink\" title=\"如果要对/etc/passwd,先以第六个域的第2个字符到第4个字符进行正向排序，再基于第一个域进行反向排序。\"></a>如果要对/etc/passwd,先以第六个域的第2个字符到第4个字符进行正向排序，再基于第一个域进行反向排序。</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat /etc/passwd |  sort -t&apos;:&apos; -k 6.2,6.4 -k 1r      </div><div class=\"line\">sync:x:4:65534:sync:/bin:/bin/sync</div><div class=\"line\">proxy:x:13:13:proxy:/bin:/bin/sh</div><div class=\"line\">bin:x:2:2:bin:/bin:/bin/sh</div><div class=\"line\">sys:x:3:3:sys:/dev:/bin/sh</div></pre></td></tr></table></figure>\n<h2 id=\"查看-etc-passwd有多少个shell-对-etc-passwd的第七个域进行排序，然后去重\"><a href=\"#查看-etc-passwd有多少个shell-对-etc-passwd的第七个域进行排序，然后去重\" class=\"headerlink\" title=\"查看/etc/passwd有多少个shell:对/etc/passwd的第七个域进行排序，然后去重:\"></a>查看/etc/passwd有多少个shell:对/etc/passwd的第七个域进行排序，然后去重:</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat /etc/passwd |  sort -t&apos;:&apos; -k 7 -u</div><div class=\"line\">root:x:0:0:root:/root:/bin/bash</div><div class=\"line\">syslog:x:101:102::/home/syslog:/bin/false</div><div class=\"line\">daemon:x:1:1:daemon:/usr/sbin:/bin/sh</div><div class=\"line\">sync:x:4:65534:sync:/bin:/bin/sync</div><div class=\"line\">sshd:x:104:65534::/var/run/sshd:/usr/sbin/nologin</div></pre></td></tr></table></figure>\n<h1 id=\"uniq去重命令\"><a href=\"#uniq去重命令\" class=\"headerlink\" title=\"uniq去重命令\"></a>uniq去重命令</h1><p> uniq命令可以去除排序过的文件中的重复行，因此uniq经常和sort合用。也就是说，为了使uniq起作用，所有的重复行必须是相邻的。</p>\n<h2 id=\"uniq语法\"><a href=\"#uniq语法\" class=\"headerlink\" title=\"uniq语法\"></a>uniq语法</h2><p><code>[root@www ~]# uniq [-icu]</code><br>选项与参数：</p>\n<ul>\n<li>-i   ：忽略大小写字符的不同；</li>\n<li>-c  ：进行计数</li>\n<li>-u  ：只显示唯一的行</li>\n</ul>\n<p>testfile的内容如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat testfile</div><div class=\"line\">hello</div><div class=\"line\">world</div><div class=\"line\">friend</div><div class=\"line\">hello</div><div class=\"line\">world</div><div class=\"line\">hello</div></pre></td></tr></table></figure></p>\n<p>直接删除未经排序的文件，将会发现没有任何行被删除<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">#uniq testfile  </div><div class=\"line\">hello</div><div class=\"line\">world</div><div class=\"line\">friend</div><div class=\"line\">hello</div><div class=\"line\">world</div><div class=\"line\">hello</div></pre></td></tr></table></figure></p>\n<p>排序文件，默认是去重<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">#cat testfile | sort |uniq</div><div class=\"line\">friend</div><div class=\"line\">hello</div><div class=\"line\">world</div></pre></td></tr></table></figure></p>\n<p>排序之后删除了重复行，同时在行首位置输出该行重复的次数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">#sort testfile | uniq -c</div><div class=\"line\">1 friend</div><div class=\"line\">3 hello</div><div class=\"line\">2 world</div></pre></td></tr></table></figure></p>\n<p>仅显示存在重复的行，并在行首显示该行重复的次数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#sort testfile | uniq -dc</div><div class=\"line\">3 hello</div><div class=\"line\">2 world</div></pre></td></tr></table></figure></p>\n<p>仅显示不重复的行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sort testfile | uniq -u</div><div class=\"line\">friend</div></pre></td></tr></table></figure></p>\n<h1 id=\"wc命令\"><a href=\"#wc命令\" class=\"headerlink\" title=\"wc命令\"></a>wc命令</h1><h2 id=\"语法-2\"><a href=\"#语法-2\" class=\"headerlink\" title=\"语法\"></a>语法</h2><p><code>[root@www ~]# wc [-lwm]</code><br>选项与参数：</p>\n<ul>\n<li>-l  ：仅列出行；</li>\n<li>-w  ：仅列出多少字(英文单字)；</li>\n<li>-m  ：多少字符；<h2 id=\"默认使用wc统计-etc-passwd\"><a href=\"#默认使用wc统计-etc-passwd\" class=\"headerlink\" title=\"默认使用wc统计/etc/passwd\"></a>默认使用wc统计/etc/passwd</h2></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#wc /etc/passwd</div><div class=\"line\">40   45 1719 /etc/passwd</div><div class=\"line\">40是行数，45是单词数，1719是字节数</div></pre></td></tr></table></figure>\n<p>wc的命令比较简单使用，每个参数使用如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">#wc -l /etc/passwd   #统计行数，在对记录数时，很常用</div><div class=\"line\">40 /etc/passwd       #表示系统有40个账户</div><div class=\"line\"></div><div class=\"line\">#wc -w /etc/passwd  #统计单词出现次数</div><div class=\"line\">45 /etc/passwd</div><div class=\"line\"></div><div class=\"line\">#wc -m /etc/passwd  #统计文件的字符数</div><div class=\"line\">1719</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h1 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h1><h2 id=\"系统变量\"><a href=\"#系统变量\" class=\"headerlink\" title=\"系统变量\"></a>系统变量</h2><ul>\n<li>$HOME</li>\n<li>$PWD</li>\n<li>$SHELL</li>\n<li>$USER<br>显示当前shell中所有变量<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">set</div><div class=\"line\">``</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"用户自定义变量\"><a href=\"#用户自定义变量\" class=\"headerlink\" title=\"用户自定义变量\"></a>用户自定义变量</h2><p>定义变量</p>\n<blockquote>\n<p>STR=”hello world”</p>\n<p>A=9</p>\n<p>unset A 撤销变量 A</p>\n<p>readonly B=2 声明静态的变量 B=2 ，不能 unset</p>\n<p>export 变量名 可把变量提升为全局环境变量，可供其他shell程序使用</p>\n</blockquote>\n<p>将命令的返回值赋给变量</p>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">A=`ls -la` 反引号，运行里面的命令，并把结果返回给变量A</div><div class=\"line\">A=$(ls -la) 等价于反引号</div></pre></td></tr></table></figure>\n<h2 id=\"shell中的特殊变量\"><a href=\"#shell中的特殊变量\" class=\"headerlink\" title=\"shell中的特殊变量\"></a>shell中的特殊变量</h2><ul>\n<li>$? 表示上一个命令退出的状态  true 0 false 1 错误127</li>\n<li>$$ 表示当前进程编号</li>\n<li>$0 表示当前脚本名称</li>\n<li>$n 表示n位置的输入参数（n代表数字，n&gt;=1）</li>\n<li>$#     表示参数的个数，常用于循环</li>\n<li>$*和$@ 都表示参数列表 <h3 id=\"与-区别\"><a href=\"#与-区别\" class=\"headerlink\" title=\"$*与$@区别\"></a>$*与$@区别</h3></li>\n<li>$* 和 $@ 都表示传递给函数或脚本的所有参数，不被双引号” “包含时，都以$1  $2  … $n 的形式输出所有参数  </li>\n<li>当它们被双引号” “包含时，”$*” 会将所有的参数作为一个整体，以”$1 $2 … $n”的形式输出所有参数；”$@” 会将各个参数分开，以”$1” “$2” … “$n” 的形式输出所有参数</li>\n</ul>\n<h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h2><blockquote>\n<p>格式 :expr m + n 或$((m+n)) 注意expr运算符间要有空格</p>\n</blockquote>\n<p>例如计算（2 ＋3 ）×4 的值<br>1 .分步计算\u000b    S=<code>expr 2 + 3</code>\u000b    expr $S * 4<br>2.一步完成计算<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">expr `expr 2 + 3 ` \\* 4</div><div class=\"line\"><span class=\"built_in\">echo</span> `expr \\`expr 2 + 3\\` \\* 4`</div><div class=\"line\">或</div><div class=\"line\">$(((2+3)*4))</div></pre></td></tr></table></figure></p>\n<h1 id=\"for循环\"><a href=\"#for循环\" class=\"headerlink\" title=\"for循环\"></a>for循环</h1><h2 id=\"第一种：\"><a href=\"#第一种：\" class=\"headerlink\" title=\"第一种：\"></a>第一种：</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> N <span class=\"keyword\">in</span> 1 2 3</div><div class=\"line\"><span class=\"keyword\">do</span></div><div class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"variable\">$N</span></div><div class=\"line\"><span class=\"keyword\">done</span></div><div class=\"line\">或</div><div class=\"line\"><span class=\"keyword\">for</span> N <span class=\"keyword\">in</span> 1 2 3; <span class=\"keyword\">do</span> <span class=\"built_in\">echo</span> <span class=\"variable\">$N</span>; <span class=\"keyword\">done</span></div><div class=\"line\">或</div><div class=\"line\"><span class=\"keyword\">for</span> N <span class=\"keyword\">in</span> &#123;1..3&#125;; <span class=\"keyword\">do</span> <span class=\"built_in\">echo</span> <span class=\"variable\">$N</span>; <span class=\"keyword\">done</span></div></pre></td></tr></table></figure>\n<h2 id=\"第二种：\"><a href=\"#第二种：\" class=\"headerlink\" title=\"第二种：\"></a>第二种：</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> ((i = 0; i &lt;= 5; i++))</div><div class=\"line\"><span class=\"keyword\">do</span></div><div class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"welcome <span class=\"variable\">$i</span> times\"</span></div><div class=\"line\"><span class=\"keyword\">done</span></div><div class=\"line\">或</div><div class=\"line\"><span class=\"keyword\">for</span> ((i = 0; i &lt;= 5; i++)); <span class=\"keyword\">do</span> <span class=\"built_in\">echo</span> <span class=\"string\">\"welcome <span class=\"variable\">$i</span> times\"</span>; <span class=\"keyword\">done</span></div></pre></td></tr></table></figure>\n<h1 id=\"while循环\"><a href=\"#while循环\" class=\"headerlink\" title=\"while循环\"></a>while循环</h1><h2 id=\"第一种\"><a href=\"#第一种\" class=\"headerlink\" title=\"第一种\"></a>第一种</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">while</span> expression</div><div class=\"line\"><span class=\"keyword\">do</span></div><div class=\"line\"><span class=\"built_in\">command</span></div><div class=\"line\">…</div><div class=\"line\"><span class=\"keyword\">done</span></div></pre></td></tr></table></figure>\n<h2 id=\"第二种\"><a href=\"#第二种\" class=\"headerlink\" title=\"第二种\"></a>第二种</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">i=1</div><div class=\"line\"><span class=\"keyword\">while</span> ((i&lt;=3))</div><div class=\"line\"><span class=\"keyword\">do</span></div><div class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"variable\">$i</span></div><div class=\"line\">  <span class=\"built_in\">let</span> i++</div><div class=\"line\"><span class=\"keyword\">done</span></div></pre></td></tr></table></figure>\n<h1 id=\"case语句\"><a href=\"#case语句\" class=\"headerlink\" title=\"case语句\"></a>case语句</h1><p>格式<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">case</span> <span class=\"variable\">$1</span> <span class=\"keyword\">in</span></div><div class=\"line\">start)</div><div class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"starting\"</span></div><div class=\"line\">\t;;</div><div class=\"line\">stop)</div><div class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"stoping\"</span></div><div class=\"line\">\t;;</div><div class=\"line\">*)</div><div class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"Usage: &#123;start|stop&#125; “</span></div><div class=\"line\"><span class=\"string\">esac</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"read命令\"><a href=\"#read命令\" class=\"headerlink\" title=\"read命令\"></a>read命令</h1><p>read -p(提示语句)-n(字符个数) -t(等待时间)<br>    read -p “please input your name: “ NAME</p>\n<p>使用示例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">[vagrant@mysql1 ~]$ read -p &quot;please enter a number:&quot; numb</div><div class=\"line\">please enter a number:1</div><div class=\"line\">[vagrant@mysql1 ~]$ echo $numb</div><div class=\"line\">1</div><div class=\"line\">[vagrant@mysql1 ~]$</div></pre></td></tr></table></figure></p>\n<h1 id=\"if判断\"><a href=\"#if判断\" class=\"headerlink\" title=\"if判断\"></a>if判断</h1><p>语法<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span> condition </div><div class=\"line\"><span class=\"keyword\">then</span> </div><div class=\"line\">    statements</div><div class=\"line\">[<span class=\"keyword\">elif</span> condition </div><div class=\"line\">    <span class=\"keyword\">then</span> statements. ..] </div><div class=\"line\">[<span class=\"keyword\">else</span> </div><div class=\"line\">    statements ] </div><div class=\"line\"><span class=\"keyword\">fi</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"判断语句\"><a href=\"#判断语句\" class=\"headerlink\" title=\"判断语句\"></a>判断语句</h1><p>[ condition ] <strong>(注意condition前后要有空格)</strong></p>\n<p>#非空返回true，可使用$?验证（0为true，&gt;1为false）<br>[ test ]</p>\n<p>#空返回false<br>[  ]</p>\n<blockquote>\n<p>[ condition ] &amp;&amp; echo OK || echo notok</p>\n</blockquote>\n<p>条件满足，执行后面的语句 不满足执行 || 后面的语句</p>\n<h1 id=\"常用判断条件\"><a href=\"#常用判断条件\" class=\"headerlink\" title=\"常用判断条件\"></a>常用判断条件</h1><ul>\n<li>= 字符串比较</li>\n<li>-lt 小于</li>\n<li>-le 小于等于</li>\n<li>-eq 等于</li>\n<li>-gt 大于</li>\n<li>-ge 大于等于</li>\n<li><p>-ne 不等于</p>\n</li>\n<li><p>-r 有读的权限</p>\n</li>\n<li>-w 有写的权限</li>\n<li>-x 有执行的权限</li>\n<li><strong>-f 文件存在并且是一个常规的文件</strong></li>\n<li>-s 文件存在且不为空</li>\n<li>-d 文件存在并是一个目录</li>\n<li>-b文件存在并且是一个块设备</li>\n<li>-L 文件存在并且是一个链接</li>\n</ul>\n<h1 id=\"Shell自定义函数\"><a href=\"#Shell自定义函数\" class=\"headerlink\" title=\"Shell自定义函数\"></a>Shell自定义函数</h1><p>语法<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"> [ <span class=\"keyword\">function</span> ] funname [()]</div><div class=\"line\">&#123;</div><div class=\"line\">    action;</div><div class=\"line\">    [<span class=\"built_in\">return</span> int;]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>三种声明方式:</p>\n<ul>\n<li>function start()  </li>\n<li>function start </li>\n<li>start()</li>\n</ul>\n<p>注意</p>\n<ol>\n<li>必须在调用函数地方之前，先声明函数，shell脚本是逐行运行。不会像其它语言一样先预编译</li>\n<li>函数返回值，只能通过$? 系统变量获得，可以显示加：return 返回，如果不加，将以最后一条命令运行结果，作为返回值。 return后跟数值n(0-255)</li>\n</ol>\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\">fSum 3 2;</div><div class=\"line\"><span class=\"keyword\">function</span> fSum()</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"variable\">$1</span>,<span class=\"variable\">$2</span>;</div><div class=\"line\">    <span class=\"built_in\">return</span> $((<span class=\"variable\">$1</span>+<span class=\"variable\">$2</span>));</div><div class=\"line\">&#125;</div><div class=\"line\">fSum 5 7;</div><div class=\"line\">total=$?;</div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$total</span>,$?;</div></pre></td></tr></table></figure>\n<p>结果<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[vagrant@mysql1 ~]$ sh test </div><div class=\"line\">test: line 2: fSum: command not found</div><div class=\"line\">5,7</div><div class=\"line\">12,0</div></pre></td></tr></table></figure></p>\n<h1 id=\"脚本调试\"><a href=\"#脚本调试\" class=\"headerlink\" title=\"脚本调试\"></a>脚本调试</h1><ul>\n<li>sh -vx helloWorld.sh</li>\n<li>或者在脚本中增加set -x</li>\n</ul>\n<h1 id=\"cut命令\"><a href=\"#cut命令\" class=\"headerlink\" title=\"cut命令\"></a>cut命令</h1><p>cut命令可以从一个文本文件或者文本流中提取文本列。</p>\n<h2 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cut -d&apos;分隔字符&apos; -f fields &lt;==用于有特定分隔字符</div><div class=\"line\">cut -c 字符区间            &lt;==用于排列整齐的信息</div></pre></td></tr></table></figure>\n<ul>\n<li>-d  ：后面接分隔字符。与 -f 一起使用；</li>\n<li>-f  ：依据 -d 的分隔字符将一段信息分割成为数段，用 -f 取出第几段的意思；</li>\n<li>-c  ：以字符 (characters) 的单位取出固定字符区间；</li>\n</ul>\n<h2 id=\"例子-1\"><a href=\"#例子-1\" class=\"headerlink\" title=\"例子\"></a>例子</h2><h3 id=\"PATH-变量如下\"><a href=\"#PATH-变量如下\" class=\"headerlink\" title=\"PATH 变量如下\"></a>PATH 变量如下</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@www ~]# echo $PATH</div><div class=\"line\">/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/X11R6/bin:/usr/games</div><div class=\"line\"># 1 | 2       | 3   | 4       | 5            | 6            | 7</div></pre></td></tr></table></figure>\n<h3 id=\"将-PATH-变量取出，我要找出第五个路径。\"><a href=\"#将-PATH-变量取出，我要找出第五个路径。\" class=\"headerlink\" title=\"将 PATH 变量取出，我要找出第五个路径。\"></a>将 PATH 变量取出，我要找出第五个路径。</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">#echo $PATH | cut -d &apos;:&apos; -f 5</div><div class=\"line\">/usr/local/bin</div></pre></td></tr></table></figure>\n<h3 id=\"将-PATH-变量取出，我要找出第三和第五个路径。\"><a href=\"#将-PATH-变量取出，我要找出第三和第五个路径。\" class=\"headerlink\" title=\"将 PATH 变量取出，我要找出第三和第五个路径。\"></a>将 PATH 变量取出，我要找出第三和第五个路径。</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">#echo $PATH | cut -d &apos;:&apos; -f 3,5</div><div class=\"line\">/sbin:/usr/local/bin</div></pre></td></tr></table></figure>\n<h3 id=\"将-PATH-变量取出，我要找出第三到最后一个路径。\"><a href=\"#将-PATH-变量取出，我要找出第三到最后一个路径。\" class=\"headerlink\" title=\"将 PATH 变量取出，我要找出第三到最后一个路径。\"></a>将 PATH 变量取出，我要找出第三到最后一个路径。</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">echo $PATH | cut -d &apos;:&apos; -f 3-</div><div class=\"line\">/sbin:/usr/sbin:/usr/local/bin:/usr/X11R6/bin:/usr/games</div></pre></td></tr></table></figure>\n<h3 id=\"将-PATH-变量取出，我要找出第一到第三个路径。\"><a href=\"#将-PATH-变量取出，我要找出第一到第三个路径。\" class=\"headerlink\" title=\"将 PATH 变量取出，我要找出第一到第三个路径。\"></a>将 PATH 变量取出，我要找出第一到第三个路径。</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">#echo $PATH | cut -d &apos;:&apos; -f 1-3</div><div class=\"line\">/bin:/usr/bin:/sbin:</div></pre></td></tr></table></figure>\n<h3 id=\"将-PATH-变量取出，我要找出第一到第三，还有第五个路径。\"><a href=\"#将-PATH-变量取出，我要找出第一到第三，还有第五个路径。\" class=\"headerlink\" title=\"将 PATH 变量取出，我要找出第一到第三，还有第五个路径。\"></a>将 PATH 变量取出，我要找出第一到第三，还有第五个路径。</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">echo $PATH | cut -d &apos;:&apos; -f 1-3,5</div><div class=\"line\">/bin:/usr/bin:/sbin:/usr/local/bin</div></pre></td></tr></table></figure>\n<h2 id=\"实用例子-只显示-etc-passwd的用户和shell\"><a href=\"#实用例子-只显示-etc-passwd的用户和shell\" class=\"headerlink\" title=\"实用例子:只显示/etc/passwd的用户和shell\"></a>实用例子:只显示/etc/passwd的用户和shell</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">#cat /etc/passwd | cut -d &apos;:&apos; -f 1,7 </div><div class=\"line\">root:/bin/bash</div><div class=\"line\">daemon:/bin/sh</div><div class=\"line\">bin:/bin/sh</div></pre></td></tr></table></figure>\n<h1 id=\"sort命令\"><a href=\"#sort命令\" class=\"headerlink\" title=\"sort命令\"></a>sort命令</h1><p>sort 命令对 File 参数指定的文件中的行排序，并将结果写到标准输出。如果 File 参数指定多个文件，那么 sort 命令将这些文件连接起来，并当作一个文件进行排序。</p>\n<h2 id=\"语法-1\"><a href=\"#语法-1\" class=\"headerlink\" title=\"语法\"></a>语法</h2><p><code>[root@www ~]# sort [-fbMnrtuk] [file or stdin]</code><br>选项与参数：</p>\n<ul>\n<li>-f  ：忽略大小写的差异，例如 A 与 a 视为编码相同；</li>\n<li>-b  ：忽略最前面的空格符部分；</li>\n<li>-M  ：以月份的名字来排序，例如 JAN, DEC 等等的排序方法；</li>\n<li>-n  ：使用『纯数字』进行排序(默认是以文字型态来排序的)；</li>\n<li>-r  ：反向排序；</li>\n<li>-u  ：就是 uniq ，相同的数据中，仅出现一行代表；</li>\n<li>-t  ：分隔符，默认是用 [tab] 键来分隔；</li>\n<li>-k  ：以那个区间 (field) 来进行排序的意思</li>\n</ul>\n<h2 id=\"对-etc-passwd-的账号进行排序\"><a href=\"#对-etc-passwd-的账号进行排序\" class=\"headerlink\" title=\"对/etc/passwd 的账号进行排序\"></a>对/etc/passwd 的账号进行排序</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@www ~]<span class=\"comment\"># cat /etc/passwd | sort</span></div><div class=\"line\">adm:x:3:4:adm:/var/adm:/sbin/nologin</div><div class=\"line\">apache:x:48:48:Apache:/var/www:/sbin/nologin</div><div class=\"line\">bin:x:1:1:bin:/bin:/sbin/nologin</div><div class=\"line\">daemon:x:2:2:daemon:/sbin:/sbin/nologin</div></pre></td></tr></table></figure>\n<p>sort 是默认以第一个数据来排序，而且默认是以字符串形式来排序,所以由字母 a 开始升序排序。</p>\n<h2 id=\"etc-passwd-内容是以-来分隔的，我想以第三栏来排序，该如何\"><a href=\"#etc-passwd-内容是以-来分隔的，我想以第三栏来排序，该如何\" class=\"headerlink\" title=\"/etc/passwd 内容是以 : 来分隔的，我想以第三栏来排序，该如何\"></a>/etc/passwd 内容是以 : 来分隔的，我想以第三栏来排序，该如何</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@www ~]# cat /etc/passwd | sort -t &apos;:&apos; -k 3</div><div class=\"line\">root:x:0:0:root:/root:/bin/bash</div><div class=\"line\">uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin</div><div class=\"line\">operator:x:11:0:operator:/root:/sbin/nologin</div><div class=\"line\">bin:x:1:1:bin:/bin:/sbin/nologin</div><div class=\"line\">games:x:12:100:games:/usr/games:/sbin/nologin</div></pre></td></tr></table></figure>\n<h2 id=\"默认是以字符串来排序的，如果想要使用数字排序：\"><a href=\"#默认是以字符串来排序的，如果想要使用数字排序：\" class=\"headerlink\" title=\"默认是以字符串来排序的，如果想要使用数字排序：\"></a>默认是以字符串来排序的，如果想要使用数字排序：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat /etc/passwd | sort -t &apos;:&apos; -k 3n</div><div class=\"line\">root:x:0:0:root:/root:/bin/bash</div><div class=\"line\">daemon:x:1:1:daemon:/usr/sbin:/bin/sh</div><div class=\"line\">bin:x:2:2:bin:/bin:/bin/sh</div></pre></td></tr></table></figure>\n<h2 id=\"默认是升序排序，如果要倒序排序，如下\"><a href=\"#默认是升序排序，如果要倒序排序，如下\" class=\"headerlink\" title=\"默认是升序排序，如果要倒序排序，如下\"></a>默认是升序排序，如果要倒序排序，如下</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat /etc/passwd | sort -t &apos;:&apos; -k 3nr</div><div class=\"line\">nobody:x:65534:65534:nobody:/nonexistent:/bin/sh</div><div class=\"line\">ntp:x:106:113::/home/ntp:/bin/false</div><div class=\"line\">messagebus:x:105:109::/var/run/dbus:/bin/false</div><div class=\"line\">sshd:x:104:65534::/var/run/sshd:/usr/sbin/nologin</div></pre></td></tr></table></figure>\n<h2 id=\"如果要对-etc-passwd-先以第六个域的第2个字符到第4个字符进行正向排序，再基于第一个域进行反向排序。\"><a href=\"#如果要对-etc-passwd-先以第六个域的第2个字符到第4个字符进行正向排序，再基于第一个域进行反向排序。\" class=\"headerlink\" title=\"如果要对/etc/passwd,先以第六个域的第2个字符到第4个字符进行正向排序，再基于第一个域进行反向排序。\"></a>如果要对/etc/passwd,先以第六个域的第2个字符到第4个字符进行正向排序，再基于第一个域进行反向排序。</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat /etc/passwd |  sort -t&apos;:&apos; -k 6.2,6.4 -k 1r      </div><div class=\"line\">sync:x:4:65534:sync:/bin:/bin/sync</div><div class=\"line\">proxy:x:13:13:proxy:/bin:/bin/sh</div><div class=\"line\">bin:x:2:2:bin:/bin:/bin/sh</div><div class=\"line\">sys:x:3:3:sys:/dev:/bin/sh</div></pre></td></tr></table></figure>\n<h2 id=\"查看-etc-passwd有多少个shell-对-etc-passwd的第七个域进行排序，然后去重\"><a href=\"#查看-etc-passwd有多少个shell-对-etc-passwd的第七个域进行排序，然后去重\" class=\"headerlink\" title=\"查看/etc/passwd有多少个shell:对/etc/passwd的第七个域进行排序，然后去重:\"></a>查看/etc/passwd有多少个shell:对/etc/passwd的第七个域进行排序，然后去重:</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat /etc/passwd |  sort -t&apos;:&apos; -k 7 -u</div><div class=\"line\">root:x:0:0:root:/root:/bin/bash</div><div class=\"line\">syslog:x:101:102::/home/syslog:/bin/false</div><div class=\"line\">daemon:x:1:1:daemon:/usr/sbin:/bin/sh</div><div class=\"line\">sync:x:4:65534:sync:/bin:/bin/sync</div><div class=\"line\">sshd:x:104:65534::/var/run/sshd:/usr/sbin/nologin</div></pre></td></tr></table></figure>\n<h1 id=\"uniq去重命令\"><a href=\"#uniq去重命令\" class=\"headerlink\" title=\"uniq去重命令\"></a>uniq去重命令</h1><p> uniq命令可以去除排序过的文件中的重复行，因此uniq经常和sort合用。也就是说，为了使uniq起作用，所有的重复行必须是相邻的。</p>\n<h2 id=\"uniq语法\"><a href=\"#uniq语法\" class=\"headerlink\" title=\"uniq语法\"></a>uniq语法</h2><p><code>[root@www ~]# uniq [-icu]</code><br>选项与参数：</p>\n<ul>\n<li>-i   ：忽略大小写字符的不同；</li>\n<li>-c  ：进行计数</li>\n<li>-u  ：只显示唯一的行</li>\n</ul>\n<p>testfile的内容如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat testfile</div><div class=\"line\">hello</div><div class=\"line\">world</div><div class=\"line\">friend</div><div class=\"line\">hello</div><div class=\"line\">world</div><div class=\"line\">hello</div></pre></td></tr></table></figure></p>\n<p>直接删除未经排序的文件，将会发现没有任何行被删除<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">#uniq testfile  </div><div class=\"line\">hello</div><div class=\"line\">world</div><div class=\"line\">friend</div><div class=\"line\">hello</div><div class=\"line\">world</div><div class=\"line\">hello</div></pre></td></tr></table></figure></p>\n<p>排序文件，默认是去重<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">#cat testfile | sort |uniq</div><div class=\"line\">friend</div><div class=\"line\">hello</div><div class=\"line\">world</div></pre></td></tr></table></figure></p>\n<p>排序之后删除了重复行，同时在行首位置输出该行重复的次数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">#sort testfile | uniq -c</div><div class=\"line\">1 friend</div><div class=\"line\">3 hello</div><div class=\"line\">2 world</div></pre></td></tr></table></figure></p>\n<p>仅显示存在重复的行，并在行首显示该行重复的次数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#sort testfile | uniq -dc</div><div class=\"line\">3 hello</div><div class=\"line\">2 world</div></pre></td></tr></table></figure></p>\n<p>仅显示不重复的行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sort testfile | uniq -u</div><div class=\"line\">friend</div></pre></td></tr></table></figure></p>\n<h1 id=\"wc命令\"><a href=\"#wc命令\" class=\"headerlink\" title=\"wc命令\"></a>wc命令</h1><h2 id=\"语法-2\"><a href=\"#语法-2\" class=\"headerlink\" title=\"语法\"></a>语法</h2><p><code>[root@www ~]# wc [-lwm]</code><br>选项与参数：</p>\n<ul>\n<li>-l  ：仅列出行；</li>\n<li>-w  ：仅列出多少字(英文单字)；</li>\n<li>-m  ：多少字符；<h2 id=\"默认使用wc统计-etc-passwd\"><a href=\"#默认使用wc统计-etc-passwd\" class=\"headerlink\" title=\"默认使用wc统计/etc/passwd\"></a>默认使用wc统计/etc/passwd</h2></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#wc /etc/passwd</div><div class=\"line\">40   45 1719 /etc/passwd</div><div class=\"line\">40是行数，45是单词数，1719是字节数</div></pre></td></tr></table></figure>\n<p>wc的命令比较简单使用，每个参数使用如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">#wc -l /etc/passwd   #统计行数，在对记录数时，很常用</div><div class=\"line\">40 /etc/passwd       #表示系统有40个账户</div><div class=\"line\"></div><div class=\"line\">#wc -w /etc/passwd  #统计单词出现次数</div><div class=\"line\">45 /etc/passwd</div><div class=\"line\"></div><div class=\"line\">#wc -m /etc/passwd  #统计文件的字符数</div><div class=\"line\">1719</div></pre></td></tr></table></figure>"},{"title":"大数据02-02 linux命令继续学习 yum","toc":true,"date":"2017-11-01T15:50:39.000Z","scaffolds":null,"_content":"\n\n\n# YUM的常用命令\n\n安装httpd并确认安装\n```\nyum instll -y httpd\n```\n列出所有可用的package和package组\n```\nyum list\n```\n清除所有缓冲数据\n```\nyum clean all\n```\n列出一个包所有依赖的包\n```\nyum deplist httpd\n```\n删除httpd\n```\nyum remove httpd\n```\n# 配置本地yum源\ncd /etc/yum.repos.d \n\n# 安装jdk\n解压安装包\n> tar -zxvf jdk-7u45-linux-x64.tar.gz -C apps/\n\n然后修改环境变量\n> vi /etc/profile\n\n在文件最后添加\n```\nexport JAVA_HOME=/root/apps/jdk1.7.0_45\nexport PATH=$PATH:$JAVA_HOME/bin\n```\n\n保存退出\n\n然后重新加载环境变量\n> source /etc/profile\n\n# 装mysql\n# 安装tomcat\n1. 上传tomcat包\n2. 解压\n3. 启动\n4. 测试访问\n","source":"_posts/大数据02-02-linux命令继续学习-yum.md","raw":"---\ntitle: 大数据02-02 linux命令继续学习 yum\ncategories: 学习\ntags:\n  - 大数据\n  - linux\n  - centos7\n  - linux命令\ntoc: true\ndate: 2017-11-01 23:50:39\nscaffolds:\n---\n\n\n\n# YUM的常用命令\n\n安装httpd并确认安装\n```\nyum instll -y httpd\n```\n列出所有可用的package和package组\n```\nyum list\n```\n清除所有缓冲数据\n```\nyum clean all\n```\n列出一个包所有依赖的包\n```\nyum deplist httpd\n```\n删除httpd\n```\nyum remove httpd\n```\n# 配置本地yum源\ncd /etc/yum.repos.d \n\n# 安装jdk\n解压安装包\n> tar -zxvf jdk-7u45-linux-x64.tar.gz -C apps/\n\n然后修改环境变量\n> vi /etc/profile\n\n在文件最后添加\n```\nexport JAVA_HOME=/root/apps/jdk1.7.0_45\nexport PATH=$PATH:$JAVA_HOME/bin\n```\n\n保存退出\n\n然后重新加载环境变量\n> source /etc/profile\n\n# 装mysql\n# 安装tomcat\n1. 上传tomcat包\n2. 解压\n3. 启动\n4. 测试访问\n","slug":"大数据02-02-linux命令继续学习-yum","published":1,"updated":"2017-11-06T16:13:40.065Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9wugozz000qh4v71xx4ei4i","content":"<h1 id=\"YUM的常用命令\"><a href=\"#YUM的常用命令\" class=\"headerlink\" title=\"YUM的常用命令\"></a>YUM的常用命令</h1><p>安装httpd并确认安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum instll -y httpd</div></pre></td></tr></table></figure></p>\n<p>列出所有可用的package和package组<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum list</div></pre></td></tr></table></figure></p>\n<p>清除所有缓冲数据<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum clean all</div></pre></td></tr></table></figure></p>\n<p>列出一个包所有依赖的包<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum deplist httpd</div></pre></td></tr></table></figure></p>\n<p>删除httpd<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum remove httpd</div></pre></td></tr></table></figure></p>\n<h1 id=\"配置本地yum源\"><a href=\"#配置本地yum源\" class=\"headerlink\" title=\"配置本地yum源\"></a>配置本地yum源</h1><p>cd /etc/yum.repos.d </p>\n<h1 id=\"安装jdk\"><a href=\"#安装jdk\" class=\"headerlink\" title=\"安装jdk\"></a>安装jdk</h1><p>解压安装包</p>\n<blockquote>\n<p>tar -zxvf jdk-7u45-linux-x64.tar.gz -C apps/</p>\n</blockquote>\n<p>然后修改环境变量</p>\n<blockquote>\n<p>vi /etc/profile</p>\n</blockquote>\n<p>在文件最后添加<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">export JAVA_HOME=/root/apps/jdk1.7.0_45</div><div class=\"line\">export PATH=$PATH:$JAVA_HOME/bin</div></pre></td></tr></table></figure></p>\n<p>保存退出</p>\n<p>然后重新加载环境变量</p>\n<blockquote>\n<p>source /etc/profile</p>\n</blockquote>\n<h1 id=\"装mysql\"><a href=\"#装mysql\" class=\"headerlink\" title=\"装mysql\"></a>装mysql</h1><h1 id=\"安装tomcat\"><a href=\"#安装tomcat\" class=\"headerlink\" title=\"安装tomcat\"></a>安装tomcat</h1><ol>\n<li>上传tomcat包</li>\n<li>解压</li>\n<li>启动</li>\n<li>测试访问</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"YUM的常用命令\"><a href=\"#YUM的常用命令\" class=\"headerlink\" title=\"YUM的常用命令\"></a>YUM的常用命令</h1><p>安装httpd并确认安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum instll -y httpd</div></pre></td></tr></table></figure></p>\n<p>列出所有可用的package和package组<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum list</div></pre></td></tr></table></figure></p>\n<p>清除所有缓冲数据<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum clean all</div></pre></td></tr></table></figure></p>\n<p>列出一个包所有依赖的包<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum deplist httpd</div></pre></td></tr></table></figure></p>\n<p>删除httpd<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum remove httpd</div></pre></td></tr></table></figure></p>\n<h1 id=\"配置本地yum源\"><a href=\"#配置本地yum源\" class=\"headerlink\" title=\"配置本地yum源\"></a>配置本地yum源</h1><p>cd /etc/yum.repos.d </p>\n<h1 id=\"安装jdk\"><a href=\"#安装jdk\" class=\"headerlink\" title=\"安装jdk\"></a>安装jdk</h1><p>解压安装包</p>\n<blockquote>\n<p>tar -zxvf jdk-7u45-linux-x64.tar.gz -C apps/</p>\n</blockquote>\n<p>然后修改环境变量</p>\n<blockquote>\n<p>vi /etc/profile</p>\n</blockquote>\n<p>在文件最后添加<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">export JAVA_HOME=/root/apps/jdk1.7.0_45</div><div class=\"line\">export PATH=$PATH:$JAVA_HOME/bin</div></pre></td></tr></table></figure></p>\n<p>保存退出</p>\n<p>然后重新加载环境变量</p>\n<blockquote>\n<p>source /etc/profile</p>\n</blockquote>\n<h1 id=\"装mysql\"><a href=\"#装mysql\" class=\"headerlink\" title=\"装mysql\"></a>装mysql</h1><h1 id=\"安装tomcat\"><a href=\"#安装tomcat\" class=\"headerlink\" title=\"安装tomcat\"></a>安装tomcat</h1><ol>\n<li>上传tomcat包</li>\n<li>解压</li>\n<li>启动</li>\n<li>测试访问</li>\n</ol>\n"},{"title":"大数据02-04-shell编程-sed命令","toc":true,"date":"2017-11-06T15:02:56.000Z","scaffolds":null,"_content":"# Sed简介\nsed 是一种在线编辑器，它一次处理一行内容。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有 改变，除非你使用重定向存储输出。Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。以下介绍的是Gnu版本的Sed 3.02。做备份,以后速查用.\n<!-- more -->\n## 定址\n可以通过定址来定位你所希望编辑的行，该地址用数字构成，用逗号分隔的两个行数表示以这两行为起止的行的范围（包括行数表示的那两行）。如1，3表示1，2，3行，美元符号($)表示最后一行。范围可以通过数据，正则表达式或者二者结合的方式确定 。\n\n## Sed命令\n调用sed命令有两种形式：\n* sed [options] 'command' file(s)\n* sed [options] -f scriptfile file(s)\n  * a\n  在当前行后面加入一行文本。\n  * b lable\n  分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。\n  * c\n  用新的文本改变本行的文本。\n  * d\n  从模板块（Pattern space）位置删除行。\n  * D\n  删除模板块的第一行。\n  * i\n  在当前行上面插入文本。\n  * h\n  拷贝模板块的内容到内存中的缓冲区。\n  * H\n  追加模板块的内容到内存中的缓冲区\n  * g\n  获得内存缓冲区的内容，并替代当前模板块中的文本。\n  * G\n  获得内存缓冲区的内容，并追加到当前模板块文本的后面。\n  * l\n  列表不能打印字符的清单。\n  * n\n  读取下一个输入行，用下一个命令处理新的行而不是用第一个命令。\n  * N\n  追加下一个输入行到模板块后面并在二者间嵌入一个新行，改变当前行号码。\n  * p\n  打印模板块的行。\n  * P（大写）\n  打印模板块的第一行。\n  * q\n  退出Sed。\n  * r file\n  从file中读行。\n  * t label\n  if分支，从最后一行开始，条件一旦满足或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。\n  * T label\n  错误分支，从最后一行开始，一旦发生错误或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。\n  * w file\n  写并追加模板块到file末尾。\n  * W file\n  写并追加模板块的第一行到file末尾。\n  * !\n  表示后面的命令对所有没有被选定的行发生作用。\n  * s/re/string\n  用string替换正则表达式re。\n  * =\n  打印当前行号码。\n  * #把注释扩展到下一个换行符以前。\n### 以下的是替换标记\n* g表示行内全面替换。\n* p表示打印行。\n* w表示把行写入一个文件。\n* x表示互换模板块中的文本和缓冲区中的文本。\n* y表示把一个字符翻译为另外的字符（但是不用于正则表达式）\n\n## 选项\n`-e command, --expression=command`\n允许多台编辑。\n* -h, --help\n打印帮助，并显示bug列表的地址。\n* -n, --quiet, --silent\n取消默认输出。\n* -f, --filer=script-file\n引导sed脚本文件名。\n* -V, --version\n打印版本和版权信息。\n\n## 元字符集^\n锚定行的开始 如：/^sed/匹配所有以sed开头的行。 \n$\n* 锚定行的结束 如：/sed$/匹配所有以sed结尾的行。 \n.\n* 匹配一个非换行符的字符 如：/s.d/匹配s后接一个任意字符，然后是d。 \n*\n* 匹配零或多个字符 如：/*sed/匹配所有模板是一个或多个空格后紧跟sed的行。 \n[]\n* 匹配一个指定范围内的字符，如/[Ss]ed/匹配sed和Sed。 \n[^]\n* 匹配一个不在指定范围内的字符，如：/[^A-RT-Z]ed/匹配不包含A-R和T-Z的一个字母开头，紧跟ed的行。 \n\\(..\\)\n* 保存匹配的字符，如s/\\(love\\)able/\\1rs，loveable被替换成lovers。 \n&\n* 保存搜索字符用来替换其他字符，如s/love/**&**/，love这成**love**。 \n\\<\n* 锚定单词的开始，如:/\\<love/匹配包含以love开头的单词的行。 \n\\>\n* 锚定单词的结束，如/love\\>/匹配包含以love结尾的单词的行。 \nx\\{m\\}\n* 重复字符x，m次，如：/o\\{5\\}/匹配包含5个o的行。 \nx\\{m,\\}\n* 重复字符x,至少m次，如：/o\\{5,\\}/匹配至少有5个o的行。 \nx\\{m,n\\}\n* 重复字符x，至少m次，不多于n次，如：/o\\{5,10\\}/匹配5--10个o的行。\n## 实例\n### 删除：d命令\n* $ sed '2d' example-----删除example文件的第二行。\n* $ sed '2,$d' example-----删除example文件的第二行到末尾所有行。\n* $ sed '$d' example-----删除example文件的最后一行。\n* $ sed '/test/'d example-----删除example文件所有包含test的行。\n### 替换：s命令\n* $ sed 's/test/mytest/g' example-----在整行范围内把test替换为mytest。如果没有g标记，则只有每行第一个匹配的test被替换成mytest。\n* $ sed -n 's/^test/mytest/p' example-----(-n)选项和p标志一起使用表示只打印那些发生替换的行。也就是说，如果某一行开头的test被替换成mytest，就打印它。\n* $ sed 's/^192.168.0.1/&localhost/' example-----&符号表示替换换字符串中被找到的部份。所有以192.168.0.1开头的行都会被替换成它自已加 localhost，变成192.168.0.1localhost。\n* $ sed -n 's/\\(love\\)able/\\1rs/p' example-----love被标记为1，所有loveable会被替换成lovers，而且替换的行会被打印出来。\n* $ sed 's#10#100#g' example-----不论什么字符，紧跟着s命令的都被认为是新的分隔符，所以，“#”在这里是分隔符，代替了默认的“/”分隔符。表示把所有10替换成100。\n选定行的范围：逗号\n* $ sed -n '/test/,/check/p' example-----所有在模板test和check所确定的范围内的行都被打印。\n* $ sed -n '5,/^test/p' example-----打印从第五行开始到第一个包含以test开始的行之间的所有行。\n* $ sed '/test/,/check/s/$/sed test/' example-----对于模板test和west之间的行，每行的末尾用字符串sed test替换。\n### 多点编辑：e命令\n* $ sed -e '1,5d' -e 's/test/check/' example-----(-e)选项允许在同一行里执行多条命令。如例子所示，第一条命令删除1至5行，第二条命令用check替换test。命令的执 行顺序对结果有影响。如果两个命令都是替换命令，那么第一个替换命令将影响第二个替换命令的结果。\n* $ sed --expression='s/test/check/' --expression='/love/d' example-----一个比-e更好的命令是--expression。它能给sed表达式赋值。\n### 从文件读入：r命令\n* $ sed '/test/r file' example-----file里的内容被读进来，显示在与test匹配的行后面，如果匹配多行，则file的内容将显示在所有匹配行的下面。\n### 写入文件：w命令\n* $ sed -n '/test/w file' example-----在example中所有包含test的行都被写入file里。\n### 追加命令：a命令\n\n* $ sed '/^test/a\\\\--->this is a example' example    '----->this is a example'被追加到以test开头的行后面，sed要求命令a后面有一个反斜杠。\n### 插入：i命令\n* $ sed '/test/i\\\\\nnew line\n-------------------------' example\n如果test被匹配，则把反斜杠后面的文本插入到匹配行的前面。\n下一个：n命令\n* $ sed '/test/{ n; s/aa/bb/; }' example-----如果test被匹配，则移动到匹配行的下一行，替换这一行的aa，变为bb，并打印该行，然后继续。\n变形：y命令\n\n* $ sed '1,10y/abcde/ABCDE/' example-----把1--10行内所有abcde转变为大写，注意，正则表达式元字符不能使用这个命令。\n退出：q命令\n* $ sed '10q' example-----打印完第10行后，退出sed。\n保持和获取：h命令和G命令\n* $ sed -e '/test/h' -e '$G example-----在sed处理文件的时候，每一行都被保存在一个叫模式空间的临时缓冲区中，除非行被删除或者输出被取消，否则所有被处理的行都将 打印在屏幕上。接着模式空间被清空，并存入新的一行等待处理。在这个例子里，匹配test的行被找到后，将存入模式空间，h命令将其复制并存入一个称为保 持缓存区的特殊缓冲区内。第二条语句的意思是，当到达最后一行后，G命令取出保持缓冲区的行，然后把它放回模式空间中，且追加到现在已经存在于模式空间中 的行的末尾。在这个例子中就是追加到最后一行。简单来说，任何包含test的行都被复制并追加到该文件的末尾。\n保持和互换：h命令和x命令\n* $ sed -e '/test/h' -e '/check/x' example -----互换模式空间和保持缓冲区的内容。也就是把包含test与check的行互换。\n### 脚本\nSed脚本是一个sed的命令清单，启动Sed时以-f选项引导脚本文件名。Sed对于脚本中输入的命令非常挑剔，在命令的末尾不能有任何空白或文本，如果在一行中有多个命令，要用分号分隔。以#开头的行为注释行，且不能跨行。\n","source":"_posts/大数据02-04-shell编程-sed命令.md","raw":"---\ntitle: 大数据02-04-shell编程-sed命令\ncategories: 学习\ntags:\n  - 大数据\n  - linux\n  - centos7\n  - linux命令\ntoc: true\ndate: 2017-11-06 23:02:56\nscaffolds:\n---\n# Sed简介\nsed 是一种在线编辑器，它一次处理一行内容。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有 改变，除非你使用重定向存储输出。Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。以下介绍的是Gnu版本的Sed 3.02。做备份,以后速查用.\n<!-- more -->\n## 定址\n可以通过定址来定位你所希望编辑的行，该地址用数字构成，用逗号分隔的两个行数表示以这两行为起止的行的范围（包括行数表示的那两行）。如1，3表示1，2，3行，美元符号($)表示最后一行。范围可以通过数据，正则表达式或者二者结合的方式确定 。\n\n## Sed命令\n调用sed命令有两种形式：\n* sed [options] 'command' file(s)\n* sed [options] -f scriptfile file(s)\n  * a\n  在当前行后面加入一行文本。\n  * b lable\n  分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。\n  * c\n  用新的文本改变本行的文本。\n  * d\n  从模板块（Pattern space）位置删除行。\n  * D\n  删除模板块的第一行。\n  * i\n  在当前行上面插入文本。\n  * h\n  拷贝模板块的内容到内存中的缓冲区。\n  * H\n  追加模板块的内容到内存中的缓冲区\n  * g\n  获得内存缓冲区的内容，并替代当前模板块中的文本。\n  * G\n  获得内存缓冲区的内容，并追加到当前模板块文本的后面。\n  * l\n  列表不能打印字符的清单。\n  * n\n  读取下一个输入行，用下一个命令处理新的行而不是用第一个命令。\n  * N\n  追加下一个输入行到模板块后面并在二者间嵌入一个新行，改变当前行号码。\n  * p\n  打印模板块的行。\n  * P（大写）\n  打印模板块的第一行。\n  * q\n  退出Sed。\n  * r file\n  从file中读行。\n  * t label\n  if分支，从最后一行开始，条件一旦满足或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。\n  * T label\n  错误分支，从最后一行开始，一旦发生错误或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。\n  * w file\n  写并追加模板块到file末尾。\n  * W file\n  写并追加模板块的第一行到file末尾。\n  * !\n  表示后面的命令对所有没有被选定的行发生作用。\n  * s/re/string\n  用string替换正则表达式re。\n  * =\n  打印当前行号码。\n  * #把注释扩展到下一个换行符以前。\n### 以下的是替换标记\n* g表示行内全面替换。\n* p表示打印行。\n* w表示把行写入一个文件。\n* x表示互换模板块中的文本和缓冲区中的文本。\n* y表示把一个字符翻译为另外的字符（但是不用于正则表达式）\n\n## 选项\n`-e command, --expression=command`\n允许多台编辑。\n* -h, --help\n打印帮助，并显示bug列表的地址。\n* -n, --quiet, --silent\n取消默认输出。\n* -f, --filer=script-file\n引导sed脚本文件名。\n* -V, --version\n打印版本和版权信息。\n\n## 元字符集^\n锚定行的开始 如：/^sed/匹配所有以sed开头的行。 \n$\n* 锚定行的结束 如：/sed$/匹配所有以sed结尾的行。 \n.\n* 匹配一个非换行符的字符 如：/s.d/匹配s后接一个任意字符，然后是d。 \n*\n* 匹配零或多个字符 如：/*sed/匹配所有模板是一个或多个空格后紧跟sed的行。 \n[]\n* 匹配一个指定范围内的字符，如/[Ss]ed/匹配sed和Sed。 \n[^]\n* 匹配一个不在指定范围内的字符，如：/[^A-RT-Z]ed/匹配不包含A-R和T-Z的一个字母开头，紧跟ed的行。 \n\\(..\\)\n* 保存匹配的字符，如s/\\(love\\)able/\\1rs，loveable被替换成lovers。 \n&\n* 保存搜索字符用来替换其他字符，如s/love/**&**/，love这成**love**。 \n\\<\n* 锚定单词的开始，如:/\\<love/匹配包含以love开头的单词的行。 \n\\>\n* 锚定单词的结束，如/love\\>/匹配包含以love结尾的单词的行。 \nx\\{m\\}\n* 重复字符x，m次，如：/o\\{5\\}/匹配包含5个o的行。 \nx\\{m,\\}\n* 重复字符x,至少m次，如：/o\\{5,\\}/匹配至少有5个o的行。 \nx\\{m,n\\}\n* 重复字符x，至少m次，不多于n次，如：/o\\{5,10\\}/匹配5--10个o的行。\n## 实例\n### 删除：d命令\n* $ sed '2d' example-----删除example文件的第二行。\n* $ sed '2,$d' example-----删除example文件的第二行到末尾所有行。\n* $ sed '$d' example-----删除example文件的最后一行。\n* $ sed '/test/'d example-----删除example文件所有包含test的行。\n### 替换：s命令\n* $ sed 's/test/mytest/g' example-----在整行范围内把test替换为mytest。如果没有g标记，则只有每行第一个匹配的test被替换成mytest。\n* $ sed -n 's/^test/mytest/p' example-----(-n)选项和p标志一起使用表示只打印那些发生替换的行。也就是说，如果某一行开头的test被替换成mytest，就打印它。\n* $ sed 's/^192.168.0.1/&localhost/' example-----&符号表示替换换字符串中被找到的部份。所有以192.168.0.1开头的行都会被替换成它自已加 localhost，变成192.168.0.1localhost。\n* $ sed -n 's/\\(love\\)able/\\1rs/p' example-----love被标记为1，所有loveable会被替换成lovers，而且替换的行会被打印出来。\n* $ sed 's#10#100#g' example-----不论什么字符，紧跟着s命令的都被认为是新的分隔符，所以，“#”在这里是分隔符，代替了默认的“/”分隔符。表示把所有10替换成100。\n选定行的范围：逗号\n* $ sed -n '/test/,/check/p' example-----所有在模板test和check所确定的范围内的行都被打印。\n* $ sed -n '5,/^test/p' example-----打印从第五行开始到第一个包含以test开始的行之间的所有行。\n* $ sed '/test/,/check/s/$/sed test/' example-----对于模板test和west之间的行，每行的末尾用字符串sed test替换。\n### 多点编辑：e命令\n* $ sed -e '1,5d' -e 's/test/check/' example-----(-e)选项允许在同一行里执行多条命令。如例子所示，第一条命令删除1至5行，第二条命令用check替换test。命令的执 行顺序对结果有影响。如果两个命令都是替换命令，那么第一个替换命令将影响第二个替换命令的结果。\n* $ sed --expression='s/test/check/' --expression='/love/d' example-----一个比-e更好的命令是--expression。它能给sed表达式赋值。\n### 从文件读入：r命令\n* $ sed '/test/r file' example-----file里的内容被读进来，显示在与test匹配的行后面，如果匹配多行，则file的内容将显示在所有匹配行的下面。\n### 写入文件：w命令\n* $ sed -n '/test/w file' example-----在example中所有包含test的行都被写入file里。\n### 追加命令：a命令\n\n* $ sed '/^test/a\\\\--->this is a example' example    '----->this is a example'被追加到以test开头的行后面，sed要求命令a后面有一个反斜杠。\n### 插入：i命令\n* $ sed '/test/i\\\\\nnew line\n-------------------------' example\n如果test被匹配，则把反斜杠后面的文本插入到匹配行的前面。\n下一个：n命令\n* $ sed '/test/{ n; s/aa/bb/; }' example-----如果test被匹配，则移动到匹配行的下一行，替换这一行的aa，变为bb，并打印该行，然后继续。\n变形：y命令\n\n* $ sed '1,10y/abcde/ABCDE/' example-----把1--10行内所有abcde转变为大写，注意，正则表达式元字符不能使用这个命令。\n退出：q命令\n* $ sed '10q' example-----打印完第10行后，退出sed。\n保持和获取：h命令和G命令\n* $ sed -e '/test/h' -e '$G example-----在sed处理文件的时候，每一行都被保存在一个叫模式空间的临时缓冲区中，除非行被删除或者输出被取消，否则所有被处理的行都将 打印在屏幕上。接着模式空间被清空，并存入新的一行等待处理。在这个例子里，匹配test的行被找到后，将存入模式空间，h命令将其复制并存入一个称为保 持缓存区的特殊缓冲区内。第二条语句的意思是，当到达最后一行后，G命令取出保持缓冲区的行，然后把它放回模式空间中，且追加到现在已经存在于模式空间中 的行的末尾。在这个例子中就是追加到最后一行。简单来说，任何包含test的行都被复制并追加到该文件的末尾。\n保持和互换：h命令和x命令\n* $ sed -e '/test/h' -e '/check/x' example -----互换模式空间和保持缓冲区的内容。也就是把包含test与check的行互换。\n### 脚本\nSed脚本是一个sed的命令清单，启动Sed时以-f选项引导脚本文件名。Sed对于脚本中输入的命令非常挑剔，在命令的末尾不能有任何空白或文本，如果在一行中有多个命令，要用分号分隔。以#开头的行为注释行，且不能跨行。\n","slug":"大数据02-04-shell编程-sed命令","published":1,"updated":"2017-11-06T16:13:52.587Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9wugp03000vh4v7h3sh7eyj","content":"<h1 id=\"Sed简介\"><a href=\"#Sed简介\" class=\"headerlink\" title=\"Sed简介\"></a>Sed简介</h1><p>sed 是一种在线编辑器，它一次处理一行内容。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有 改变，除非你使用重定向存储输出。Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。以下介绍的是Gnu版本的Sed 3.02。做备份,以后速查用.<br><a id=\"more\"></a></p>\n<h2 id=\"定址\"><a href=\"#定址\" class=\"headerlink\" title=\"定址\"></a>定址</h2><p>可以通过定址来定位你所希望编辑的行，该地址用数字构成，用逗号分隔的两个行数表示以这两行为起止的行的范围（包括行数表示的那两行）。如1，3表示1，2，3行，美元符号($)表示最后一行。范围可以通过数据，正则表达式或者二者结合的方式确定 。</p>\n<h2 id=\"Sed命令\"><a href=\"#Sed命令\" class=\"headerlink\" title=\"Sed命令\"></a>Sed命令</h2><p>调用sed命令有两种形式：</p>\n<ul>\n<li>sed [options] ‘command’ file(s)</li>\n<li>sed [options] -f scriptfile file(s)<ul>\n<li>a<br>在当前行后面加入一行文本。</li>\n<li>b lable<br>分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。</li>\n<li>c<br>用新的文本改变本行的文本。</li>\n<li>d<br>从模板块（Pattern space）位置删除行。</li>\n<li>D<br>删除模板块的第一行。</li>\n<li>i<br>在当前行上面插入文本。</li>\n<li>h<br>拷贝模板块的内容到内存中的缓冲区。</li>\n<li>H<br>追加模板块的内容到内存中的缓冲区</li>\n<li>g<br>获得内存缓冲区的内容，并替代当前模板块中的文本。</li>\n<li>G<br>获得内存缓冲区的内容，并追加到当前模板块文本的后面。</li>\n<li>l<br>列表不能打印字符的清单。</li>\n<li>n<br>读取下一个输入行，用下一个命令处理新的行而不是用第一个命令。</li>\n<li>N<br>追加下一个输入行到模板块后面并在二者间嵌入一个新行，改变当前行号码。</li>\n<li>p<br>打印模板块的行。</li>\n<li>P（大写）<br>打印模板块的第一行。</li>\n<li>q<br>退出Sed。</li>\n<li>r file<br>从file中读行。</li>\n<li>t label<br>if分支，从最后一行开始，条件一旦满足或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。</li>\n<li>T label<br>错误分支，从最后一行开始，一旦发生错误或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。</li>\n<li>w file<br>写并追加模板块到file末尾。</li>\n<li>W file<br>写并追加模板块的第一行到file末尾。</li>\n<li>!<br>表示后面的命令对所有没有被选定的行发生作用。</li>\n<li>s/re/string<br>用string替换正则表达式re。</li>\n<li>=<br>打印当前行号码。</li>\n<li>#把注释扩展到下一个换行符以前。<h3 id=\"以下的是替换标记\"><a href=\"#以下的是替换标记\" class=\"headerlink\" title=\"以下的是替换标记\"></a>以下的是替换标记</h3></li>\n</ul>\n</li>\n<li>g表示行内全面替换。</li>\n<li>p表示打印行。</li>\n<li>w表示把行写入一个文件。</li>\n<li>x表示互换模板块中的文本和缓冲区中的文本。</li>\n<li>y表示把一个字符翻译为另外的字符（但是不用于正则表达式）</li>\n</ul>\n<h2 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"选项\"></a>选项</h2><p><code>-e command, --expression=command</code><br>允许多台编辑。</p>\n<ul>\n<li>-h, –help<br>打印帮助，并显示bug列表的地址。</li>\n<li>-n, –quiet, –silent<br>取消默认输出。</li>\n<li>-f, –filer=script-file<br>引导sed脚本文件名。</li>\n<li>-V, –version<br>打印版本和版权信息。</li>\n</ul>\n<h2 id=\"元字符集\"><a href=\"#元字符集\" class=\"headerlink\" title=\"元字符集^\"></a>元字符集^</h2><p>锚定行的开始 如：/^sed/匹配所有以sed开头的行。<br>$</p>\n<ul>\n<li>锚定行的结束 如：/sed$/匹配所有以sed结尾的行。<br>.</li>\n<li>匹配一个非换行符的字符 如：/s.d/匹配s后接一个任意字符，然后是d。<br>*</li>\n<li>匹配零或多个字符 如：/*sed/匹配所有模板是一个或多个空格后紧跟sed的行。<br>[]</li>\n<li>匹配一个指定范围内的字符，如/[Ss]ed/匹配sed和Sed。<br>[^]</li>\n<li>匹配一个不在指定范围内的字符，如：/[^A-RT-Z]ed/匹配不包含A-R和T-Z的一个字母开头，紧跟ed的行。<br>(..)</li>\n<li>保存匹配的字符，如s/(love)able/\\1rs，loveable被替换成lovers。<br>&amp;</li>\n<li>保存搜索字符用来替换其他字符，如s/love/<strong>&amp;</strong>/，love这成<strong>love</strong>。<br>\\&lt;</li>\n<li>锚定单词的开始，如:/\\<love 匹配包含以love开头的单词的行。=\"\" \\=\"\"></love></li>\n<li>锚定单词的结束，如/love>/匹配包含以love结尾的单词的行。<br>x{m}</li>\n<li>重复字符x，m次，如：/o{5}/匹配包含5个o的行。<br>x{m,}</li>\n<li>重复字符x,至少m次，如：/o{5,}/匹配至少有5个o的行。<br>x{m,n}</li>\n<li>重复字符x，至少m次，不多于n次，如：/o{5,10}/匹配5–10个o的行。<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><h3 id=\"删除：d命令\"><a href=\"#删除：d命令\" class=\"headerlink\" title=\"删除：d命令\"></a>删除：d命令</h3></li>\n<li>$ sed ‘2d’ example—–删除example文件的第二行。</li>\n<li>$ sed ‘2,$d’ example—–删除example文件的第二行到末尾所有行。</li>\n<li>$ sed ‘$d’ example—–删除example文件的最后一行。</li>\n<li>$ sed ‘/test/‘d example—–删除example文件所有包含test的行。<h3 id=\"替换：s命令\"><a href=\"#替换：s命令\" class=\"headerlink\" title=\"替换：s命令\"></a>替换：s命令</h3></li>\n<li>$ sed ‘s/test/mytest/g’ example—–在整行范围内把test替换为mytest。如果没有g标记，则只有每行第一个匹配的test被替换成mytest。</li>\n<li>$ sed -n ‘s/^test/mytest/p’ example—–(-n)选项和p标志一起使用表示只打印那些发生替换的行。也就是说，如果某一行开头的test被替换成mytest，就打印它。</li>\n<li>$ sed ‘s/^192.168.0.1/&amp;localhost/‘ example—–&amp;符号表示替换换字符串中被找到的部份。所有以192.168.0.1开头的行都会被替换成它自已加 localhost，变成192.168.0.1localhost。</li>\n<li>$ sed -n ‘s/(love)able/\\1rs/p’ example—–love被标记为1，所有loveable会被替换成lovers，而且替换的行会被打印出来。</li>\n<li>$ sed ‘s#10#100#g’ example—–不论什么字符，紧跟着s命令的都被认为是新的分隔符，所以，“#”在这里是分隔符，代替了默认的“/”分隔符。表示把所有10替换成100。<br>选定行的范围：逗号</li>\n<li>$ sed -n ‘/test/,/check/p’ example—–所有在模板test和check所确定的范围内的行都被打印。</li>\n<li>$ sed -n ‘5,/^test/p’ example—–打印从第五行开始到第一个包含以test开始的行之间的所有行。</li>\n<li>$ sed ‘/test/,/check/s/$/sed test/‘ example—–对于模板test和west之间的行，每行的末尾用字符串sed test替换。<h3 id=\"多点编辑：e命令\"><a href=\"#多点编辑：e命令\" class=\"headerlink\" title=\"多点编辑：e命令\"></a>多点编辑：e命令</h3></li>\n<li>$ sed -e ‘1,5d’ -e ‘s/test/check/‘ example—–(-e)选项允许在同一行里执行多条命令。如例子所示，第一条命令删除1至5行，第二条命令用check替换test。命令的执 行顺序对结果有影响。如果两个命令都是替换命令，那么第一个替换命令将影响第二个替换命令的结果。</li>\n<li>$ sed –expression=’s/test/check/‘ –expression=’/love/d’ example—–一个比-e更好的命令是–expression。它能给sed表达式赋值。<h3 id=\"从文件读入：r命令\"><a href=\"#从文件读入：r命令\" class=\"headerlink\" title=\"从文件读入：r命令\"></a>从文件读入：r命令</h3></li>\n<li>$ sed ‘/test/r file’ example—–file里的内容被读进来，显示在与test匹配的行后面，如果匹配多行，则file的内容将显示在所有匹配行的下面。<h3 id=\"写入文件：w命令\"><a href=\"#写入文件：w命令\" class=\"headerlink\" title=\"写入文件：w命令\"></a>写入文件：w命令</h3></li>\n<li><p>$ sed -n ‘/test/w file’ example—–在example中所有包含test的行都被写入file里。</p>\n<h3 id=\"追加命令：a命令\"><a href=\"#追加命令：a命令\" class=\"headerlink\" title=\"追加命令：a命令\"></a>追加命令：a命令</h3></li>\n<li><p>$ sed ‘/^test/a\\—&gt;this is a example’ example    ‘—–&gt;this is a example’被追加到以test开头的行后面，sed要求命令a后面有一个反斜杠。</p>\n<h3 id=\"插入：i命令\"><a href=\"#插入：i命令\" class=\"headerlink\" title=\"插入：i命令\"></a>插入：i命令</h3></li>\n<li>$ sed ‘/test/i\\<br>new line<br>————————-‘ example<br>如果test被匹配，则把反斜杠后面的文本插入到匹配行的前面。<br>下一个：n命令</li>\n<li><p>$ sed ‘/test/{ n; s/aa/bb/; }’ example—–如果test被匹配，则移动到匹配行的下一行，替换这一行的aa，变为bb，并打印该行，然后继续。<br>变形：y命令</p>\n</li>\n<li><p>$ sed ‘1,10y/abcde/ABCDE/‘ example—–把1–10行内所有abcde转变为大写，注意，正则表达式元字符不能使用这个命令。<br>退出：q命令</p>\n</li>\n<li>$ sed ‘10q’ example—–打印完第10行后，退出sed。<br>保持和获取：h命令和G命令</li>\n<li>$ sed -e ‘/test/h’ -e ‘$G example—–在sed处理文件的时候，每一行都被保存在一个叫模式空间的临时缓冲区中，除非行被删除或者输出被取消，否则所有被处理的行都将 打印在屏幕上。接着模式空间被清空，并存入新的一行等待处理。在这个例子里，匹配test的行被找到后，将存入模式空间，h命令将其复制并存入一个称为保 持缓存区的特殊缓冲区内。第二条语句的意思是，当到达最后一行后，G命令取出保持缓冲区的行，然后把它放回模式空间中，且追加到现在已经存在于模式空间中 的行的末尾。在这个例子中就是追加到最后一行。简单来说，任何包含test的行都被复制并追加到该文件的末尾。<br>保持和互换：h命令和x命令</li>\n<li>$ sed -e ‘/test/h’ -e ‘/check/x’ example —–互换模式空间和保持缓冲区的内容。也就是把包含test与check的行互换。<h3 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h3>Sed脚本是一个sed的命令清单，启动Sed时以-f选项引导脚本文件名。Sed对于脚本中输入的命令非常挑剔，在命令的末尾不能有任何空白或文本，如果在一行中有多个命令，要用分号分隔。以#开头的行为注释行，且不能跨行。</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"Sed简介\"><a href=\"#Sed简介\" class=\"headerlink\" title=\"Sed简介\"></a>Sed简介</h1><p>sed 是一种在线编辑器，它一次处理一行内容。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有 改变，除非你使用重定向存储输出。Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。以下介绍的是Gnu版本的Sed 3.02。做备份,以后速查用.<br>","more":"</p>\n<h2 id=\"定址\"><a href=\"#定址\" class=\"headerlink\" title=\"定址\"></a>定址</h2><p>可以通过定址来定位你所希望编辑的行，该地址用数字构成，用逗号分隔的两个行数表示以这两行为起止的行的范围（包括行数表示的那两行）。如1，3表示1，2，3行，美元符号($)表示最后一行。范围可以通过数据，正则表达式或者二者结合的方式确定 。</p>\n<h2 id=\"Sed命令\"><a href=\"#Sed命令\" class=\"headerlink\" title=\"Sed命令\"></a>Sed命令</h2><p>调用sed命令有两种形式：</p>\n<ul>\n<li>sed [options] ‘command’ file(s)</li>\n<li>sed [options] -f scriptfile file(s)<ul>\n<li>a<br>在当前行后面加入一行文本。</li>\n<li>b lable<br>分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。</li>\n<li>c<br>用新的文本改变本行的文本。</li>\n<li>d<br>从模板块（Pattern space）位置删除行。</li>\n<li>D<br>删除模板块的第一行。</li>\n<li>i<br>在当前行上面插入文本。</li>\n<li>h<br>拷贝模板块的内容到内存中的缓冲区。</li>\n<li>H<br>追加模板块的内容到内存中的缓冲区</li>\n<li>g<br>获得内存缓冲区的内容，并替代当前模板块中的文本。</li>\n<li>G<br>获得内存缓冲区的内容，并追加到当前模板块文本的后面。</li>\n<li>l<br>列表不能打印字符的清单。</li>\n<li>n<br>读取下一个输入行，用下一个命令处理新的行而不是用第一个命令。</li>\n<li>N<br>追加下一个输入行到模板块后面并在二者间嵌入一个新行，改变当前行号码。</li>\n<li>p<br>打印模板块的行。</li>\n<li>P（大写）<br>打印模板块的第一行。</li>\n<li>q<br>退出Sed。</li>\n<li>r file<br>从file中读行。</li>\n<li>t label<br>if分支，从最后一行开始，条件一旦满足或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。</li>\n<li>T label<br>错误分支，从最后一行开始，一旦发生错误或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。</li>\n<li>w file<br>写并追加模板块到file末尾。</li>\n<li>W file<br>写并追加模板块的第一行到file末尾。</li>\n<li>!<br>表示后面的命令对所有没有被选定的行发生作用。</li>\n<li>s/re/string<br>用string替换正则表达式re。</li>\n<li>=<br>打印当前行号码。</li>\n<li>#把注释扩展到下一个换行符以前。<h3 id=\"以下的是替换标记\"><a href=\"#以下的是替换标记\" class=\"headerlink\" title=\"以下的是替换标记\"></a>以下的是替换标记</h3></li>\n</ul>\n</li>\n<li>g表示行内全面替换。</li>\n<li>p表示打印行。</li>\n<li>w表示把行写入一个文件。</li>\n<li>x表示互换模板块中的文本和缓冲区中的文本。</li>\n<li>y表示把一个字符翻译为另外的字符（但是不用于正则表达式）</li>\n</ul>\n<h2 id=\"选项\"><a href=\"#选项\" class=\"headerlink\" title=\"选项\"></a>选项</h2><p><code>-e command, --expression=command</code><br>允许多台编辑。</p>\n<ul>\n<li>-h, –help<br>打印帮助，并显示bug列表的地址。</li>\n<li>-n, –quiet, –silent<br>取消默认输出。</li>\n<li>-f, –filer=script-file<br>引导sed脚本文件名。</li>\n<li>-V, –version<br>打印版本和版权信息。</li>\n</ul>\n<h2 id=\"元字符集\"><a href=\"#元字符集\" class=\"headerlink\" title=\"元字符集^\"></a>元字符集^</h2><p>锚定行的开始 如：/^sed/匹配所有以sed开头的行。<br>$</p>\n<ul>\n<li>锚定行的结束 如：/sed$/匹配所有以sed结尾的行。<br>.</li>\n<li>匹配一个非换行符的字符 如：/s.d/匹配s后接一个任意字符，然后是d。<br>*</li>\n<li>匹配零或多个字符 如：/*sed/匹配所有模板是一个或多个空格后紧跟sed的行。<br>[]</li>\n<li>匹配一个指定范围内的字符，如/[Ss]ed/匹配sed和Sed。<br>[^]</li>\n<li>匹配一个不在指定范围内的字符，如：/[^A-RT-Z]ed/匹配不包含A-R和T-Z的一个字母开头，紧跟ed的行。<br>(..)</li>\n<li>保存匹配的字符，如s/(love)able/\\1rs，loveable被替换成lovers。<br>&amp;</li>\n<li>保存搜索字符用来替换其他字符，如s/love/<strong>&amp;</strong>/，love这成<strong>love</strong>。<br>\\&lt;</li>\n<li>锚定单词的开始，如:/\\<love 匹配包含以love开头的单词的行。=\"\" \\=\"\"></love></li>\n<li>锚定单词的结束，如/love>/匹配包含以love结尾的单词的行。<br>x{m}</li>\n<li>重复字符x，m次，如：/o{5}/匹配包含5个o的行。<br>x{m,}</li>\n<li>重复字符x,至少m次，如：/o{5,}/匹配至少有5个o的行。<br>x{m,n}</li>\n<li>重复字符x，至少m次，不多于n次，如：/o{5,10}/匹配5–10个o的行。<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><h3 id=\"删除：d命令\"><a href=\"#删除：d命令\" class=\"headerlink\" title=\"删除：d命令\"></a>删除：d命令</h3></li>\n<li>$ sed ‘2d’ example—–删除example文件的第二行。</li>\n<li>$ sed ‘2,$d’ example—–删除example文件的第二行到末尾所有行。</li>\n<li>$ sed ‘$d’ example—–删除example文件的最后一行。</li>\n<li>$ sed ‘/test/‘d example—–删除example文件所有包含test的行。<h3 id=\"替换：s命令\"><a href=\"#替换：s命令\" class=\"headerlink\" title=\"替换：s命令\"></a>替换：s命令</h3></li>\n<li>$ sed ‘s/test/mytest/g’ example—–在整行范围内把test替换为mytest。如果没有g标记，则只有每行第一个匹配的test被替换成mytest。</li>\n<li>$ sed -n ‘s/^test/mytest/p’ example—–(-n)选项和p标志一起使用表示只打印那些发生替换的行。也就是说，如果某一行开头的test被替换成mytest，就打印它。</li>\n<li>$ sed ‘s/^192.168.0.1/&amp;localhost/‘ example—–&amp;符号表示替换换字符串中被找到的部份。所有以192.168.0.1开头的行都会被替换成它自已加 localhost，变成192.168.0.1localhost。</li>\n<li>$ sed -n ‘s/(love)able/\\1rs/p’ example—–love被标记为1，所有loveable会被替换成lovers，而且替换的行会被打印出来。</li>\n<li>$ sed ‘s#10#100#g’ example—–不论什么字符，紧跟着s命令的都被认为是新的分隔符，所以，“#”在这里是分隔符，代替了默认的“/”分隔符。表示把所有10替换成100。<br>选定行的范围：逗号</li>\n<li>$ sed -n ‘/test/,/check/p’ example—–所有在模板test和check所确定的范围内的行都被打印。</li>\n<li>$ sed -n ‘5,/^test/p’ example—–打印从第五行开始到第一个包含以test开始的行之间的所有行。</li>\n<li>$ sed ‘/test/,/check/s/$/sed test/‘ example—–对于模板test和west之间的行，每行的末尾用字符串sed test替换。<h3 id=\"多点编辑：e命令\"><a href=\"#多点编辑：e命令\" class=\"headerlink\" title=\"多点编辑：e命令\"></a>多点编辑：e命令</h3></li>\n<li>$ sed -e ‘1,5d’ -e ‘s/test/check/‘ example—–(-e)选项允许在同一行里执行多条命令。如例子所示，第一条命令删除1至5行，第二条命令用check替换test。命令的执 行顺序对结果有影响。如果两个命令都是替换命令，那么第一个替换命令将影响第二个替换命令的结果。</li>\n<li>$ sed –expression=’s/test/check/‘ –expression=’/love/d’ example—–一个比-e更好的命令是–expression。它能给sed表达式赋值。<h3 id=\"从文件读入：r命令\"><a href=\"#从文件读入：r命令\" class=\"headerlink\" title=\"从文件读入：r命令\"></a>从文件读入：r命令</h3></li>\n<li>$ sed ‘/test/r file’ example—–file里的内容被读进来，显示在与test匹配的行后面，如果匹配多行，则file的内容将显示在所有匹配行的下面。<h3 id=\"写入文件：w命令\"><a href=\"#写入文件：w命令\" class=\"headerlink\" title=\"写入文件：w命令\"></a>写入文件：w命令</h3></li>\n<li><p>$ sed -n ‘/test/w file’ example—–在example中所有包含test的行都被写入file里。</p>\n<h3 id=\"追加命令：a命令\"><a href=\"#追加命令：a命令\" class=\"headerlink\" title=\"追加命令：a命令\"></a>追加命令：a命令</h3></li>\n<li><p>$ sed ‘/^test/a\\—&gt;this is a example’ example    ‘—–&gt;this is a example’被追加到以test开头的行后面，sed要求命令a后面有一个反斜杠。</p>\n<h3 id=\"插入：i命令\"><a href=\"#插入：i命令\" class=\"headerlink\" title=\"插入：i命令\"></a>插入：i命令</h3></li>\n<li>$ sed ‘/test/i\\<br>new line<br>————————-‘ example<br>如果test被匹配，则把反斜杠后面的文本插入到匹配行的前面。<br>下一个：n命令</li>\n<li><p>$ sed ‘/test/{ n; s/aa/bb/; }’ example—–如果test被匹配，则移动到匹配行的下一行，替换这一行的aa，变为bb，并打印该行，然后继续。<br>变形：y命令</p>\n</li>\n<li><p>$ sed ‘1,10y/abcde/ABCDE/‘ example—–把1–10行内所有abcde转变为大写，注意，正则表达式元字符不能使用这个命令。<br>退出：q命令</p>\n</li>\n<li>$ sed ‘10q’ example—–打印完第10行后，退出sed。<br>保持和获取：h命令和G命令</li>\n<li>$ sed -e ‘/test/h’ -e ‘$G example—–在sed处理文件的时候，每一行都被保存在一个叫模式空间的临时缓冲区中，除非行被删除或者输出被取消，否则所有被处理的行都将 打印在屏幕上。接着模式空间被清空，并存入新的一行等待处理。在这个例子里，匹配test的行被找到后，将存入模式空间，h命令将其复制并存入一个称为保 持缓存区的特殊缓冲区内。第二条语句的意思是，当到达最后一行后，G命令取出保持缓冲区的行，然后把它放回模式空间中，且追加到现在已经存在于模式空间中 的行的末尾。在这个例子中就是追加到最后一行。简单来说，任何包含test的行都被复制并追加到该文件的末尾。<br>保持和互换：h命令和x命令</li>\n<li>$ sed -e ‘/test/h’ -e ‘/check/x’ example —–互换模式空间和保持缓冲区的内容。也就是把包含test与check的行互换。<h3 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h3>Sed脚本是一个sed的命令清单，启动Sed时以-f选项引导脚本文件名。Sed对于脚本中输入的命令非常挑剔，在命令的末尾不能有任何空白或文本，如果在一行中有多个命令，要用分号分隔。以#开头的行为注释行，且不能跨行。</li>\n</ul>"},{"title":"终于有了自己的博客","date":"2017-08-27T06:05:14.000Z","_content":"  终于有了自己的博客。感谢网络，感谢爱分享的人。  \n  搭建博客时候参考的帖子：  \n  [hexo从零开始到搭建完整](http://visugar.com/2017/05/04/20170504SetUpHexoBlog/)  \n  [Hexo安装和配置](http://www.jianshu.com/p/b7886271e21a)  \n  [Hexo搭建Github-Pages博客填坑教程](http://www.jianshu.com/p/35e197cb1273)  \n  [主题nexT使用指南](http://theme-next.iissnan.com/getting-started.html)\n\n  自己碰到的坑  \n  - 安装hexo后启动时,访问localhost:4000网页没反应 ```替换端口号后解决了```\n  - rss 链接出现问题,在[Hexo搭建Github-Pages博客填坑教程](http://www.jianshu.com/p/35e197cb1273) 中找到了解决办法\n  - hueman 主题下载后启动错误,这个没解决,替换找别的主题了。\n\n\n\n\n\n\n","source":"_posts/终于有了自己的博客.md","raw":"---\ntitle: 终于有了自己的博客\ndate: 2017-08-27 14:05:14\ncategories: 随笔\ntags: \n---\n  终于有了自己的博客。感谢网络，感谢爱分享的人。  \n  搭建博客时候参考的帖子：  \n  [hexo从零开始到搭建完整](http://visugar.com/2017/05/04/20170504SetUpHexoBlog/)  \n  [Hexo安装和配置](http://www.jianshu.com/p/b7886271e21a)  \n  [Hexo搭建Github-Pages博客填坑教程](http://www.jianshu.com/p/35e197cb1273)  \n  [主题nexT使用指南](http://theme-next.iissnan.com/getting-started.html)\n\n  自己碰到的坑  \n  - 安装hexo后启动时,访问localhost:4000网页没反应 ```替换端口号后解决了```\n  - rss 链接出现问题,在[Hexo搭建Github-Pages博客填坑教程](http://www.jianshu.com/p/35e197cb1273) 中找到了解决办法\n  - hueman 主题下载后启动错误,这个没解决,替换找别的主题了。\n\n\n\n\n\n\n","slug":"终于有了自己的博客","published":1,"updated":"2017-09-03T15:22:52.890Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9wugp06000yh4v7l7vqmwx7","content":"<p>  终于有了自己的博客。感谢网络，感谢爱分享的人。<br>  搭建博客时候参考的帖子：<br>  <a href=\"http://visugar.com/2017/05/04/20170504SetUpHexoBlog/\" target=\"_blank\" rel=\"external\">hexo从零开始到搭建完整</a><br>  <a href=\"http://www.jianshu.com/p/b7886271e21a\" target=\"_blank\" rel=\"external\">Hexo安装和配置</a><br>  <a href=\"http://www.jianshu.com/p/35e197cb1273\" target=\"_blank\" rel=\"external\">Hexo搭建Github-Pages博客填坑教程</a><br>  <a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\" rel=\"external\">主题nexT使用指南</a></p>\n<p>  自己碰到的坑  </p>\n<ul>\n<li>安装hexo后启动时,访问localhost:4000网页没反应 <code>替换端口号后解决了</code></li>\n<li>rss 链接出现问题,在<a href=\"http://www.jianshu.com/p/35e197cb1273\" target=\"_blank\" rel=\"external\">Hexo搭建Github-Pages博客填坑教程</a> 中找到了解决办法</li>\n<li>hueman 主题下载后启动错误,这个没解决,替换找别的主题了。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>  终于有了自己的博客。感谢网络，感谢爱分享的人。<br>  搭建博客时候参考的帖子：<br>  <a href=\"http://visugar.com/2017/05/04/20170504SetUpHexoBlog/\" target=\"_blank\" rel=\"external\">hexo从零开始到搭建完整</a><br>  <a href=\"http://www.jianshu.com/p/b7886271e21a\" target=\"_blank\" rel=\"external\">Hexo安装和配置</a><br>  <a href=\"http://www.jianshu.com/p/35e197cb1273\" target=\"_blank\" rel=\"external\">Hexo搭建Github-Pages博客填坑教程</a><br>  <a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\" rel=\"external\">主题nexT使用指南</a></p>\n<p>  自己碰到的坑  </p>\n<ul>\n<li>安装hexo后启动时,访问localhost:4000网页没反应 <code>替换端口号后解决了</code></li>\n<li>rss 链接出现问题,在<a href=\"http://www.jianshu.com/p/35e197cb1273\" target=\"_blank\" rel=\"external\">Hexo搭建Github-Pages博客填坑教程</a> 中找到了解决办法</li>\n<li>hueman 主题下载后启动错误,这个没解决,替换找别的主题了。</li>\n</ul>\n"},{"title":"大数据02-05-shell编程-awk命令","toc":true,"date":"2017-11-06T15:25:05.000Z","scaffolds":null,"_content":"# 简介\nawk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。\n\nawk有3个不同版本: awk、nawk和gawk，未作特别说明，一般指gawk，gawk 是 AWK 的 GNU 版本。\n\nawk其名称得自于它的创始人 Alfred Aho 、Peter Weinberger 和 Brian Kernighan 姓氏的首个字母。实际上 AWK 的确拥有自己的语言： AWK 程序设计语言 ， 三位创建者已将它正式定义为“样式扫描和处理语言”。它允许您创建简短的程序，这些程序读取输入文件、为数据排序、处理数据、对输入执行计算以及生成报表，还有无数其他的功能。\n\n \n\n# 使用方法\n> `awk '{pattern + action}' {filenames}`\n\n尽管操作可能会很复杂，但语法总是这样，其中 pattern 表示 AWK 在数据中查找的内容，而 action 是在找到匹配内容时所执行的一系列命令。花括号（{}）不需要在程序中始终出现，但它们用于根据特定的模式对一系列指令进行分组。 pattern就是要表示的正则表达式，用斜杠括起来。\n\nawk语言的最基本功能是在文件或者字符串中基于指定规则浏览和抽取信息，awk抽取信息后，才能进行其他文本操作。完整的awk脚本通常用来格式化文本文件中的信息。\n\n通常，awk是以文件的一行为处理单位的。awk每接收文件的一行，然后执行相应的命令，来处理文本。\n\n \n<!--more -->\n## 调用awk\n\n有三种方式调用awk\n\n \n### 1.命令行方式\n> awk [-F  field-separator]  'commands'  input-file(s)\n其中，commands 是真正awk命令，[-F域分隔符]是可选的。 input-file(s) 是待处理的文件。\n在awk中，文件的每一行中，由域分隔符分开的每一项称为一个域。通常，在不指名-F域分隔符的情况下，默认的域分隔符是空格。\n\n### 2.shell脚本方式\n将所有的awk命令插入一个文件，并使awk程序可执行，然后awk命令解释器作为脚本的首行，一遍通过键入脚本名称来调用。\n相当于shell脚本首行的：#!/bin/sh\n可以换成：#!/bin/awk\n\n### 3.将所有的awk命令插入一个单独文件，然后调用：\n> awk -f awk-script-file input-file(s)\n其中，-f选项加载awk-script-file中的awk脚本，input-file(s)跟上面的是一样的。\n \n 本章重点介绍命令行方式。\n\n \n\n## 入门实例\n假设last -n 5的输出如下\n\n> [root@www ~]# last -n 5 <==仅取出前五行\n\n```\nroot     pts/1   192.168.1.100  Tue Feb 10 11:21   still logged in\nroot     pts/1   192.168.1.100  Tue Feb 10 00:46 - 02:28  (01:41)\nroot     pts/1   192.168.1.100  Mon Feb  9 11:41 - 18:30  (06:48)\ndmtsai   pts/1   192.168.1.100  Mon Feb  9 11:41 - 11:41  (00:00)\nroot     tty1                   Fri Sep  5 14:09 - 14:10  (00:01)\n\n```\n如果只是显示最近登录的5个帐号\n\n```\n#last -n 5 | awk  '{print $1}'\nroot\nroot\nroot\ndmtsai\nroot\n\n```\nawk工作流程是这样的：读入有'\\n'换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域。默认域分隔符是\"空白键\" 或 \"[tab]键\",所以$1表示登录用户，$3表示登录用户ip,以此类推。\n\n \n\n如果只是显示/etc/passwd的账户\n\n```\n#cat /etc/passwd |awk  -F ':'  '{print $1}'  \nroot\ndaemon\nbin\nsys\n\n```\n这种是awk+action的示例，每行都会执行action{print $1}。\n\n> -F指定域分隔符为':'。\n\n \n\n如果只是显示/etc/passwd的账户和账户对应的shell,而账户与shell之间以tab键分割\n\n```\n#cat /etc/passwd |awk  -F ':'  '{print $1\"\\t\"$7}'\nroot    /bin/bash\ndaemon  /bin/sh\nbin     /bin/sh\nsys     /bin/sh\n\n``` \n\n如果只是显示/etc/passwd的账户和账户对应的shell,而账户与shell之间以逗号分割,而且在所有行添加列名name,shell,在最后一行添加\"blue,/bin/nosh\"。\n\n \n```\ncat /etc/passwd |awk  -F ':'  'BEGIN {print \"name,shell\"}  {print $1\",\"$7} END {print \"blue,/bin/nosh\"}'\nname,shell\nroot,/bin/bash\ndaemon,/bin/sh\nbin,/bin/sh\nsys,/bin/sh\n....\nblue,/bin/nosh\n\n``` \n\nawk工作流程是这样的：先执行BEGING，然后读取文件，读入有/n换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域,随后开始执行模式所对应的动作action。接着开始读入第二条记录······直到所有的记录都读完，最后执行END操作。\n\n \n\n搜索/etc/passwd有root关键字的所有行\n\n> #awk -F: '/root/' /etc/passwd\nroot:x:0:0:root:/root:/bin/bash\n这种是pattern的使用示例，匹配了pattern(这里是root)的行才会执行action(没有指定action，默认输出每行的内容)。\n\n搜索支持正则，例如找root开头的: ```awk -F: '/^root/' /etc/passwd```\n\n \n\n搜索/etc/passwd有root关键字的所有行，并显示对应的shell\n\n> # awk -F: '/root/{print $7}' /etc/passwd             \n/bin/bash\n 这里指定了action{print $7}\n\n \n\n## awk内置变量\nawk有许多内置变量用来设置环境信息，这些变量可以被改变，下面给出了最常用的一些变量。\n\n \n    ARGC               命令行参数个数\n    ARGV               命令行参数排列\n    ENVIRON            支持队列中系统环境变量的使用\n    FILENAME           awk浏览的文件名\n    FNR                浏览文件的记录数\n    FS                 设置输入域分隔符，等价于命令行 -F选项\n    NF                 浏览记录的域的个数\n    NR                 已读的记录数\n    OFS                输出域分隔符\n    ORS                输出记录分隔符\n    RS                 控制记录分隔符\n \n 此外,$0变量是指整条记录。$1表示当前行的第一个域,$2表示当前行的第二个域,......以此类推。\n\n \n\n统计/etc/passwd:文件名，每行的行号，每行的列数，对应的完整行内容:\n\n> #awk  -F ':'  '{print \"filename:\" FILENAME \",linenumber:\" NR \",columns:\" NF \",linecontent:\"$0}' /etc/passwd\n```\nfilename:/etc/passwd,linenumber:1,columns:7,linecontent:root:x:0:0:root:/root:/bin/bash\nfilename:/etc/passwd,linenumber:2,columns:7,linecontent:daemon:x:1:1:daemon:/usr/sbin:/bin/sh\nfilename:/etc/passwd,linenumber:3,columns:7,linecontent:bin:x:2:2:bin:/bin:/bin/sh\nfilename:/etc/passwd,linenumber:4,columns:7,linecontent:sys:x:3:3:sys:/dev:/bin/sh\n\n``` \n\n使用printf替代print,可以让代码更加简洁，易读\n\n > awk  -F ':'  '{printf(\"filename:%s,linenumber:%s,columns:%s,linecontent:%s\\n\",FILENAME,NR,NF,$0)}' /etc/passwd\n \n\n## print和printf\nawk中同时提供了print和printf两种打印输出的函数。\n\n其中print函数的参数可以是变量、数值或者字符串。字符串必须用双引号引用，参数用逗号分隔。如果没有逗号，参数就串联在一起而无法区分。这里，逗号的作用与输出文件的分隔符的作用是一样的，只是后者是空格而已。\n\nprintf函数，其用法和c语言中printf基本相似,可以格式化字符串,输出复杂时，printf更加好用，代码更易懂。\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% \n\n#  awk编程\n 变量和赋值\n\n除了awk的内置变量，awk还可以自定义变量。\n\n## 下面统计/etc/passwd的账户人数\n```\n\nawk '{count++;print $0;} END{print \"user count is \", count}' /etc/passwd\nroot:x:0:0:root:/root:/bin/bash\n......\nuser count is  40\n\n```\n\ncount是自定义变量。之前的action{}里都是只有一个print,其实print只是一个语句，而action{}可以有多个语句，以;号隔开。\n\n \n\n这里没有初始化count，虽然默认是0，但是妥当的做法还是初始化为0:\n\n```\nawk 'BEGIN {count=0;print \"[start]user count is \", count} {count=count+1;print $0;} END{print \"[end]user count is \", count}' /etc/passwd\n[start]user count is  0\nroot:x:0:0:root:/root:/bin/bash\n...\n[end]user count is  40\n\n``` \n\n统计某个文件夹下的文件占用的字节数\n\n```\nls -l |awk 'BEGIN {size=0;} {size=size+$5;} END{print \"[end]size is \", size}'\n[end]size is  8657198\n\n``` \n\n如果以M为单位显示:\n\n```\nls -l |awk 'BEGIN {size=0;} {size=size+$5;} END{print \"[end]size is \", size/1024/1024,\"M\"}' \n[end]size is  8.25889 M\n\n```\n注意，统计不包括文件夹的子目录。\n\n \n\n### 条件语句\n\n awk中的条件语句是从C语言中借鉴来的，见如下声明方式：\n\n \n```\nif (expression) {\n    statement;\n    statement;\n    ... ...\n}\n\n\nif (expression) {\n    statement;\n} else {\n    statement2;\n}\n\nif (expression) {\n    statement1;\n} else if (expression1) {\n    statement2;\n} else {\n    statement3;\n}\n \n ```\n\n统计某个文件夹下的文件占用的字节数,过滤4096大小的文件(一般都是文件夹):\n\n```\nls -l |awk 'BEGIN {size=0;print \"[start]size is \", size} {if($5!=4096){size=size+$5;}} END{print \"[end]size is \", size/1024/1024,\"M\"}' \n[end]size is  8.22339 M\n\n``` \n\n### 循环语句\n\nawk中的循环语句同样借鉴于C语言，支持while、do/while、for、break、continue，这些关键字的语义和C语言中的语义完全相同。\n\n \n\n### 数组\n\n  因为awk中数组的下标可以是数字和字母，数组的下标通常被称为关键字(key)。值和关键字都存储在内部的一张针对key/value应用hash的表格里。由于hash不是顺序存储，因此在显示数组内容时会发现，它们并不是按照你预料的顺序显示出来的。数组和变量一样，都是在使用时自动创建的，awk也同样会自动判断其存储的是数字还是字符串。一般而言，awk中的数组用来从记录中收集信息，可以用于计算总和、统计单词以及跟踪模板被匹配的次数等等。\n\n \n\n显示/etc/passwd的账户\n\n \n```\nawk -F ':' 'BEGIN {count=0;} {name[count] = $1;count++;}; END{for (i = 0; i < NR; i++) print i, name[i]}' /etc/passwd\n0 root\n1 daemon\n2 bin\n3 sys\n4 sync\n5 games\n......\n\n``` \n这里使用for循环遍历数组\n\n \n\nawk编程的内容极多，这里只罗列简单常用的用法，更多请参考 http://www.gnu.org/software/gawk/manual/gawk.html","source":"_posts/大数据02-05-shell编程-awk命令.md","raw":"---\ntitle: 大数据02-05-shell编程-awk命令\ncategories: 学习\ntags:\n  - 大数据\n  - linux\n  - centos7\n  - linux命令\ntoc: true\ndate: 2017-11-06 23:25:05\nscaffolds:\n---\n# 简介\nawk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。\n\nawk有3个不同版本: awk、nawk和gawk，未作特别说明，一般指gawk，gawk 是 AWK 的 GNU 版本。\n\nawk其名称得自于它的创始人 Alfred Aho 、Peter Weinberger 和 Brian Kernighan 姓氏的首个字母。实际上 AWK 的确拥有自己的语言： AWK 程序设计语言 ， 三位创建者已将它正式定义为“样式扫描和处理语言”。它允许您创建简短的程序，这些程序读取输入文件、为数据排序、处理数据、对输入执行计算以及生成报表，还有无数其他的功能。\n\n \n\n# 使用方法\n> `awk '{pattern + action}' {filenames}`\n\n尽管操作可能会很复杂，但语法总是这样，其中 pattern 表示 AWK 在数据中查找的内容，而 action 是在找到匹配内容时所执行的一系列命令。花括号（{}）不需要在程序中始终出现，但它们用于根据特定的模式对一系列指令进行分组。 pattern就是要表示的正则表达式，用斜杠括起来。\n\nawk语言的最基本功能是在文件或者字符串中基于指定规则浏览和抽取信息，awk抽取信息后，才能进行其他文本操作。完整的awk脚本通常用来格式化文本文件中的信息。\n\n通常，awk是以文件的一行为处理单位的。awk每接收文件的一行，然后执行相应的命令，来处理文本。\n\n \n<!--more -->\n## 调用awk\n\n有三种方式调用awk\n\n \n### 1.命令行方式\n> awk [-F  field-separator]  'commands'  input-file(s)\n其中，commands 是真正awk命令，[-F域分隔符]是可选的。 input-file(s) 是待处理的文件。\n在awk中，文件的每一行中，由域分隔符分开的每一项称为一个域。通常，在不指名-F域分隔符的情况下，默认的域分隔符是空格。\n\n### 2.shell脚本方式\n将所有的awk命令插入一个文件，并使awk程序可执行，然后awk命令解释器作为脚本的首行，一遍通过键入脚本名称来调用。\n相当于shell脚本首行的：#!/bin/sh\n可以换成：#!/bin/awk\n\n### 3.将所有的awk命令插入一个单独文件，然后调用：\n> awk -f awk-script-file input-file(s)\n其中，-f选项加载awk-script-file中的awk脚本，input-file(s)跟上面的是一样的。\n \n 本章重点介绍命令行方式。\n\n \n\n## 入门实例\n假设last -n 5的输出如下\n\n> [root@www ~]# last -n 5 <==仅取出前五行\n\n```\nroot     pts/1   192.168.1.100  Tue Feb 10 11:21   still logged in\nroot     pts/1   192.168.1.100  Tue Feb 10 00:46 - 02:28  (01:41)\nroot     pts/1   192.168.1.100  Mon Feb  9 11:41 - 18:30  (06:48)\ndmtsai   pts/1   192.168.1.100  Mon Feb  9 11:41 - 11:41  (00:00)\nroot     tty1                   Fri Sep  5 14:09 - 14:10  (00:01)\n\n```\n如果只是显示最近登录的5个帐号\n\n```\n#last -n 5 | awk  '{print $1}'\nroot\nroot\nroot\ndmtsai\nroot\n\n```\nawk工作流程是这样的：读入有'\\n'换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域。默认域分隔符是\"空白键\" 或 \"[tab]键\",所以$1表示登录用户，$3表示登录用户ip,以此类推。\n\n \n\n如果只是显示/etc/passwd的账户\n\n```\n#cat /etc/passwd |awk  -F ':'  '{print $1}'  \nroot\ndaemon\nbin\nsys\n\n```\n这种是awk+action的示例，每行都会执行action{print $1}。\n\n> -F指定域分隔符为':'。\n\n \n\n如果只是显示/etc/passwd的账户和账户对应的shell,而账户与shell之间以tab键分割\n\n```\n#cat /etc/passwd |awk  -F ':'  '{print $1\"\\t\"$7}'\nroot    /bin/bash\ndaemon  /bin/sh\nbin     /bin/sh\nsys     /bin/sh\n\n``` \n\n如果只是显示/etc/passwd的账户和账户对应的shell,而账户与shell之间以逗号分割,而且在所有行添加列名name,shell,在最后一行添加\"blue,/bin/nosh\"。\n\n \n```\ncat /etc/passwd |awk  -F ':'  'BEGIN {print \"name,shell\"}  {print $1\",\"$7} END {print \"blue,/bin/nosh\"}'\nname,shell\nroot,/bin/bash\ndaemon,/bin/sh\nbin,/bin/sh\nsys,/bin/sh\n....\nblue,/bin/nosh\n\n``` \n\nawk工作流程是这样的：先执行BEGING，然后读取文件，读入有/n换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域,随后开始执行模式所对应的动作action。接着开始读入第二条记录······直到所有的记录都读完，最后执行END操作。\n\n \n\n搜索/etc/passwd有root关键字的所有行\n\n> #awk -F: '/root/' /etc/passwd\nroot:x:0:0:root:/root:/bin/bash\n这种是pattern的使用示例，匹配了pattern(这里是root)的行才会执行action(没有指定action，默认输出每行的内容)。\n\n搜索支持正则，例如找root开头的: ```awk -F: '/^root/' /etc/passwd```\n\n \n\n搜索/etc/passwd有root关键字的所有行，并显示对应的shell\n\n> # awk -F: '/root/{print $7}' /etc/passwd             \n/bin/bash\n 这里指定了action{print $7}\n\n \n\n## awk内置变量\nawk有许多内置变量用来设置环境信息，这些变量可以被改变，下面给出了最常用的一些变量。\n\n \n    ARGC               命令行参数个数\n    ARGV               命令行参数排列\n    ENVIRON            支持队列中系统环境变量的使用\n    FILENAME           awk浏览的文件名\n    FNR                浏览文件的记录数\n    FS                 设置输入域分隔符，等价于命令行 -F选项\n    NF                 浏览记录的域的个数\n    NR                 已读的记录数\n    OFS                输出域分隔符\n    ORS                输出记录分隔符\n    RS                 控制记录分隔符\n \n 此外,$0变量是指整条记录。$1表示当前行的第一个域,$2表示当前行的第二个域,......以此类推。\n\n \n\n统计/etc/passwd:文件名，每行的行号，每行的列数，对应的完整行内容:\n\n> #awk  -F ':'  '{print \"filename:\" FILENAME \",linenumber:\" NR \",columns:\" NF \",linecontent:\"$0}' /etc/passwd\n```\nfilename:/etc/passwd,linenumber:1,columns:7,linecontent:root:x:0:0:root:/root:/bin/bash\nfilename:/etc/passwd,linenumber:2,columns:7,linecontent:daemon:x:1:1:daemon:/usr/sbin:/bin/sh\nfilename:/etc/passwd,linenumber:3,columns:7,linecontent:bin:x:2:2:bin:/bin:/bin/sh\nfilename:/etc/passwd,linenumber:4,columns:7,linecontent:sys:x:3:3:sys:/dev:/bin/sh\n\n``` \n\n使用printf替代print,可以让代码更加简洁，易读\n\n > awk  -F ':'  '{printf(\"filename:%s,linenumber:%s,columns:%s,linecontent:%s\\n\",FILENAME,NR,NF,$0)}' /etc/passwd\n \n\n## print和printf\nawk中同时提供了print和printf两种打印输出的函数。\n\n其中print函数的参数可以是变量、数值或者字符串。字符串必须用双引号引用，参数用逗号分隔。如果没有逗号，参数就串联在一起而无法区分。这里，逗号的作用与输出文件的分隔符的作用是一样的，只是后者是空格而已。\n\nprintf函数，其用法和c语言中printf基本相似,可以格式化字符串,输出复杂时，printf更加好用，代码更易懂。\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% \n\n#  awk编程\n 变量和赋值\n\n除了awk的内置变量，awk还可以自定义变量。\n\n## 下面统计/etc/passwd的账户人数\n```\n\nawk '{count++;print $0;} END{print \"user count is \", count}' /etc/passwd\nroot:x:0:0:root:/root:/bin/bash\n......\nuser count is  40\n\n```\n\ncount是自定义变量。之前的action{}里都是只有一个print,其实print只是一个语句，而action{}可以有多个语句，以;号隔开。\n\n \n\n这里没有初始化count，虽然默认是0，但是妥当的做法还是初始化为0:\n\n```\nawk 'BEGIN {count=0;print \"[start]user count is \", count} {count=count+1;print $0;} END{print \"[end]user count is \", count}' /etc/passwd\n[start]user count is  0\nroot:x:0:0:root:/root:/bin/bash\n...\n[end]user count is  40\n\n``` \n\n统计某个文件夹下的文件占用的字节数\n\n```\nls -l |awk 'BEGIN {size=0;} {size=size+$5;} END{print \"[end]size is \", size}'\n[end]size is  8657198\n\n``` \n\n如果以M为单位显示:\n\n```\nls -l |awk 'BEGIN {size=0;} {size=size+$5;} END{print \"[end]size is \", size/1024/1024,\"M\"}' \n[end]size is  8.25889 M\n\n```\n注意，统计不包括文件夹的子目录。\n\n \n\n### 条件语句\n\n awk中的条件语句是从C语言中借鉴来的，见如下声明方式：\n\n \n```\nif (expression) {\n    statement;\n    statement;\n    ... ...\n}\n\n\nif (expression) {\n    statement;\n} else {\n    statement2;\n}\n\nif (expression) {\n    statement1;\n} else if (expression1) {\n    statement2;\n} else {\n    statement3;\n}\n \n ```\n\n统计某个文件夹下的文件占用的字节数,过滤4096大小的文件(一般都是文件夹):\n\n```\nls -l |awk 'BEGIN {size=0;print \"[start]size is \", size} {if($5!=4096){size=size+$5;}} END{print \"[end]size is \", size/1024/1024,\"M\"}' \n[end]size is  8.22339 M\n\n``` \n\n### 循环语句\n\nawk中的循环语句同样借鉴于C语言，支持while、do/while、for、break、continue，这些关键字的语义和C语言中的语义完全相同。\n\n \n\n### 数组\n\n  因为awk中数组的下标可以是数字和字母，数组的下标通常被称为关键字(key)。值和关键字都存储在内部的一张针对key/value应用hash的表格里。由于hash不是顺序存储，因此在显示数组内容时会发现，它们并不是按照你预料的顺序显示出来的。数组和变量一样，都是在使用时自动创建的，awk也同样会自动判断其存储的是数字还是字符串。一般而言，awk中的数组用来从记录中收集信息，可以用于计算总和、统计单词以及跟踪模板被匹配的次数等等。\n\n \n\n显示/etc/passwd的账户\n\n \n```\nawk -F ':' 'BEGIN {count=0;} {name[count] = $1;count++;}; END{for (i = 0; i < NR; i++) print i, name[i]}' /etc/passwd\n0 root\n1 daemon\n2 bin\n3 sys\n4 sync\n5 games\n......\n\n``` \n这里使用for循环遍历数组\n\n \n\nawk编程的内容极多，这里只罗列简单常用的用法，更多请参考 http://www.gnu.org/software/gawk/manual/gawk.html","slug":"大数据02-05-shell编程-awk命令","published":1,"updated":"2017-11-06T16:13:56.015Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9wugp0a0012h4v7u6gqkjrv","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>awk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。</p>\n<p>awk有3个不同版本: awk、nawk和gawk，未作特别说明，一般指gawk，gawk 是 AWK 的 GNU 版本。</p>\n<p>awk其名称得自于它的创始人 Alfred Aho 、Peter Weinberger 和 Brian Kernighan 姓氏的首个字母。实际上 AWK 的确拥有自己的语言： AWK 程序设计语言 ， 三位创建者已将它正式定义为“样式扫描和处理语言”。它允许您创建简短的程序，这些程序读取输入文件、为数据排序、处理数据、对输入执行计算以及生成报表，还有无数其他的功能。</p>\n<h1 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h1><blockquote>\n<p><code>awk &#39;{pattern + action}&#39; {filenames}</code></p>\n</blockquote>\n<p>尽管操作可能会很复杂，但语法总是这样，其中 pattern 表示 AWK 在数据中查找的内容，而 action 是在找到匹配内容时所执行的一系列命令。花括号（{}）不需要在程序中始终出现，但它们用于根据特定的模式对一系列指令进行分组。 pattern就是要表示的正则表达式，用斜杠括起来。</p>\n<p>awk语言的最基本功能是在文件或者字符串中基于指定规则浏览和抽取信息，awk抽取信息后，才能进行其他文本操作。完整的awk脚本通常用来格式化文本文件中的信息。</p>\n<p>通常，awk是以文件的一行为处理单位的。awk每接收文件的一行，然后执行相应的命令，来处理文本。</p>\n<a id=\"more\"></a>\n<h2 id=\"调用awk\"><a href=\"#调用awk\" class=\"headerlink\" title=\"调用awk\"></a>调用awk</h2><p>有三种方式调用awk</p>\n<h3 id=\"1-命令行方式\"><a href=\"#1-命令行方式\" class=\"headerlink\" title=\"1.命令行方式\"></a>1.命令行方式</h3><blockquote>\n<p>awk [-F  field-separator]  ‘commands’  input-file(s)<br>其中，commands 是真正awk命令，[-F域分隔符]是可选的。 input-file(s) 是待处理的文件。<br>在awk中，文件的每一行中，由域分隔符分开的每一项称为一个域。通常，在不指名-F域分隔符的情况下，默认的域分隔符是空格。</p>\n</blockquote>\n<h3 id=\"2-shell脚本方式\"><a href=\"#2-shell脚本方式\" class=\"headerlink\" title=\"2.shell脚本方式\"></a>2.shell脚本方式</h3><p>将所有的awk命令插入一个文件，并使awk程序可执行，然后awk命令解释器作为脚本的首行，一遍通过键入脚本名称来调用。<br>相当于shell脚本首行的：#!/bin/sh<br>可以换成：#!/bin/awk</p>\n<h3 id=\"3-将所有的awk命令插入一个单独文件，然后调用：\"><a href=\"#3-将所有的awk命令插入一个单独文件，然后调用：\" class=\"headerlink\" title=\"3.将所有的awk命令插入一个单独文件，然后调用：\"></a>3.将所有的awk命令插入一个单独文件，然后调用：</h3><blockquote>\n<p>awk -f awk-script-file input-file(s)<br>其中，-f选项加载awk-script-file中的awk脚本，input-file(s)跟上面的是一样的。</p>\n</blockquote>\n<p> 本章重点介绍命令行方式。</p>\n<h2 id=\"入门实例\"><a href=\"#入门实例\" class=\"headerlink\" title=\"入门实例\"></a>入门实例</h2><p>假设last -n 5的输出如下</p>\n<blockquote>\n<p>[root@www ~]# last -n 5 &lt;==仅取出前五行</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">root     pts/1   192.168.1.100  Tue Feb 10 11:21   still logged in</div><div class=\"line\">root     pts/1   192.168.1.100  Tue Feb 10 00:46 - 02:28  (01:41)</div><div class=\"line\">root     pts/1   192.168.1.100  Mon Feb  9 11:41 - 18:30  (06:48)</div><div class=\"line\">dmtsai   pts/1   192.168.1.100  Mon Feb  9 11:41 - 11:41  (00:00)</div><div class=\"line\">root     tty1                   Fri Sep  5 14:09 - 14:10  (00:01)</div></pre></td></tr></table></figure>\n<p>如果只是显示最近登录的5个帐号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">#last -n 5 | awk  &apos;&#123;print $1&#125;&apos;</div><div class=\"line\">root</div><div class=\"line\">root</div><div class=\"line\">root</div><div class=\"line\">dmtsai</div><div class=\"line\">root</div></pre></td></tr></table></figure>\n<p>awk工作流程是这样的：读入有’\\n’换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域。默认域分隔符是”空白键” 或 “[tab]键”,所以$1表示登录用户，$3表示登录用户ip,以此类推。</p>\n<p>如果只是显示/etc/passwd的账户</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">#cat /etc/passwd |awk  -F &apos;:&apos;  &apos;&#123;print $1&#125;&apos;  </div><div class=\"line\">root</div><div class=\"line\">daemon</div><div class=\"line\">bin</div><div class=\"line\">sys</div></pre></td></tr></table></figure>\n<p>这种是awk+action的示例，每行都会执行action{print $1}。</p>\n<blockquote>\n<p>-F指定域分隔符为’:’。</p>\n</blockquote>\n<p>如果只是显示/etc/passwd的账户和账户对应的shell,而账户与shell之间以tab键分割</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">#cat /etc/passwd |awk  -F &apos;:&apos;  &apos;&#123;print $1&quot;\\t&quot;$7&#125;&apos;</div><div class=\"line\">root    /bin/bash</div><div class=\"line\">daemon  /bin/sh</div><div class=\"line\">bin     /bin/sh</div><div class=\"line\">sys     /bin/sh</div><div class=\"line\"></div><div class=\"line\">``` </div><div class=\"line\"></div><div class=\"line\">如果只是显示/etc/passwd的账户和账户对应的shell,而账户与shell之间以逗号分割,而且在所有行添加列名name,shell,在最后一行添加&quot;blue,/bin/nosh&quot;。</div></pre></td></tr></table></figure>\n<p>cat /etc/passwd |awk  -F ‘:’  ‘BEGIN {print “name,shell”}  {print $1”,”$7} END {print “blue,/bin/nosh”}’<br>name,shell<br>root,/bin/bash<br>daemon,/bin/sh<br>bin,/bin/sh<br>sys,/bin/sh<br>….<br>blue,/bin/nosh</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">awk工作流程是这样的：先执行BEGING，然后读取文件，读入有/n换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域,随后开始执行模式所对应的动作action。接着开始读入第二条记录······直到所有的记录都读完，最后执行END操作。</div><div class=\"line\"></div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\">搜索/etc/passwd有root关键字的所有行</div><div class=\"line\"></div><div class=\"line\">&gt; #awk -F: &apos;/root/&apos; /etc/passwd</div><div class=\"line\">root:x:0:0:root:/root:/bin/bash</div><div class=\"line\">这种是pattern的使用示例，匹配了pattern(这里是root)的行才会执行action(没有指定action，默认输出每行的内容)。</div><div class=\"line\"></div><div class=\"line\">搜索支持正则，例如找root开头的: ```awk -F: &apos;/^root/&apos; /etc/passwd</div></pre></td></tr></table></figure>\n<p>搜索/etc/passwd有root关键字的所有行，并显示对应的shell</p>\n<blockquote>\n<h1 id=\"awk-F-‘-root-print-7-’-etc-passwd\"><a href=\"#awk-F-‘-root-print-7-’-etc-passwd\" class=\"headerlink\" title=\"awk -F: ‘/root/{print $7}’ /etc/passwd\"></a>awk -F: ‘/root/{print $7}’ /etc/passwd</h1><p>/bin/bash<br> 这里指定了action{print $7}</p>\n</blockquote>\n<h2 id=\"awk内置变量\"><a href=\"#awk内置变量\" class=\"headerlink\" title=\"awk内置变量\"></a>awk内置变量</h2><p>awk有许多内置变量用来设置环境信息，这些变量可以被改变，下面给出了最常用的一些变量。</p>\n<pre><code>ARGC               命令行参数个数\nARGV               命令行参数排列\nENVIRON            支持队列中系统环境变量的使用\nFILENAME           awk浏览的文件名\nFNR                浏览文件的记录数\nFS                 设置输入域分隔符，等价于命令行 -F选项\nNF                 浏览记录的域的个数\nNR                 已读的记录数\nOFS                输出域分隔符\nORS                输出记录分隔符\nRS                 控制记录分隔符\n</code></pre><p> 此外,$0变量是指整条记录。$1表示当前行的第一个域,$2表示当前行的第二个域,……以此类推。</p>\n<p>统计/etc/passwd:文件名，每行的行号，每行的列数，对应的完整行内容:</p>\n<blockquote>\n<p>#awk  -F ‘:’  ‘{print “filename:” FILENAME “,linenumber:” NR “,columns:” NF “,linecontent:”$0}’ /etc/passwd<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">filename:/etc/passwd,linenumber:1,columns:7,linecontent:root:x:0:0:root:/root:/bin/bash</div><div class=\"line\">filename:/etc/passwd,linenumber:2,columns:7,linecontent:daemon:x:1:1:daemon:/usr/sbin:/bin/sh</div><div class=\"line\">filename:/etc/passwd,linenumber:3,columns:7,linecontent:bin:x:2:2:bin:/bin:/bin/sh</div><div class=\"line\">filename:/etc/passwd,linenumber:4,columns:7,linecontent:sys:x:3:3:sys:/dev:/bin/sh</div><div class=\"line\"></div><div class=\"line\">``` </div><div class=\"line\"></div><div class=\"line\">使用printf替代print,可以让代码更加简洁，易读</div><div class=\"line\"></div><div class=\"line\"> &gt; awk  -F &apos;:&apos;  &apos;&#123;printf(&quot;filename:%s,linenumber:%s,columns:%s,linecontent:%s\\n&quot;,FILENAME,NR,NF,$0)&#125;&apos; /etc/passwd</div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\">## print和printf</div><div class=\"line\">awk中同时提供了print和printf两种打印输出的函数。</div><div class=\"line\"></div><div class=\"line\">其中print函数的参数可以是变量、数值或者字符串。字符串必须用双引号引用，参数用逗号分隔。如果没有逗号，参数就串联在一起而无法区分。这里，逗号的作用与输出文件的分隔符的作用是一样的，只是后者是空格而已。</div><div class=\"line\"></div><div class=\"line\">printf函数，其用法和c语言中printf基本相似,可以格式化字符串,输出复杂时，printf更加好用，代码更易懂。</div><div class=\"line\"></div><div class=\"line\">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% </div><div class=\"line\"></div><div class=\"line\">#  awk编程</div><div class=\"line\"> 变量和赋值</div><div class=\"line\"></div><div class=\"line\">除了awk的内置变量，awk还可以自定义变量。</div><div class=\"line\"></div><div class=\"line\">## 下面统计/etc/passwd的账户人数</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>awk ‘{count++;print $0;} END{print “user count is “, count}’ /etc/passwd<br>root:x:0:0:root:/root:/bin/bash<br>……<br>user count is  40</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">count是自定义变量。之前的action&#123;&#125;里都是只有一个print,其实print只是一个语句，而action&#123;&#125;可以有多个语句，以;号隔开。</div><div class=\"line\"></div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\">这里没有初始化count，虽然默认是0，但是妥当的做法还是初始化为0:</div></pre></td></tr></table></figure>\n<p>awk ‘BEGIN {count=0;print “[start]user count is “, count} {count=count+1;print $0;} END{print “[end]user count is “, count}’ /etc/passwd<br>[start]user count is  0<br>root:x:0:0:root:/root:/bin/bash<br>…<br>[end]user count is  40</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">统计某个文件夹下的文件占用的字节数</div></pre></td></tr></table></figure>\n<p>ls -l |awk ‘BEGIN {size=0;} {size=size+$5;} END{print “[end]size is “, size}’<br>[end]size is  8657198</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">如果以M为单位显示:</div></pre></td></tr></table></figure>\n<p>ls -l |awk ‘BEGIN {size=0;} {size=size+$5;} END{print “[end]size is “, size/1024/1024,”M”}’<br>[end]size is  8.25889 M</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">注意，统计不包括文件夹的子目录。</div><div class=\"line\"></div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\">### 条件语句</div><div class=\"line\"></div><div class=\"line\"> awk中的条件语句是从C语言中借鉴来的，见如下声明方式：</div></pre></td></tr></table></figure>\n<p>if (expression) {<br>    statement;<br>    statement;<br>    … …<br>}</p>\n<p>if (expression) {<br>    statement;<br>} else {<br>    statement2;<br>}</p>\n<p>if (expression) {<br>    statement1;<br>} else if (expression1) {<br>    statement2;<br>} else {<br>    statement3;<br>}</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">统计某个文件夹下的文件占用的字节数,过滤4096大小的文件(一般都是文件夹):</div></pre></td></tr></table></figure>\n<p>ls -l |awk ‘BEGIN {size=0;print “[start]size is “, size} {if($5!=4096){size=size+$5;}} END{print “[end]size is “, size/1024/1024,”M”}’<br>[end]size is  8.22339 M</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">### 循环语句</div><div class=\"line\"></div><div class=\"line\">awk中的循环语句同样借鉴于C语言，支持while、do/while、for、break、continue，这些关键字的语义和C语言中的语义完全相同。</div><div class=\"line\"></div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\">### 数组</div><div class=\"line\"></div><div class=\"line\">  因为awk中数组的下标可以是数字和字母，数组的下标通常被称为关键字(key)。值和关键字都存储在内部的一张针对key/value应用hash的表格里。由于hash不是顺序存储，因此在显示数组内容时会发现，它们并不是按照你预料的顺序显示出来的。数组和变量一样，都是在使用时自动创建的，awk也同样会自动判断其存储的是数字还是字符串。一般而言，awk中的数组用来从记录中收集信息，可以用于计算总和、统计单词以及跟踪模板被匹配的次数等等。</div><div class=\"line\"></div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\">显示/etc/passwd的账户</div></pre></td></tr></table></figure>\n<p>awk -F ‘:’ ‘BEGIN {count=0;} {name[count] = $1;count++;}; END{for (i = 0; i &lt; NR; i++) print i, name[i]}’ /etc/passwd<br>0 root<br>1 daemon<br>2 bin<br>3 sys<br>4 sync<br>5 games<br>……</p>\n<p>```<br>这里使用for循环遍历数组</p>\n<p>awk编程的内容极多，这里只罗列简单常用的用法，更多请参考 <a href=\"http://www.gnu.org/software/gawk/manual/gawk.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/software/gawk/manual/gawk.html</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>awk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。</p>\n<p>awk有3个不同版本: awk、nawk和gawk，未作特别说明，一般指gawk，gawk 是 AWK 的 GNU 版本。</p>\n<p>awk其名称得自于它的创始人 Alfred Aho 、Peter Weinberger 和 Brian Kernighan 姓氏的首个字母。实际上 AWK 的确拥有自己的语言： AWK 程序设计语言 ， 三位创建者已将它正式定义为“样式扫描和处理语言”。它允许您创建简短的程序，这些程序读取输入文件、为数据排序、处理数据、对输入执行计算以及生成报表，还有无数其他的功能。</p>\n<h1 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h1><blockquote>\n<p><code>awk &#39;{pattern + action}&#39; {filenames}</code></p>\n</blockquote>\n<p>尽管操作可能会很复杂，但语法总是这样，其中 pattern 表示 AWK 在数据中查找的内容，而 action 是在找到匹配内容时所执行的一系列命令。花括号（{}）不需要在程序中始终出现，但它们用于根据特定的模式对一系列指令进行分组。 pattern就是要表示的正则表达式，用斜杠括起来。</p>\n<p>awk语言的最基本功能是在文件或者字符串中基于指定规则浏览和抽取信息，awk抽取信息后，才能进行其他文本操作。完整的awk脚本通常用来格式化文本文件中的信息。</p>\n<p>通常，awk是以文件的一行为处理单位的。awk每接收文件的一行，然后执行相应的命令，来处理文本。</p>","more":"<h2 id=\"调用awk\"><a href=\"#调用awk\" class=\"headerlink\" title=\"调用awk\"></a>调用awk</h2><p>有三种方式调用awk</p>\n<h3 id=\"1-命令行方式\"><a href=\"#1-命令行方式\" class=\"headerlink\" title=\"1.命令行方式\"></a>1.命令行方式</h3><blockquote>\n<p>awk [-F  field-separator]  ‘commands’  input-file(s)<br>其中，commands 是真正awk命令，[-F域分隔符]是可选的。 input-file(s) 是待处理的文件。<br>在awk中，文件的每一行中，由域分隔符分开的每一项称为一个域。通常，在不指名-F域分隔符的情况下，默认的域分隔符是空格。</p>\n</blockquote>\n<h3 id=\"2-shell脚本方式\"><a href=\"#2-shell脚本方式\" class=\"headerlink\" title=\"2.shell脚本方式\"></a>2.shell脚本方式</h3><p>将所有的awk命令插入一个文件，并使awk程序可执行，然后awk命令解释器作为脚本的首行，一遍通过键入脚本名称来调用。<br>相当于shell脚本首行的：#!/bin/sh<br>可以换成：#!/bin/awk</p>\n<h3 id=\"3-将所有的awk命令插入一个单独文件，然后调用：\"><a href=\"#3-将所有的awk命令插入一个单独文件，然后调用：\" class=\"headerlink\" title=\"3.将所有的awk命令插入一个单独文件，然后调用：\"></a>3.将所有的awk命令插入一个单独文件，然后调用：</h3><blockquote>\n<p>awk -f awk-script-file input-file(s)<br>其中，-f选项加载awk-script-file中的awk脚本，input-file(s)跟上面的是一样的。</p>\n</blockquote>\n<p> 本章重点介绍命令行方式。</p>\n<h2 id=\"入门实例\"><a href=\"#入门实例\" class=\"headerlink\" title=\"入门实例\"></a>入门实例</h2><p>假设last -n 5的输出如下</p>\n<blockquote>\n<p>[root@www ~]# last -n 5 &lt;==仅取出前五行</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">root     pts/1   192.168.1.100  Tue Feb 10 11:21   still logged in</div><div class=\"line\">root     pts/1   192.168.1.100  Tue Feb 10 00:46 - 02:28  (01:41)</div><div class=\"line\">root     pts/1   192.168.1.100  Mon Feb  9 11:41 - 18:30  (06:48)</div><div class=\"line\">dmtsai   pts/1   192.168.1.100  Mon Feb  9 11:41 - 11:41  (00:00)</div><div class=\"line\">root     tty1                   Fri Sep  5 14:09 - 14:10  (00:01)</div></pre></td></tr></table></figure>\n<p>如果只是显示最近登录的5个帐号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">#last -n 5 | awk  &apos;&#123;print $1&#125;&apos;</div><div class=\"line\">root</div><div class=\"line\">root</div><div class=\"line\">root</div><div class=\"line\">dmtsai</div><div class=\"line\">root</div></pre></td></tr></table></figure>\n<p>awk工作流程是这样的：读入有’\\n’换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域。默认域分隔符是”空白键” 或 “[tab]键”,所以$1表示登录用户，$3表示登录用户ip,以此类推。</p>\n<p>如果只是显示/etc/passwd的账户</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">#cat /etc/passwd |awk  -F &apos;:&apos;  &apos;&#123;print $1&#125;&apos;  </div><div class=\"line\">root</div><div class=\"line\">daemon</div><div class=\"line\">bin</div><div class=\"line\">sys</div></pre></td></tr></table></figure>\n<p>这种是awk+action的示例，每行都会执行action{print $1}。</p>\n<blockquote>\n<p>-F指定域分隔符为’:’。</p>\n</blockquote>\n<p>如果只是显示/etc/passwd的账户和账户对应的shell,而账户与shell之间以tab键分割</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">#cat /etc/passwd |awk  -F &apos;:&apos;  &apos;&#123;print $1&quot;\\t&quot;$7&#125;&apos;</div><div class=\"line\">root    /bin/bash</div><div class=\"line\">daemon  /bin/sh</div><div class=\"line\">bin     /bin/sh</div><div class=\"line\">sys     /bin/sh</div><div class=\"line\"></div><div class=\"line\">``` </div><div class=\"line\"></div><div class=\"line\">如果只是显示/etc/passwd的账户和账户对应的shell,而账户与shell之间以逗号分割,而且在所有行添加列名name,shell,在最后一行添加&quot;blue,/bin/nosh&quot;。</div></pre></td></tr></table></figure>\n<p>cat /etc/passwd |awk  -F ‘:’  ‘BEGIN {print “name,shell”}  {print $1”,”$7} END {print “blue,/bin/nosh”}’<br>name,shell<br>root,/bin/bash<br>daemon,/bin/sh<br>bin,/bin/sh<br>sys,/bin/sh<br>….<br>blue,/bin/nosh</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">awk工作流程是这样的：先执行BEGING，然后读取文件，读入有/n换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域,随后开始执行模式所对应的动作action。接着开始读入第二条记录······直到所有的记录都读完，最后执行END操作。</div><div class=\"line\"></div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\">搜索/etc/passwd有root关键字的所有行</div><div class=\"line\"></div><div class=\"line\">&gt; #awk -F: &apos;/root/&apos; /etc/passwd</div><div class=\"line\">root:x:0:0:root:/root:/bin/bash</div><div class=\"line\">这种是pattern的使用示例，匹配了pattern(这里是root)的行才会执行action(没有指定action，默认输出每行的内容)。</div><div class=\"line\"></div><div class=\"line\">搜索支持正则，例如找root开头的: ```awk -F: &apos;/^root/&apos; /etc/passwd</div></pre></td></tr></table></figure>\n<p>搜索/etc/passwd有root关键字的所有行，并显示对应的shell</p>\n<blockquote>\n<h1 id=\"awk-F-‘-root-print-7-’-etc-passwd\"><a href=\"#awk-F-‘-root-print-7-’-etc-passwd\" class=\"headerlink\" title=\"awk -F: ‘/root/{print $7}’ /etc/passwd\"></a>awk -F: ‘/root/{print $7}’ /etc/passwd</h1><p>/bin/bash<br> 这里指定了action{print $7}</p>\n</blockquote>\n<h2 id=\"awk内置变量\"><a href=\"#awk内置变量\" class=\"headerlink\" title=\"awk内置变量\"></a>awk内置变量</h2><p>awk有许多内置变量用来设置环境信息，这些变量可以被改变，下面给出了最常用的一些变量。</p>\n<pre><code>ARGC               命令行参数个数\nARGV               命令行参数排列\nENVIRON            支持队列中系统环境变量的使用\nFILENAME           awk浏览的文件名\nFNR                浏览文件的记录数\nFS                 设置输入域分隔符，等价于命令行 -F选项\nNF                 浏览记录的域的个数\nNR                 已读的记录数\nOFS                输出域分隔符\nORS                输出记录分隔符\nRS                 控制记录分隔符\n</code></pre><p> 此外,$0变量是指整条记录。$1表示当前行的第一个域,$2表示当前行的第二个域,……以此类推。</p>\n<p>统计/etc/passwd:文件名，每行的行号，每行的列数，对应的完整行内容:</p>\n<blockquote>\n<p>#awk  -F ‘:’  ‘{print “filename:” FILENAME “,linenumber:” NR “,columns:” NF “,linecontent:”$0}’ /etc/passwd<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">filename:/etc/passwd,linenumber:1,columns:7,linecontent:root:x:0:0:root:/root:/bin/bash</div><div class=\"line\">filename:/etc/passwd,linenumber:2,columns:7,linecontent:daemon:x:1:1:daemon:/usr/sbin:/bin/sh</div><div class=\"line\">filename:/etc/passwd,linenumber:3,columns:7,linecontent:bin:x:2:2:bin:/bin:/bin/sh</div><div class=\"line\">filename:/etc/passwd,linenumber:4,columns:7,linecontent:sys:x:3:3:sys:/dev:/bin/sh</div><div class=\"line\"></div><div class=\"line\">``` </div><div class=\"line\"></div><div class=\"line\">使用printf替代print,可以让代码更加简洁，易读</div><div class=\"line\"></div><div class=\"line\"> &gt; awk  -F &apos;:&apos;  &apos;&#123;printf(&quot;filename:%s,linenumber:%s,columns:%s,linecontent:%s\\n&quot;,FILENAME,NR,NF,$0)&#125;&apos; /etc/passwd</div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\">## print和printf</div><div class=\"line\">awk中同时提供了print和printf两种打印输出的函数。</div><div class=\"line\"></div><div class=\"line\">其中print函数的参数可以是变量、数值或者字符串。字符串必须用双引号引用，参数用逗号分隔。如果没有逗号，参数就串联在一起而无法区分。这里，逗号的作用与输出文件的分隔符的作用是一样的，只是后者是空格而已。</div><div class=\"line\"></div><div class=\"line\">printf函数，其用法和c语言中printf基本相似,可以格式化字符串,输出复杂时，printf更加好用，代码更易懂。</div><div class=\"line\"></div><div class=\"line\">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% </div><div class=\"line\"></div><div class=\"line\">#  awk编程</div><div class=\"line\"> 变量和赋值</div><div class=\"line\"></div><div class=\"line\">除了awk的内置变量，awk还可以自定义变量。</div><div class=\"line\"></div><div class=\"line\">## 下面统计/etc/passwd的账户人数</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p>awk ‘{count++;print $0;} END{print “user count is “, count}’ /etc/passwd<br>root:x:0:0:root:/root:/bin/bash<br>……<br>user count is  40</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">count是自定义变量。之前的action&#123;&#125;里都是只有一个print,其实print只是一个语句，而action&#123;&#125;可以有多个语句，以;号隔开。</div><div class=\"line\"></div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\">这里没有初始化count，虽然默认是0，但是妥当的做法还是初始化为0:</div></pre></td></tr></table></figure>\n<p>awk ‘BEGIN {count=0;print “[start]user count is “, count} {count=count+1;print $0;} END{print “[end]user count is “, count}’ /etc/passwd<br>[start]user count is  0<br>root:x:0:0:root:/root:/bin/bash<br>…<br>[end]user count is  40</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">统计某个文件夹下的文件占用的字节数</div></pre></td></tr></table></figure>\n<p>ls -l |awk ‘BEGIN {size=0;} {size=size+$5;} END{print “[end]size is “, size}’<br>[end]size is  8657198</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">如果以M为单位显示:</div></pre></td></tr></table></figure>\n<p>ls -l |awk ‘BEGIN {size=0;} {size=size+$5;} END{print “[end]size is “, size/1024/1024,”M”}’<br>[end]size is  8.25889 M</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">注意，统计不包括文件夹的子目录。</div><div class=\"line\"></div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\">### 条件语句</div><div class=\"line\"></div><div class=\"line\"> awk中的条件语句是从C语言中借鉴来的，见如下声明方式：</div></pre></td></tr></table></figure>\n<p>if (expression) {<br>    statement;<br>    statement;<br>    … …<br>}</p>\n<p>if (expression) {<br>    statement;<br>} else {<br>    statement2;<br>}</p>\n<p>if (expression) {<br>    statement1;<br>} else if (expression1) {<br>    statement2;<br>} else {<br>    statement3;<br>}</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">统计某个文件夹下的文件占用的字节数,过滤4096大小的文件(一般都是文件夹):</div></pre></td></tr></table></figure>\n<p>ls -l |awk ‘BEGIN {size=0;print “[start]size is “, size} {if($5!=4096){size=size+$5;}} END{print “[end]size is “, size/1024/1024,”M”}’<br>[end]size is  8.22339 M</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">### 循环语句</div><div class=\"line\"></div><div class=\"line\">awk中的循环语句同样借鉴于C语言，支持while、do/while、for、break、continue，这些关键字的语义和C语言中的语义完全相同。</div><div class=\"line\"></div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\">### 数组</div><div class=\"line\"></div><div class=\"line\">  因为awk中数组的下标可以是数字和字母，数组的下标通常被称为关键字(key)。值和关键字都存储在内部的一张针对key/value应用hash的表格里。由于hash不是顺序存储，因此在显示数组内容时会发现，它们并不是按照你预料的顺序显示出来的。数组和变量一样，都是在使用时自动创建的，awk也同样会自动判断其存储的是数字还是字符串。一般而言，awk中的数组用来从记录中收集信息，可以用于计算总和、统计单词以及跟踪模板被匹配的次数等等。</div><div class=\"line\"></div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\">显示/etc/passwd的账户</div></pre></td></tr></table></figure>\n<p>awk -F ‘:’ ‘BEGIN {count=0;} {name[count] = $1;count++;}; END{for (i = 0; i &lt; NR; i++) print i, name[i]}’ /etc/passwd<br>0 root<br>1 daemon<br>2 bin<br>3 sys<br>4 sync<br>5 games<br>……</p>\n<p>```<br>这里使用for循环遍历数组</p>\n<p>awk编程的内容极多，这里只罗列简单常用的用法，更多请参考 <a href=\"http://www.gnu.org/software/gawk/manual/gawk.html\" target=\"_blank\" rel=\"external\">http://www.gnu.org/software/gawk/manual/gawk.html</a></p>"},{"title":"记录下hexo常用命令自己方便看","toc":true,"date":"2017-09-03T14:02:00.000Z","scaffolds":null,"_content":"\n```\n    Hexo常用命令：\n\n        hexo new \"postName\"       #新建文章\n        hexo new page \"pageName\"  #新建页面\n        hexo generate             #生成静态页面至public目录\n        hexo server               #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\n        hexo deploy               #将.deploy目录部署到GitHub\n```\n<!-- more -->\n简写\n    \n```\nhexo n == hexo new\nhexo g == hexo generate\nhexo s == hexo server\nhexo d == hexo deploy\n```\n\n复合命令\n\n```\n    hexo deploy -g\n    hexo server -g\n```    \n有时候生成的网页出错了，而生成的rss其实没有清除，那么用下面的命令，在重新生成吧\n    \n    hexo clean","source":"_posts/记录下hexo常用命令自己方便看.md","raw":"---\ntitle: 记录下hexo常用命令自己方便看\ntoc: true\ndate: 2017-09-03 22:02:00\ncategories: 工具\nscaffolds:\ntags: hexo\n---\n\n```\n    Hexo常用命令：\n\n        hexo new \"postName\"       #新建文章\n        hexo new page \"pageName\"  #新建页面\n        hexo generate             #生成静态页面至public目录\n        hexo server               #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\n        hexo deploy               #将.deploy目录部署到GitHub\n```\n<!-- more -->\n简写\n    \n```\nhexo n == hexo new\nhexo g == hexo generate\nhexo s == hexo server\nhexo d == hexo deploy\n```\n\n复合命令\n\n```\n    hexo deploy -g\n    hexo server -g\n```    \n有时候生成的网页出错了，而生成的rss其实没有清除，那么用下面的命令，在重新生成吧\n    \n    hexo clean","slug":"记录下hexo常用命令自己方便看","published":1,"updated":"2017-09-03T15:30:32.771Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9wugp0d0014h4v7rxjutu69","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">Hexo常用命令：</div><div class=\"line\"></div><div class=\"line\">    hexo new &quot;postName&quot;       #新建文章</div><div class=\"line\">    hexo new page &quot;pageName&quot;  #新建页面</div><div class=\"line\">    hexo generate             #生成静态页面至public目录</div><div class=\"line\">    hexo server               #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）</div><div class=\"line\">    hexo deploy               #将.deploy目录部署到GitHub</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>简写</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo n == hexo new</div><div class=\"line\">hexo g == hexo generate</div><div class=\"line\">hexo s == hexo server</div><div class=\"line\">hexo d == hexo deploy</div></pre></td></tr></table></figure>\n<p>复合命令</p>\n<pre><code>hexo deploy -g\nhexo server -g\n</code></pre><p>有时候生成的网页出错了，而生成的rss其实没有清除，那么用下面的命令，在重新生成吧</p>\n<pre><code>hexo clean\n</code></pre>","site":{"data":{}},"excerpt":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">Hexo常用命令：</div><div class=\"line\"></div><div class=\"line\">    hexo new &quot;postName&quot;       #新建文章</div><div class=\"line\">    hexo new page &quot;pageName&quot;  #新建页面</div><div class=\"line\">    hexo generate             #生成静态页面至public目录</div><div class=\"line\">    hexo server               #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）</div><div class=\"line\">    hexo deploy               #将.deploy目录部署到GitHub</div></pre></td></tr></table></figure>","more":"<p>简写</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo n == hexo new</div><div class=\"line\">hexo g == hexo generate</div><div class=\"line\">hexo s == hexo server</div><div class=\"line\">hexo d == hexo deploy</div></pre></td></tr></table></figure>\n<p>复合命令</p>\n<pre><code>hexo deploy -g\nhexo server -g\n</code></pre><p>有时候生成的网页出错了，而生成的rss其实没有清除，那么用下面的命令，在重新生成吧</p>\n<pre><code>hexo clean\n</code></pre>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj9wugoyu0000h4v7rtmxwbf5","category_id":"cj9wugoz80004h4v7c7aflco4","_id":"cj9wugozn000dh4v7s70qlhqz"},{"post_id":"cj9wugozl000ch4v75dkyrd8w","category_id":"cj9wugoz80004h4v7c7aflco4","_id":"cj9wugozs000ih4v798cmsv30"},{"post_id":"cj9wugoz40002h4v7ipifsb77","category_id":"cj9wugoz80004h4v7c7aflco4","_id":"cj9wugozw000mh4v7e5yy73za"},{"post_id":"cj9wugozr000hh4v7zfb9yu45","category_id":"cj9wugozo000fh4v7uw6i6t6m","_id":"cj9wugozz000ph4v7ffr1hjtv"},{"post_id":"cj9wugozb0006h4v7kei5g0fs","category_id":"cj9wugozo000fh4v7uw6i6t6m","_id":"cj9wugp03000uh4v7jutb2356"},{"post_id":"cj9wugozx000nh4v7x5zmcrd0","category_id":"cj9wugoz80004h4v7c7aflco4","_id":"cj9wugp06000xh4v7b0vjoexl"},{"post_id":"cj9wugozf0008h4v7hyd3zixa","category_id":"cj9wugozo000fh4v7uw6i6t6m","_id":"cj9wugp0a0011h4v7kxkavkuw"},{"post_id":"cj9wugozz000qh4v71xx4ei4i","category_id":"cj9wugoz80004h4v7c7aflco4","_id":"cj9wugp0c0013h4v7k00rgnd1"},{"post_id":"cj9wugp03000vh4v7h3sh7eyj","category_id":"cj9wugoz80004h4v7c7aflco4","_id":"cj9wugp0f0016h4v7ou9uhjhg"},{"post_id":"cj9wugozh0009h4v7jfeh0jxp","category_id":"cj9wugozo000fh4v7uw6i6t6m","_id":"cj9wugp0h0019h4v7268bl3tj"},{"post_id":"cj9wugp0a0012h4v7u6gqkjrv","category_id":"cj9wugoz80004h4v7c7aflco4","_id":"cj9wugp0j001ch4v7sttvfmjd"},{"post_id":"cj9wugozo000eh4v7whqminsp","category_id":"cj9wugp08000zh4v77d8qo84v","_id":"cj9wugp0k001fh4v7ejti5707"},{"post_id":"cj9wugp0d0014h4v7rxjutu69","category_id":"cj9wugozo000fh4v7uw6i6t6m","_id":"cj9wugp0l001gh4v77abhf3y3"},{"post_id":"cj9wugozt000jh4v7gfmz7vx3","category_id":"cj9wugp08000zh4v77d8qo84v","_id":"cj9wugp0m001ih4v70j7k07wq"},{"post_id":"cj9wugp06000yh4v7l7vqmwx7","category_id":"cj9wugp0h001ah4v7l7kz1mkm","_id":"cj9wugp0n001kh4v732d7ux40"}],"PostTag":[{"post_id":"cj9wugoyu0000h4v7rtmxwbf5","tag_id":"cj9wugozb0005h4v7lgszqzwc","_id":"cj9wugozy000oh4v75qxhsal4"},{"post_id":"cj9wugoyu0000h4v7rtmxwbf5","tag_id":"cj9wugozj000bh4v75ft4znco","_id":"cj9wugp01000sh4v7jsop0115"},{"post_id":"cj9wugoyu0000h4v7rtmxwbf5","tag_id":"cj9wugozp000gh4v7jspbdi43","_id":"cj9wugp05000wh4v7gb7fnpa4"},{"post_id":"cj9wugoz40002h4v7ipifsb77","tag_id":"cj9wugozb0005h4v7lgszqzwc","_id":"cj9wugp0g0018h4v7kcl8gko2"},{"post_id":"cj9wugoz40002h4v7ipifsb77","tag_id":"cj9wugozj000bh4v75ft4znco","_id":"cj9wugp0i001bh4v7gn7lihq9"},{"post_id":"cj9wugoz40002h4v7ipifsb77","tag_id":"cj9wugp090010h4v78d0hr7h5","_id":"cj9wugp0k001eh4v77uts8q10"},{"post_id":"cj9wugozb0006h4v7kei5g0fs","tag_id":"cj9wugp0f0017h4v7rljtjuil","_id":"cj9wugp0n001jh4v7v6zx1p55"},{"post_id":"cj9wugozb0006h4v7kei5g0fs","tag_id":"cj9wugp0j001dh4v7suhb07wc","_id":"cj9wugp0o001lh4v7x8t2lgqv"},{"post_id":"cj9wugozf0008h4v7hyd3zixa","tag_id":"cj9wugp0m001hh4v75sdkfqr4","_id":"cj9wugp0p001nh4v7n1dsd5yv"},{"post_id":"cj9wugozh0009h4v7jfeh0jxp","tag_id":"cj9wugp0o001mh4v7iwxqjshu","_id":"cj9wugp0s001qh4v741dn1czy"},{"post_id":"cj9wugozh0009h4v7jfeh0jxp","tag_id":"cj9wugp0j001dh4v7suhb07wc","_id":"cj9wugp0t001rh4v7x3nkftlx"},{"post_id":"cj9wugozl000ch4v75dkyrd8w","tag_id":"cj9wugozj000bh4v75ft4znco","_id":"cj9wugp0u001th4v787xtpqaj"},{"post_id":"cj9wugozl000ch4v75dkyrd8w","tag_id":"cj9wugozp000gh4v7jspbdi43","_id":"cj9wugp0u001uh4v7i5k40bq4"},{"post_id":"cj9wugozo000eh4v7whqminsp","tag_id":"cj9wugozj000bh4v75ft4znco","_id":"cj9wugp0w001wh4v7o0ac2qsw"},{"post_id":"cj9wugozo000eh4v7whqminsp","tag_id":"cj9wugozb0005h4v7lgszqzwc","_id":"cj9wugp0w001xh4v746wto18g"},{"post_id":"cj9wugozo000eh4v7whqminsp","tag_id":"cj9wugp0t001sh4v7b4mpndyr","_id":"cj9wugp0y001zh4v70txtdbgf"},{"post_id":"cj9wugozr000hh4v7zfb9yu45","tag_id":"cj9wugp0v001vh4v7kvqe55on","_id":"cj9wugp0z0020h4v7jqpfsctq"},{"post_id":"cj9wugozt000jh4v7gfmz7vx3","tag_id":"cj9wugozb0005h4v7lgszqzwc","_id":"cj9wugp100022h4v7qwzn5wad"},{"post_id":"cj9wugozt000jh4v7gfmz7vx3","tag_id":"cj9wugozj000bh4v75ft4znco","_id":"cj9wugp110023h4v7ob48hhfe"},{"post_id":"cj9wugozt000jh4v7gfmz7vx3","tag_id":"cj9wugp0t001sh4v7b4mpndyr","_id":"cj9wugp130025h4v7ffds1nhi"},{"post_id":"cj9wugozx000nh4v7x5zmcrd0","tag_id":"cj9wugozb0005h4v7lgszqzwc","_id":"cj9wugp140026h4v7y8iyj9ju"},{"post_id":"cj9wugozx000nh4v7x5zmcrd0","tag_id":"cj9wugozj000bh4v75ft4znco","_id":"cj9wugp160028h4v7tst26gls"},{"post_id":"cj9wugozx000nh4v7x5zmcrd0","tag_id":"cj9wugozp000gh4v7jspbdi43","_id":"cj9wugp170029h4v72qhetdpe"},{"post_id":"cj9wugozx000nh4v7x5zmcrd0","tag_id":"cj9wugp0t001sh4v7b4mpndyr","_id":"cj9wugp18002bh4v74voqthpu"},{"post_id":"cj9wugozz000qh4v71xx4ei4i","tag_id":"cj9wugozb0005h4v7lgszqzwc","_id":"cj9wugp19002ch4v7mhe2wy0v"},{"post_id":"cj9wugozz000qh4v71xx4ei4i","tag_id":"cj9wugozj000bh4v75ft4znco","_id":"cj9wugp1b002eh4v75tx4q502"},{"post_id":"cj9wugozz000qh4v71xx4ei4i","tag_id":"cj9wugozp000gh4v7jspbdi43","_id":"cj9wugp1b002fh4v7h1l607g4"},{"post_id":"cj9wugozz000qh4v71xx4ei4i","tag_id":"cj9wugp0t001sh4v7b4mpndyr","_id":"cj9wugp1c002gh4v7afu4eu4h"},{"post_id":"cj9wugp03000vh4v7h3sh7eyj","tag_id":"cj9wugozb0005h4v7lgszqzwc","_id":"cj9wugp1c002hh4v7sg4uiybh"},{"post_id":"cj9wugp03000vh4v7h3sh7eyj","tag_id":"cj9wugozj000bh4v75ft4znco","_id":"cj9wugp1c002ih4v7uml9uxaa"},{"post_id":"cj9wugp03000vh4v7h3sh7eyj","tag_id":"cj9wugozp000gh4v7jspbdi43","_id":"cj9wugp1d002jh4v7ia3gbscw"},{"post_id":"cj9wugp03000vh4v7h3sh7eyj","tag_id":"cj9wugp0t001sh4v7b4mpndyr","_id":"cj9wugp1d002kh4v76560vcim"},{"post_id":"cj9wugp0a0012h4v7u6gqkjrv","tag_id":"cj9wugozb0005h4v7lgszqzwc","_id":"cj9wugp1d002lh4v7cw4qzd4s"},{"post_id":"cj9wugp0a0012h4v7u6gqkjrv","tag_id":"cj9wugozj000bh4v75ft4znco","_id":"cj9wugp1e002mh4v7gglrony4"},{"post_id":"cj9wugp0a0012h4v7u6gqkjrv","tag_id":"cj9wugozp000gh4v7jspbdi43","_id":"cj9wugp1e002nh4v7158nd7z9"},{"post_id":"cj9wugp0a0012h4v7u6gqkjrv","tag_id":"cj9wugp0t001sh4v7b4mpndyr","_id":"cj9wugp1e002oh4v7aq0fccn5"},{"post_id":"cj9wugp0d0014h4v7rxjutu69","tag_id":"cj9wugp0m001hh4v75sdkfqr4","_id":"cj9wugp1e002ph4v70xxpzdh9"}],"Tag":[{"name":"大数据","_id":"cj9wugozb0005h4v7lgszqzwc"},{"name":"linux","_id":"cj9wugozj000bh4v75ft4znco"},{"name":"centos7","_id":"cj9wugozp000gh4v7jspbdi43"},{"name":"mysql","_id":"cj9wugp090010h4v78d0hr7h5"},{"name":"vscode","_id":"cj9wugp0f0017h4v7rljtjuil"},{"name":"快捷键","_id":"cj9wugp0j001dh4v7suhb07wc"},{"name":"hexo","_id":"cj9wugp0m001hh4v75sdkfqr4"},{"name":"idea","_id":"cj9wugp0o001mh4v7iwxqjshu"},{"name":"linux命令","_id":"cj9wugp0t001sh4v7b4mpndyr"},{"name":"vagrant","_id":"cj9wugp0v001vh4v7kvqe55on"}]}}